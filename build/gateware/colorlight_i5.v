// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : colorlight_i5.v
// Device     : LFE5U-25F-6BG381C
// LiteX sha1 : fb1cd22a
// Date       : 2023-06-15 03:24:59
//------------------------------------------------------------------------------

`timescale 1ns / 1ps

//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module colorlight_i5 (
    output reg           serial_tx,
    input  wire          serial_rx,
    input  wire          clk25,
    input  wire          cpu_reset_n0,
    output wire          sdram_clock,
    output wire   [10:0] sdram_a,
    input  wire   [31:0] sdram_dq,
    output wire          sdram_we_n,
    output wire          sdram_ras_n,
    output wire          sdram_cas_n,
    output wire    [1:0] sdram_ba,
    input  wire          eth_clocks_ref_clk,
    input  wire    [1:0] eth_rx_data,
    input  wire          eth_crs_dv,
    output reg           eth_tx_en,
    output reg     [1:0] eth_tx_data,
    input  wire          i2c_sda,
    input  wire          i2c_scl,
    output reg           spi0_cs_n,
    output reg           spi0_clk,
    output reg           spi0_mosi,
    input  wire          spi0_miso,
    output wire          user_led0
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg           __main___basesoc_soc_rst = 1'd0;
wire          __main___basesoc_cpu_rst;
reg     [1:0] __main___basesoc_reset_storage = 2'd0;
reg           __main___basesoc_reset_re = 1'd0;
reg    [31:0] __main___basesoc_scratch_storage = 32'd305419896;
reg           __main___basesoc_scratch_re = 1'd0;
wire   [31:0] __main___basesoc_bus_errors_status;
wire          __main___basesoc_bus_errors_we;
reg           __main___basesoc_bus_errors_re = 1'd0;
wire          __main___basesoc_bus_error;
reg    [31:0] __main___basesoc_bus_errors = 32'd0;
wire          __main___basesoc_reset;
reg    [31:0] __main___basesoc_interrupt = 32'd0;
wire   [29:0] __main___basesoc_ibus_adr;
wire   [31:0] __main___basesoc_ibus_dat_w;
wire   [31:0] __main___basesoc_ibus_dat_r;
wire    [3:0] __main___basesoc_ibus_sel;
wire          __main___basesoc_ibus_cyc;
wire          __main___basesoc_ibus_stb;
wire          __main___basesoc_ibus_ack;
wire          __main___basesoc_ibus_we;
wire    [2:0] __main___basesoc_ibus_cti;
wire    [1:0] __main___basesoc_ibus_bte;
wire          __main___basesoc_ibus_err;
wire   [29:0] __main___basesoc_dbus_adr;
wire   [31:0] __main___basesoc_dbus_dat_w;
wire   [31:0] __main___basesoc_dbus_dat_r;
wire    [3:0] __main___basesoc_dbus_sel;
wire          __main___basesoc_dbus_cyc;
wire          __main___basesoc_dbus_stb;
wire          __main___basesoc_dbus_ack;
wire          __main___basesoc_dbus_we;
wire    [2:0] __main___basesoc_dbus_cti;
wire    [1:0] __main___basesoc_dbus_bte;
wire          __main___basesoc_dbus_err;
reg    [31:0] __main___basesoc_vexriscv = 32'd0;
wire   [29:0] __main___basesoc_basesoc_ram_bus_adr;
wire   [31:0] __main___basesoc_basesoc_ram_bus_dat_w;
wire   [31:0] __main___basesoc_basesoc_ram_bus_dat_r;
wire    [3:0] __main___basesoc_basesoc_ram_bus_sel;
wire          __main___basesoc_basesoc_ram_bus_cyc;
wire          __main___basesoc_basesoc_ram_bus_stb;
reg           __main___basesoc_basesoc_ram_bus_ack = 1'd0;
wire          __main___basesoc_basesoc_ram_bus_we;
wire    [2:0] __main___basesoc_basesoc_ram_bus_cti;
wire    [1:0] __main___basesoc_basesoc_ram_bus_bte;
reg           __main___basesoc_basesoc_ram_bus_err = 1'd0;
reg           __main___basesoc_basesoc_adr_burst = 1'd0;
wire   [13:0] __main___basesoc_basesoc_adr;
wire   [31:0] __main___basesoc_basesoc_dat_r;
wire   [29:0] __main___basesoc_ram_bus_ram_bus_adr;
wire   [31:0] __main___basesoc_ram_bus_ram_bus_dat_w;
wire   [31:0] __main___basesoc_ram_bus_ram_bus_dat_r;
wire    [3:0] __main___basesoc_ram_bus_ram_bus_sel;
wire          __main___basesoc_ram_bus_ram_bus_cyc;
wire          __main___basesoc_ram_bus_ram_bus_stb;
reg           __main___basesoc_ram_bus_ram_bus_ack = 1'd0;
wire          __main___basesoc_ram_bus_ram_bus_we;
wire    [2:0] __main___basesoc_ram_bus_ram_bus_cti;
wire    [1:0] __main___basesoc_ram_bus_ram_bus_bte;
reg           __main___basesoc_ram_bus_ram_bus_err = 1'd0;
reg           __main___basesoc_ram_adr_burst = 1'd0;
wire   [10:0] __main___basesoc_ram_adr;
wire   [31:0] __main___basesoc_ram_dat_r;
reg     [3:0] __main___basesoc_ram_we = 4'd0;
wire   [31:0] __main___basesoc_ram_dat_w;
wire          __main___basesoc_tx_sink_valid;
reg           __main___basesoc_tx_sink_ready = 1'd0;
wire          __main___basesoc_tx_sink_first;
wire          __main___basesoc_tx_sink_last;
wire    [7:0] __main___basesoc_tx_sink_payload_data;
reg     [7:0] __main___basesoc_tx_data = 8'd0;
reg     [3:0] __main___basesoc_tx_count = 4'd0;
reg           __main___basesoc_tx_enable = 1'd0;
reg           __main___basesoc_tx_tick = 1'd0;
reg    [31:0] __main___basesoc_tx_phase = 32'd0;
reg           __main___basesoc_rx_source_valid = 1'd0;
wire          __main___basesoc_rx_source_ready;
reg           __main___basesoc_rx_source_first = 1'd0;
reg           __main___basesoc_rx_source_last = 1'd0;
reg     [7:0] __main___basesoc_rx_source_payload_data = 8'd0;
reg     [7:0] __main___basesoc_rx_data = 8'd0;
reg     [3:0] __main___basesoc_rx_count = 4'd0;
reg           __main___basesoc_rx_enable = 1'd0;
reg           __main___basesoc_rx_tick = 1'd0;
reg    [31:0] __main___basesoc_rx_phase = 32'd0;
wire          __main___basesoc_rx_rx;
reg           __main___basesoc_rx_rx_d = 1'd0;
reg           __main___basesoc_uart_rxtx_re = 1'd0;
wire    [7:0] __main___basesoc_uart_rxtx_r;
reg           __main___basesoc_uart_rxtx_we = 1'd0;
wire    [7:0] __main___basesoc_uart_rxtx_w;
wire          __main___basesoc_uart_txfull_status;
wire          __main___basesoc_uart_txfull_we;
reg           __main___basesoc_uart_txfull_re = 1'd0;
wire          __main___basesoc_uart_rxempty_status;
wire          __main___basesoc_uart_rxempty_we;
reg           __main___basesoc_uart_rxempty_re = 1'd0;
wire          __main___basesoc_uart_irq;
wire          __main___basesoc_uart_tx_status;
reg           __main___basesoc_uart_tx_pending = 1'd0;
wire          __main___basesoc_uart_tx_trigger;
reg           __main___basesoc_uart_tx_clear = 1'd0;
reg           __main___basesoc_uart_tx_trigger_d = 1'd0;
wire          __main___basesoc_uart_rx_status;
reg           __main___basesoc_uart_rx_pending = 1'd0;
wire          __main___basesoc_uart_rx_trigger;
reg           __main___basesoc_uart_rx_clear = 1'd0;
reg           __main___basesoc_uart_rx_trigger_d = 1'd0;
wire          __main___basesoc_uart_tx0;
wire          __main___basesoc_uart_rx0;
reg     [1:0] __main___basesoc_uart_status_status = 2'd0;
wire          __main___basesoc_uart_status_we;
reg           __main___basesoc_uart_status_re = 1'd0;
wire          __main___basesoc_uart_tx1;
wire          __main___basesoc_uart_rx1;
reg     [1:0] __main___basesoc_uart_pending_status = 2'd0;
wire          __main___basesoc_uart_pending_we;
reg           __main___basesoc_uart_pending_re = 1'd0;
reg     [1:0] __main___basesoc_uart_pending_r = 2'd0;
wire          __main___basesoc_uart_tx2;
wire          __main___basesoc_uart_rx2;
reg     [1:0] __main___basesoc_uart_enable_storage = 2'd0;
reg           __main___basesoc_uart_enable_re = 1'd0;
wire          __main___basesoc_uart_txempty_status;
wire          __main___basesoc_uart_txempty_we;
reg           __main___basesoc_uart_txempty_re = 1'd0;
wire          __main___basesoc_uart_rxfull_status;
wire          __main___basesoc_uart_rxfull_we;
reg           __main___basesoc_uart_rxfull_re = 1'd0;
wire          __main___basesoc_uart_uart_sink_valid;
wire          __main___basesoc_uart_uart_sink_ready;
wire          __main___basesoc_uart_uart_sink_first;
wire          __main___basesoc_uart_uart_sink_last;
wire    [7:0] __main___basesoc_uart_uart_sink_payload_data;
wire          __main___basesoc_uart_uart_source_valid;
wire          __main___basesoc_uart_uart_source_ready;
wire          __main___basesoc_uart_uart_source_first;
wire          __main___basesoc_uart_uart_source_last;
wire    [7:0] __main___basesoc_uart_uart_source_payload_data;
wire          __main___basesoc_uart_tx_fifo_sink_valid;
wire          __main___basesoc_uart_tx_fifo_sink_ready;
reg           __main___basesoc_uart_tx_fifo_sink_first = 1'd0;
reg           __main___basesoc_uart_tx_fifo_sink_last = 1'd0;
wire    [7:0] __main___basesoc_uart_tx_fifo_sink_payload_data;
wire          __main___basesoc_uart_tx_fifo_source_valid;
wire          __main___basesoc_uart_tx_fifo_source_ready;
wire          __main___basesoc_uart_tx_fifo_source_first;
wire          __main___basesoc_uart_tx_fifo_source_last;
wire    [7:0] __main___basesoc_uart_tx_fifo_source_payload_data;
wire          __main___basesoc_uart_tx_fifo_re;
reg           __main___basesoc_uart_tx_fifo_readable = 1'd0;
wire          __main___basesoc_uart_tx_fifo_syncfifo_we;
wire          __main___basesoc_uart_tx_fifo_syncfifo_writable;
wire          __main___basesoc_uart_tx_fifo_syncfifo_re;
wire          __main___basesoc_uart_tx_fifo_syncfifo_readable;
wire    [9:0] __main___basesoc_uart_tx_fifo_syncfifo_din;
wire    [9:0] __main___basesoc_uart_tx_fifo_syncfifo_dout;
reg     [4:0] __main___basesoc_uart_tx_fifo_level0 = 5'd0;
reg           __main___basesoc_uart_tx_fifo_replace = 1'd0;
reg     [3:0] __main___basesoc_uart_tx_fifo_produce = 4'd0;
reg     [3:0] __main___basesoc_uart_tx_fifo_consume = 4'd0;
reg     [3:0] __main___basesoc_uart_tx_fifo_wrport_adr = 4'd0;
wire    [9:0] __main___basesoc_uart_tx_fifo_wrport_dat_r;
wire          __main___basesoc_uart_tx_fifo_wrport_we;
wire    [9:0] __main___basesoc_uart_tx_fifo_wrport_dat_w;
wire          __main___basesoc_uart_tx_fifo_do_read;
wire    [3:0] __main___basesoc_uart_tx_fifo_rdport_adr;
wire    [9:0] __main___basesoc_uart_tx_fifo_rdport_dat_r;
wire          __main___basesoc_uart_tx_fifo_rdport_re;
wire    [4:0] __main___basesoc_uart_tx_fifo_level1;
wire    [7:0] __main___basesoc_uart_tx_fifo_fifo_in_payload_data;
wire          __main___basesoc_uart_tx_fifo_fifo_in_first;
wire          __main___basesoc_uart_tx_fifo_fifo_in_last;
wire    [7:0] __main___basesoc_uart_tx_fifo_fifo_out_payload_data;
wire          __main___basesoc_uart_tx_fifo_fifo_out_first;
wire          __main___basesoc_uart_tx_fifo_fifo_out_last;
wire          __main___basesoc_uart_rx_fifo_sink_valid;
wire          __main___basesoc_uart_rx_fifo_sink_ready;
wire          __main___basesoc_uart_rx_fifo_sink_first;
wire          __main___basesoc_uart_rx_fifo_sink_last;
wire    [7:0] __main___basesoc_uart_rx_fifo_sink_payload_data;
wire          __main___basesoc_uart_rx_fifo_source_valid;
wire          __main___basesoc_uart_rx_fifo_source_ready;
wire          __main___basesoc_uart_rx_fifo_source_first;
wire          __main___basesoc_uart_rx_fifo_source_last;
wire    [7:0] __main___basesoc_uart_rx_fifo_source_payload_data;
wire          __main___basesoc_uart_rx_fifo_re;
reg           __main___basesoc_uart_rx_fifo_readable = 1'd0;
wire          __main___basesoc_uart_rx_fifo_syncfifo_we;
wire          __main___basesoc_uart_rx_fifo_syncfifo_writable;
wire          __main___basesoc_uart_rx_fifo_syncfifo_re;
wire          __main___basesoc_uart_rx_fifo_syncfifo_readable;
wire    [9:0] __main___basesoc_uart_rx_fifo_syncfifo_din;
wire    [9:0] __main___basesoc_uart_rx_fifo_syncfifo_dout;
reg     [4:0] __main___basesoc_uart_rx_fifo_level0 = 5'd0;
reg           __main___basesoc_uart_rx_fifo_replace = 1'd0;
reg     [3:0] __main___basesoc_uart_rx_fifo_produce = 4'd0;
reg     [3:0] __main___basesoc_uart_rx_fifo_consume = 4'd0;
reg     [3:0] __main___basesoc_uart_rx_fifo_wrport_adr = 4'd0;
wire    [9:0] __main___basesoc_uart_rx_fifo_wrport_dat_r;
wire          __main___basesoc_uart_rx_fifo_wrport_we;
wire    [9:0] __main___basesoc_uart_rx_fifo_wrport_dat_w;
wire          __main___basesoc_uart_rx_fifo_do_read;
wire    [3:0] __main___basesoc_uart_rx_fifo_rdport_adr;
wire    [9:0] __main___basesoc_uart_rx_fifo_rdport_dat_r;
wire          __main___basesoc_uart_rx_fifo_rdport_re;
wire    [4:0] __main___basesoc_uart_rx_fifo_level1;
wire    [7:0] __main___basesoc_uart_rx_fifo_fifo_in_payload_data;
wire          __main___basesoc_uart_rx_fifo_fifo_in_first;
wire          __main___basesoc_uart_rx_fifo_fifo_in_last;
wire    [7:0] __main___basesoc_uart_rx_fifo_fifo_out_payload_data;
wire          __main___basesoc_uart_rx_fifo_fifo_out_first;
wire          __main___basesoc_uart_rx_fifo_fifo_out_last;
reg    [31:0] __main___basesoc_timer_load_storage = 32'd0;
reg           __main___basesoc_timer_load_re = 1'd0;
reg    [31:0] __main___basesoc_timer_reload_storage = 32'd0;
reg           __main___basesoc_timer_reload_re = 1'd0;
reg           __main___basesoc_timer_en_storage = 1'd0;
reg           __main___basesoc_timer_en_re = 1'd0;
reg           __main___basesoc_timer_update_value_storage = 1'd0;
reg           __main___basesoc_timer_update_value_re = 1'd0;
reg    [31:0] __main___basesoc_timer_value_status = 32'd0;
wire          __main___basesoc_timer_value_we;
reg           __main___basesoc_timer_value_re = 1'd0;
wire          __main___basesoc_timer_irq;
wire          __main___basesoc_timer_zero_status;
reg           __main___basesoc_timer_zero_pending = 1'd0;
wire          __main___basesoc_timer_zero_trigger;
reg           __main___basesoc_timer_zero_clear = 1'd0;
reg           __main___basesoc_timer_zero_trigger_d = 1'd0;
wire          __main___basesoc_timer_zero0;
wire          __main___basesoc_timer_status_status;
wire          __main___basesoc_timer_status_we;
reg           __main___basesoc_timer_status_re = 1'd0;
wire          __main___basesoc_timer_zero1;
wire          __main___basesoc_timer_pending_status;
wire          __main___basesoc_timer_pending_we;
reg           __main___basesoc_timer_pending_re = 1'd0;
reg           __main___basesoc_timer_pending_r = 1'd0;
wire          __main___basesoc_timer_zero2;
reg           __main___basesoc_timer_enable_storage = 1'd0;
reg           __main___basesoc_timer_enable_re = 1'd0;
reg    [31:0] __main___basesoc_timer_value = 32'd0;
reg           __main___basesoc_uptime_latch_storage = 1'd0;
reg           __main___basesoc_uptime_latch_re = 1'd0;
reg    [63:0] __main___basesoc_uptime_cycles_status = 64'd0;
wire          __main___basesoc_uptime_cycles_we;
reg           __main___basesoc_uptime_cycles_re = 1'd0;
reg    [63:0] __main___basesoc_uptime_cycles = 64'd0;
reg           __main___crg_rst = 1'd0;
(* keep = "true" *)
wire          sys_clk;
wire          sys_rst;
wire          sys2x_clk;
wire          sys2x_rst;
wire          sys2x_ps_clk;
wire          sys2x_ps_rst;
wire          __main___crg_reset;
wire          __main___crg_locked;
reg           __main___crg_stdby = 1'd0;
wire          __main___crg_clkin;
wire          __main___crg_clkout0;
wire          __main___crg_clkout1;
wire          __main___crg_clkout2;
wire   [10:0] __main___dfi_p0_address;
wire    [1:0] __main___dfi_p0_bank;
wire          __main___dfi_p0_cas_n;
wire          __main___dfi_p0_cs_n;
wire          __main___dfi_p0_ras_n;
wire          __main___dfi_p0_we_n;
wire          __main___dfi_p0_cke;
wire          __main___dfi_p0_odt;
wire          __main___dfi_p0_reset_n;
wire          __main___dfi_p0_act_n;
wire   [31:0] __main___dfi_p0_wrdata;
wire          __main___dfi_p0_wrdata_en;
wire    [3:0] __main___dfi_p0_wrdata_mask;
wire          __main___dfi_p0_rddata_en;
wire   [31:0] __main___dfi_p0_rddata;
reg           __main___dfi_p0_rddata_valid = 1'd0;
reg     [2:0] __main___rddata_en = 3'd0;
wire   [10:0] __main___basesoc_sdram_slave_p0_address;
wire    [1:0] __main___basesoc_sdram_slave_p0_bank;
wire          __main___basesoc_sdram_slave_p0_cas_n;
wire          __main___basesoc_sdram_slave_p0_cs_n;
wire          __main___basesoc_sdram_slave_p0_ras_n;
wire          __main___basesoc_sdram_slave_p0_we_n;
wire          __main___basesoc_sdram_slave_p0_cke;
wire          __main___basesoc_sdram_slave_p0_odt;
wire          __main___basesoc_sdram_slave_p0_reset_n;
wire          __main___basesoc_sdram_slave_p0_act_n;
wire   [31:0] __main___basesoc_sdram_slave_p0_wrdata;
wire          __main___basesoc_sdram_slave_p0_wrdata_en;
wire    [3:0] __main___basesoc_sdram_slave_p0_wrdata_mask;
wire          __main___basesoc_sdram_slave_p0_rddata_en;
reg    [31:0] __main___basesoc_sdram_slave_p0_rddata = 32'd0;
reg           __main___basesoc_sdram_slave_p0_rddata_valid = 1'd0;
reg    [10:0] __main___basesoc_sdram_master_p0_address = 11'd0;
reg     [1:0] __main___basesoc_sdram_master_p0_bank = 2'd0;
reg           __main___basesoc_sdram_master_p0_cas_n = 1'd1;
reg           __main___basesoc_sdram_master_p0_cs_n = 1'd1;
reg           __main___basesoc_sdram_master_p0_ras_n = 1'd1;
reg           __main___basesoc_sdram_master_p0_we_n = 1'd1;
reg           __main___basesoc_sdram_master_p0_cke = 1'd0;
reg           __main___basesoc_sdram_master_p0_odt = 1'd0;
reg           __main___basesoc_sdram_master_p0_reset_n = 1'd0;
reg           __main___basesoc_sdram_master_p0_act_n = 1'd1;
reg    [31:0] __main___basesoc_sdram_master_p0_wrdata = 32'd0;
reg           __main___basesoc_sdram_master_p0_wrdata_en = 1'd0;
reg     [3:0] __main___basesoc_sdram_master_p0_wrdata_mask = 4'd0;
reg           __main___basesoc_sdram_master_p0_rddata_en = 1'd0;
wire   [31:0] __main___basesoc_sdram_master_p0_rddata;
wire          __main___basesoc_sdram_master_p0_rddata_valid;
wire   [10:0] __main___basesoc_sdram_csr_dfi_p0_address;
wire    [1:0] __main___basesoc_sdram_csr_dfi_p0_bank;
reg           __main___basesoc_sdram_csr_dfi_p0_cas_n = 1'd1;
reg           __main___basesoc_sdram_csr_dfi_p0_cs_n = 1'd1;
reg           __main___basesoc_sdram_csr_dfi_p0_ras_n = 1'd1;
reg           __main___basesoc_sdram_csr_dfi_p0_we_n = 1'd1;
wire          __main___basesoc_sdram_csr_dfi_p0_cke;
wire          __main___basesoc_sdram_csr_dfi_p0_odt;
wire          __main___basesoc_sdram_csr_dfi_p0_reset_n;
reg           __main___basesoc_sdram_csr_dfi_p0_act_n = 1'd1;
wire   [31:0] __main___basesoc_sdram_csr_dfi_p0_wrdata;
wire          __main___basesoc_sdram_csr_dfi_p0_wrdata_en;
wire    [3:0] __main___basesoc_sdram_csr_dfi_p0_wrdata_mask;
wire          __main___basesoc_sdram_csr_dfi_p0_rddata_en;
reg    [31:0] __main___basesoc_sdram_csr_dfi_p0_rddata = 32'd0;
reg           __main___basesoc_sdram_csr_dfi_p0_rddata_valid = 1'd0;
reg    [10:0] __main___basesoc_sdram_ext_dfi_p0_address = 11'd0;
reg     [1:0] __main___basesoc_sdram_ext_dfi_p0_bank = 2'd0;
reg           __main___basesoc_sdram_ext_dfi_p0_cas_n = 1'd1;
reg           __main___basesoc_sdram_ext_dfi_p0_cs_n = 1'd1;
reg           __main___basesoc_sdram_ext_dfi_p0_ras_n = 1'd1;
reg           __main___basesoc_sdram_ext_dfi_p0_we_n = 1'd1;
reg           __main___basesoc_sdram_ext_dfi_p0_cke = 1'd0;
reg           __main___basesoc_sdram_ext_dfi_p0_odt = 1'd0;
reg           __main___basesoc_sdram_ext_dfi_p0_reset_n = 1'd0;
reg           __main___basesoc_sdram_ext_dfi_p0_act_n = 1'd1;
reg    [31:0] __main___basesoc_sdram_ext_dfi_p0_wrdata = 32'd0;
reg           __main___basesoc_sdram_ext_dfi_p0_wrdata_en = 1'd0;
reg     [3:0] __main___basesoc_sdram_ext_dfi_p0_wrdata_mask = 4'd0;
reg           __main___basesoc_sdram_ext_dfi_p0_rddata_en = 1'd0;
reg    [31:0] __main___basesoc_sdram_ext_dfi_p0_rddata = 32'd0;
reg           __main___basesoc_sdram_ext_dfi_p0_rddata_valid = 1'd0;
reg           __main___basesoc_sdram_ext_dfi_sel = 1'd0;
wire          __main___basesoc_sdram_sel;
wire          __main___basesoc_sdram_cke;
wire          __main___basesoc_sdram_odt;
wire          __main___basesoc_sdram_reset_n;
reg     [3:0] __main___basesoc_sdram_storage = 4'd1;
reg           __main___basesoc_sdram_re = 1'd0;
wire          __main___basesoc_sdram_csrfield_cs;
wire          __main___basesoc_sdram_csrfield_we;
wire          __main___basesoc_sdram_csrfield_cas;
wire          __main___basesoc_sdram_csrfield_ras;
wire          __main___basesoc_sdram_csrfield_wren;
wire          __main___basesoc_sdram_csrfield_rden;
reg     [5:0] __main___basesoc_sdram_command_storage = 6'd0;
reg           __main___basesoc_sdram_command_re = 1'd0;
reg           __main___basesoc_sdram_command_issue_re = 1'd0;
wire          __main___basesoc_sdram_command_issue_r;
reg           __main___basesoc_sdram_command_issue_we = 1'd0;
reg           __main___basesoc_sdram_command_issue_w = 1'd0;
reg    [10:0] __main___basesoc_sdram_address_storage = 11'd0;
reg           __main___basesoc_sdram_address_re = 1'd0;
reg     [1:0] __main___basesoc_sdram_baddress_storage = 2'd0;
reg           __main___basesoc_sdram_baddress_re = 1'd0;
reg    [31:0] __main___basesoc_sdram_wrdata_storage = 32'd0;
reg           __main___basesoc_sdram_wrdata_re = 1'd0;
reg    [31:0] __main___basesoc_sdram_rddata_status = 32'd0;
wire          __main___basesoc_sdram_rddata_we;
reg           __main___basesoc_sdram_rddata_re = 1'd0;
wire          __main___basesoc_sdram_interface_bank0_valid;
wire          __main___basesoc_sdram_interface_bank0_ready;
wire          __main___basesoc_sdram_interface_bank0_we;
wire   [18:0] __main___basesoc_sdram_interface_bank0_addr;
wire          __main___basesoc_sdram_interface_bank0_lock;
wire          __main___basesoc_sdram_interface_bank0_wdata_ready;
wire          __main___basesoc_sdram_interface_bank0_rdata_valid;
wire          __main___basesoc_sdram_interface_bank1_valid;
wire          __main___basesoc_sdram_interface_bank1_ready;
wire          __main___basesoc_sdram_interface_bank1_we;
wire   [18:0] __main___basesoc_sdram_interface_bank1_addr;
wire          __main___basesoc_sdram_interface_bank1_lock;
wire          __main___basesoc_sdram_interface_bank1_wdata_ready;
wire          __main___basesoc_sdram_interface_bank1_rdata_valid;
wire          __main___basesoc_sdram_interface_bank2_valid;
wire          __main___basesoc_sdram_interface_bank2_ready;
wire          __main___basesoc_sdram_interface_bank2_we;
wire   [18:0] __main___basesoc_sdram_interface_bank2_addr;
wire          __main___basesoc_sdram_interface_bank2_lock;
wire          __main___basesoc_sdram_interface_bank2_wdata_ready;
wire          __main___basesoc_sdram_interface_bank2_rdata_valid;
wire          __main___basesoc_sdram_interface_bank3_valid;
wire          __main___basesoc_sdram_interface_bank3_ready;
wire          __main___basesoc_sdram_interface_bank3_we;
wire   [18:0] __main___basesoc_sdram_interface_bank3_addr;
wire          __main___basesoc_sdram_interface_bank3_lock;
wire          __main___basesoc_sdram_interface_bank3_wdata_ready;
wire          __main___basesoc_sdram_interface_bank3_rdata_valid;
reg    [31:0] __main___basesoc_sdram_interface_wdata = 32'd0;
reg     [3:0] __main___basesoc_sdram_interface_wdata_we = 4'd0;
wire   [31:0] __main___basesoc_sdram_interface_rdata;
reg    [10:0] __main___basesoc_sdram_dfi_p0_address = 11'd0;
reg     [1:0] __main___basesoc_sdram_dfi_p0_bank = 2'd0;
reg           __main___basesoc_sdram_dfi_p0_cas_n = 1'd1;
reg           __main___basesoc_sdram_dfi_p0_cs_n = 1'd1;
reg           __main___basesoc_sdram_dfi_p0_ras_n = 1'd1;
reg           __main___basesoc_sdram_dfi_p0_we_n = 1'd1;
wire          __main___basesoc_sdram_dfi_p0_cke;
wire          __main___basesoc_sdram_dfi_p0_odt;
wire          __main___basesoc_sdram_dfi_p0_reset_n;
reg           __main___basesoc_sdram_dfi_p0_act_n = 1'd1;
wire   [31:0] __main___basesoc_sdram_dfi_p0_wrdata;
reg           __main___basesoc_sdram_dfi_p0_wrdata_en = 1'd0;
wire    [3:0] __main___basesoc_sdram_dfi_p0_wrdata_mask;
reg           __main___basesoc_sdram_dfi_p0_rddata_en = 1'd0;
wire   [31:0] __main___basesoc_sdram_dfi_p0_rddata;
wire          __main___basesoc_sdram_dfi_p0_rddata_valid;
reg           __main___basesoc_sdram_cmd_valid = 1'd0;
reg           __main___basesoc_sdram_cmd_ready = 1'd0;
reg           __main___basesoc_sdram_cmd_last = 1'd0;
reg    [10:0] __main___basesoc_sdram_cmd_payload_a = 11'd0;
reg     [1:0] __main___basesoc_sdram_cmd_payload_ba = 2'd0;
reg           __main___basesoc_sdram_cmd_payload_cas = 1'd0;
reg           __main___basesoc_sdram_cmd_payload_ras = 1'd0;
reg           __main___basesoc_sdram_cmd_payload_we = 1'd0;
reg           __main___basesoc_sdram_cmd_payload_is_read = 1'd0;
reg           __main___basesoc_sdram_cmd_payload_is_write = 1'd0;
wire          __main___basesoc_sdram_wants_refresh;
wire          __main___basesoc_sdram_timer_wait;
wire          __main___basesoc_sdram_timer_done0;
wire   [10:0] __main___basesoc_sdram_timer_count0;
wire          __main___basesoc_sdram_timer_done1;
reg    [10:0] __main___basesoc_sdram_timer_count1 = 11'd1562;
wire          __main___basesoc_sdram_postponer_req_i;
reg           __main___basesoc_sdram_postponer_req_o = 1'd0;
reg           __main___basesoc_sdram_postponer_count = 1'd0;
reg           __main___basesoc_sdram_sequencer_start0 = 1'd0;
wire          __main___basesoc_sdram_sequencer_done0;
wire          __main___basesoc_sdram_sequencer_start1;
reg           __main___basesoc_sdram_sequencer_done1 = 1'd0;
reg     [3:0] __main___basesoc_sdram_sequencer_counter = 4'd0;
reg           __main___basesoc_sdram_sequencer_count = 1'd0;
wire          __main___basesoc_sdram_bankmachine0_req_valid;
wire          __main___basesoc_sdram_bankmachine0_req_ready;
wire          __main___basesoc_sdram_bankmachine0_req_we;
wire   [18:0] __main___basesoc_sdram_bankmachine0_req_addr;
wire          __main___basesoc_sdram_bankmachine0_req_lock;
reg           __main___basesoc_sdram_bankmachine0_req_wdata_ready = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_req_rdata_valid = 1'd0;
wire          __main___basesoc_sdram_bankmachine0_refresh_req;
reg           __main___basesoc_sdram_bankmachine0_refresh_gnt = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_cmd_valid = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_cmd_ready = 1'd0;
reg    [10:0] __main___basesoc_sdram_bankmachine0_cmd_payload_a = 11'd0;
wire    [1:0] __main___basesoc_sdram_bankmachine0_cmd_payload_ba;
reg           __main___basesoc_sdram_bankmachine0_cmd_payload_cas = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_cmd_payload_ras = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_cmd_payload_we = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_cmd_payload_is_read = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_cmd_payload_is_write = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_auto_precharge = 1'd0;
wire          __main___basesoc_sdram_bankmachine0_sink_valid;
wire          __main___basesoc_sdram_bankmachine0_sink_ready;
reg           __main___basesoc_sdram_bankmachine0_sink_first = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_sink_last = 1'd0;
wire          __main___basesoc_sdram_bankmachine0_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine0_sink_payload_addr;
wire          __main___basesoc_sdram_bankmachine0_source_valid;
wire          __main___basesoc_sdram_bankmachine0_source_ready;
wire          __main___basesoc_sdram_bankmachine0_source_first;
wire          __main___basesoc_sdram_bankmachine0_source_last;
wire          __main___basesoc_sdram_bankmachine0_source_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine0_source_payload_addr;
wire          __main___basesoc_sdram_bankmachine0_syncfifo0_we;
wire          __main___basesoc_sdram_bankmachine0_syncfifo0_writable;
wire          __main___basesoc_sdram_bankmachine0_syncfifo0_re;
wire          __main___basesoc_sdram_bankmachine0_syncfifo0_readable;
wire   [21:0] __main___basesoc_sdram_bankmachine0_syncfifo0_din;
wire   [21:0] __main___basesoc_sdram_bankmachine0_syncfifo0_dout;
reg     [3:0] __main___basesoc_sdram_bankmachine0_level = 4'd0;
reg           __main___basesoc_sdram_bankmachine0_replace = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine0_produce = 3'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine0_consume = 3'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine0_wrport_adr = 3'd0;
wire   [21:0] __main___basesoc_sdram_bankmachine0_wrport_dat_r;
wire          __main___basesoc_sdram_bankmachine0_wrport_we;
wire   [21:0] __main___basesoc_sdram_bankmachine0_wrport_dat_w;
wire          __main___basesoc_sdram_bankmachine0_do_read;
wire    [2:0] __main___basesoc_sdram_bankmachine0_rdport_adr;
wire   [21:0] __main___basesoc_sdram_bankmachine0_rdport_dat_r;
wire          __main___basesoc_sdram_bankmachine0_fifo_in_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine0_fifo_in_payload_addr;
wire          __main___basesoc_sdram_bankmachine0_fifo_in_first;
wire          __main___basesoc_sdram_bankmachine0_fifo_in_last;
wire          __main___basesoc_sdram_bankmachine0_fifo_out_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine0_fifo_out_payload_addr;
wire          __main___basesoc_sdram_bankmachine0_fifo_out_first;
wire          __main___basesoc_sdram_bankmachine0_fifo_out_last;
wire          __main___basesoc_sdram_bankmachine0_sink_sink_valid;
wire          __main___basesoc_sdram_bankmachine0_sink_sink_ready;
wire          __main___basesoc_sdram_bankmachine0_sink_sink_first;
wire          __main___basesoc_sdram_bankmachine0_sink_sink_last;
wire          __main___basesoc_sdram_bankmachine0_sink_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine0_sink_sink_payload_addr;
wire          __main___basesoc_sdram_bankmachine0_source_source_valid;
wire          __main___basesoc_sdram_bankmachine0_source_source_ready;
wire          __main___basesoc_sdram_bankmachine0_source_source_first;
wire          __main___basesoc_sdram_bankmachine0_source_source_last;
wire          __main___basesoc_sdram_bankmachine0_source_source_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine0_source_source_payload_addr;
wire          __main___basesoc_sdram_bankmachine0_pipe_valid_sink_valid;
wire          __main___basesoc_sdram_bankmachine0_pipe_valid_sink_ready;
wire          __main___basesoc_sdram_bankmachine0_pipe_valid_sink_first;
wire          __main___basesoc_sdram_bankmachine0_pipe_valid_sink_last;
wire          __main___basesoc_sdram_bankmachine0_pipe_valid_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine0_pipe_valid_sink_payload_addr;
reg           __main___basesoc_sdram_bankmachine0_pipe_valid_source_valid = 1'd0;
wire          __main___basesoc_sdram_bankmachine0_pipe_valid_source_ready;
reg           __main___basesoc_sdram_bankmachine0_pipe_valid_source_first = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_pipe_valid_source_last = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_pipe_valid_source_payload_we = 1'd0;
reg    [18:0] __main___basesoc_sdram_bankmachine0_pipe_valid_source_payload_addr = 19'd0;
reg    [10:0] __main___basesoc_sdram_bankmachine0_row = 11'd0;
reg           __main___basesoc_sdram_bankmachine0_row_opened = 1'd0;
wire          __main___basesoc_sdram_bankmachine0_row_hit;
reg           __main___basesoc_sdram_bankmachine0_row_open = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_row_close = 1'd0;
reg           __main___basesoc_sdram_bankmachine0_row_col_n_addr_sel = 1'd0;
wire          __main___basesoc_sdram_bankmachine0_twtpcon_valid;
reg           __main___basesoc_sdram_bankmachine0_twtpcon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine0_twtpcon_count = 3'd0;
wire          __main___basesoc_sdram_bankmachine0_trccon_valid;
reg           __main___basesoc_sdram_bankmachine0_trccon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine0_trccon_count = 3'd0;
wire          __main___basesoc_sdram_bankmachine0_trascon_valid;
reg           __main___basesoc_sdram_bankmachine0_trascon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine0_trascon_count = 3'd0;
wire          __main___basesoc_sdram_bankmachine1_req_valid;
wire          __main___basesoc_sdram_bankmachine1_req_ready;
wire          __main___basesoc_sdram_bankmachine1_req_we;
wire   [18:0] __main___basesoc_sdram_bankmachine1_req_addr;
wire          __main___basesoc_sdram_bankmachine1_req_lock;
reg           __main___basesoc_sdram_bankmachine1_req_wdata_ready = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_req_rdata_valid = 1'd0;
wire          __main___basesoc_sdram_bankmachine1_refresh_req;
reg           __main___basesoc_sdram_bankmachine1_refresh_gnt = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_cmd_valid = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_cmd_ready = 1'd0;
reg    [10:0] __main___basesoc_sdram_bankmachine1_cmd_payload_a = 11'd0;
wire    [1:0] __main___basesoc_sdram_bankmachine1_cmd_payload_ba;
reg           __main___basesoc_sdram_bankmachine1_cmd_payload_cas = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_cmd_payload_ras = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_cmd_payload_we = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_cmd_payload_is_read = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_cmd_payload_is_write = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_auto_precharge = 1'd0;
wire          __main___basesoc_sdram_bankmachine1_sink_valid;
wire          __main___basesoc_sdram_bankmachine1_sink_ready;
reg           __main___basesoc_sdram_bankmachine1_sink_first = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_sink_last = 1'd0;
wire          __main___basesoc_sdram_bankmachine1_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine1_sink_payload_addr;
wire          __main___basesoc_sdram_bankmachine1_source_valid;
wire          __main___basesoc_sdram_bankmachine1_source_ready;
wire          __main___basesoc_sdram_bankmachine1_source_first;
wire          __main___basesoc_sdram_bankmachine1_source_last;
wire          __main___basesoc_sdram_bankmachine1_source_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine1_source_payload_addr;
wire          __main___basesoc_sdram_bankmachine1_syncfifo1_we;
wire          __main___basesoc_sdram_bankmachine1_syncfifo1_writable;
wire          __main___basesoc_sdram_bankmachine1_syncfifo1_re;
wire          __main___basesoc_sdram_bankmachine1_syncfifo1_readable;
wire   [21:0] __main___basesoc_sdram_bankmachine1_syncfifo1_din;
wire   [21:0] __main___basesoc_sdram_bankmachine1_syncfifo1_dout;
reg     [3:0] __main___basesoc_sdram_bankmachine1_level = 4'd0;
reg           __main___basesoc_sdram_bankmachine1_replace = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine1_produce = 3'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine1_consume = 3'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine1_wrport_adr = 3'd0;
wire   [21:0] __main___basesoc_sdram_bankmachine1_wrport_dat_r;
wire          __main___basesoc_sdram_bankmachine1_wrport_we;
wire   [21:0] __main___basesoc_sdram_bankmachine1_wrport_dat_w;
wire          __main___basesoc_sdram_bankmachine1_do_read;
wire    [2:0] __main___basesoc_sdram_bankmachine1_rdport_adr;
wire   [21:0] __main___basesoc_sdram_bankmachine1_rdport_dat_r;
wire          __main___basesoc_sdram_bankmachine1_fifo_in_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine1_fifo_in_payload_addr;
wire          __main___basesoc_sdram_bankmachine1_fifo_in_first;
wire          __main___basesoc_sdram_bankmachine1_fifo_in_last;
wire          __main___basesoc_sdram_bankmachine1_fifo_out_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine1_fifo_out_payload_addr;
wire          __main___basesoc_sdram_bankmachine1_fifo_out_first;
wire          __main___basesoc_sdram_bankmachine1_fifo_out_last;
wire          __main___basesoc_sdram_bankmachine1_sink_sink_valid;
wire          __main___basesoc_sdram_bankmachine1_sink_sink_ready;
wire          __main___basesoc_sdram_bankmachine1_sink_sink_first;
wire          __main___basesoc_sdram_bankmachine1_sink_sink_last;
wire          __main___basesoc_sdram_bankmachine1_sink_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine1_sink_sink_payload_addr;
wire          __main___basesoc_sdram_bankmachine1_source_source_valid;
wire          __main___basesoc_sdram_bankmachine1_source_source_ready;
wire          __main___basesoc_sdram_bankmachine1_source_source_first;
wire          __main___basesoc_sdram_bankmachine1_source_source_last;
wire          __main___basesoc_sdram_bankmachine1_source_source_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine1_source_source_payload_addr;
wire          __main___basesoc_sdram_bankmachine1_pipe_valid_sink_valid;
wire          __main___basesoc_sdram_bankmachine1_pipe_valid_sink_ready;
wire          __main___basesoc_sdram_bankmachine1_pipe_valid_sink_first;
wire          __main___basesoc_sdram_bankmachine1_pipe_valid_sink_last;
wire          __main___basesoc_sdram_bankmachine1_pipe_valid_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine1_pipe_valid_sink_payload_addr;
reg           __main___basesoc_sdram_bankmachine1_pipe_valid_source_valid = 1'd0;
wire          __main___basesoc_sdram_bankmachine1_pipe_valid_source_ready;
reg           __main___basesoc_sdram_bankmachine1_pipe_valid_source_first = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_pipe_valid_source_last = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_pipe_valid_source_payload_we = 1'd0;
reg    [18:0] __main___basesoc_sdram_bankmachine1_pipe_valid_source_payload_addr = 19'd0;
reg    [10:0] __main___basesoc_sdram_bankmachine1_row = 11'd0;
reg           __main___basesoc_sdram_bankmachine1_row_opened = 1'd0;
wire          __main___basesoc_sdram_bankmachine1_row_hit;
reg           __main___basesoc_sdram_bankmachine1_row_open = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_row_close = 1'd0;
reg           __main___basesoc_sdram_bankmachine1_row_col_n_addr_sel = 1'd0;
wire          __main___basesoc_sdram_bankmachine1_twtpcon_valid;
reg           __main___basesoc_sdram_bankmachine1_twtpcon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine1_twtpcon_count = 3'd0;
wire          __main___basesoc_sdram_bankmachine1_trccon_valid;
reg           __main___basesoc_sdram_bankmachine1_trccon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine1_trccon_count = 3'd0;
wire          __main___basesoc_sdram_bankmachine1_trascon_valid;
reg           __main___basesoc_sdram_bankmachine1_trascon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine1_trascon_count = 3'd0;
wire          __main___basesoc_sdram_bankmachine2_req_valid;
wire          __main___basesoc_sdram_bankmachine2_req_ready;
wire          __main___basesoc_sdram_bankmachine2_req_we;
wire   [18:0] __main___basesoc_sdram_bankmachine2_req_addr;
wire          __main___basesoc_sdram_bankmachine2_req_lock;
reg           __main___basesoc_sdram_bankmachine2_req_wdata_ready = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_req_rdata_valid = 1'd0;
wire          __main___basesoc_sdram_bankmachine2_refresh_req;
reg           __main___basesoc_sdram_bankmachine2_refresh_gnt = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_cmd_valid = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_cmd_ready = 1'd0;
reg    [10:0] __main___basesoc_sdram_bankmachine2_cmd_payload_a = 11'd0;
wire    [1:0] __main___basesoc_sdram_bankmachine2_cmd_payload_ba;
reg           __main___basesoc_sdram_bankmachine2_cmd_payload_cas = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_cmd_payload_ras = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_cmd_payload_we = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_cmd_payload_is_read = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_cmd_payload_is_write = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_auto_precharge = 1'd0;
wire          __main___basesoc_sdram_bankmachine2_sink_valid;
wire          __main___basesoc_sdram_bankmachine2_sink_ready;
reg           __main___basesoc_sdram_bankmachine2_sink_first = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_sink_last = 1'd0;
wire          __main___basesoc_sdram_bankmachine2_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine2_sink_payload_addr;
wire          __main___basesoc_sdram_bankmachine2_source_valid;
wire          __main___basesoc_sdram_bankmachine2_source_ready;
wire          __main___basesoc_sdram_bankmachine2_source_first;
wire          __main___basesoc_sdram_bankmachine2_source_last;
wire          __main___basesoc_sdram_bankmachine2_source_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine2_source_payload_addr;
wire          __main___basesoc_sdram_bankmachine2_syncfifo2_we;
wire          __main___basesoc_sdram_bankmachine2_syncfifo2_writable;
wire          __main___basesoc_sdram_bankmachine2_syncfifo2_re;
wire          __main___basesoc_sdram_bankmachine2_syncfifo2_readable;
wire   [21:0] __main___basesoc_sdram_bankmachine2_syncfifo2_din;
wire   [21:0] __main___basesoc_sdram_bankmachine2_syncfifo2_dout;
reg     [3:0] __main___basesoc_sdram_bankmachine2_level = 4'd0;
reg           __main___basesoc_sdram_bankmachine2_replace = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine2_produce = 3'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine2_consume = 3'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine2_wrport_adr = 3'd0;
wire   [21:0] __main___basesoc_sdram_bankmachine2_wrport_dat_r;
wire          __main___basesoc_sdram_bankmachine2_wrport_we;
wire   [21:0] __main___basesoc_sdram_bankmachine2_wrport_dat_w;
wire          __main___basesoc_sdram_bankmachine2_do_read;
wire    [2:0] __main___basesoc_sdram_bankmachine2_rdport_adr;
wire   [21:0] __main___basesoc_sdram_bankmachine2_rdport_dat_r;
wire          __main___basesoc_sdram_bankmachine2_fifo_in_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine2_fifo_in_payload_addr;
wire          __main___basesoc_sdram_bankmachine2_fifo_in_first;
wire          __main___basesoc_sdram_bankmachine2_fifo_in_last;
wire          __main___basesoc_sdram_bankmachine2_fifo_out_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine2_fifo_out_payload_addr;
wire          __main___basesoc_sdram_bankmachine2_fifo_out_first;
wire          __main___basesoc_sdram_bankmachine2_fifo_out_last;
wire          __main___basesoc_sdram_bankmachine2_sink_sink_valid;
wire          __main___basesoc_sdram_bankmachine2_sink_sink_ready;
wire          __main___basesoc_sdram_bankmachine2_sink_sink_first;
wire          __main___basesoc_sdram_bankmachine2_sink_sink_last;
wire          __main___basesoc_sdram_bankmachine2_sink_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine2_sink_sink_payload_addr;
wire          __main___basesoc_sdram_bankmachine2_source_source_valid;
wire          __main___basesoc_sdram_bankmachine2_source_source_ready;
wire          __main___basesoc_sdram_bankmachine2_source_source_first;
wire          __main___basesoc_sdram_bankmachine2_source_source_last;
wire          __main___basesoc_sdram_bankmachine2_source_source_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine2_source_source_payload_addr;
wire          __main___basesoc_sdram_bankmachine2_pipe_valid_sink_valid;
wire          __main___basesoc_sdram_bankmachine2_pipe_valid_sink_ready;
wire          __main___basesoc_sdram_bankmachine2_pipe_valid_sink_first;
wire          __main___basesoc_sdram_bankmachine2_pipe_valid_sink_last;
wire          __main___basesoc_sdram_bankmachine2_pipe_valid_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine2_pipe_valid_sink_payload_addr;
reg           __main___basesoc_sdram_bankmachine2_pipe_valid_source_valid = 1'd0;
wire          __main___basesoc_sdram_bankmachine2_pipe_valid_source_ready;
reg           __main___basesoc_sdram_bankmachine2_pipe_valid_source_first = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_pipe_valid_source_last = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_pipe_valid_source_payload_we = 1'd0;
reg    [18:0] __main___basesoc_sdram_bankmachine2_pipe_valid_source_payload_addr = 19'd0;
reg    [10:0] __main___basesoc_sdram_bankmachine2_row = 11'd0;
reg           __main___basesoc_sdram_bankmachine2_row_opened = 1'd0;
wire          __main___basesoc_sdram_bankmachine2_row_hit;
reg           __main___basesoc_sdram_bankmachine2_row_open = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_row_close = 1'd0;
reg           __main___basesoc_sdram_bankmachine2_row_col_n_addr_sel = 1'd0;
wire          __main___basesoc_sdram_bankmachine2_twtpcon_valid;
reg           __main___basesoc_sdram_bankmachine2_twtpcon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine2_twtpcon_count = 3'd0;
wire          __main___basesoc_sdram_bankmachine2_trccon_valid;
reg           __main___basesoc_sdram_bankmachine2_trccon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine2_trccon_count = 3'd0;
wire          __main___basesoc_sdram_bankmachine2_trascon_valid;
reg           __main___basesoc_sdram_bankmachine2_trascon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine2_trascon_count = 3'd0;
wire          __main___basesoc_sdram_bankmachine3_req_valid;
wire          __main___basesoc_sdram_bankmachine3_req_ready;
wire          __main___basesoc_sdram_bankmachine3_req_we;
wire   [18:0] __main___basesoc_sdram_bankmachine3_req_addr;
wire          __main___basesoc_sdram_bankmachine3_req_lock;
reg           __main___basesoc_sdram_bankmachine3_req_wdata_ready = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_req_rdata_valid = 1'd0;
wire          __main___basesoc_sdram_bankmachine3_refresh_req;
reg           __main___basesoc_sdram_bankmachine3_refresh_gnt = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_cmd_valid = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_cmd_ready = 1'd0;
reg    [10:0] __main___basesoc_sdram_bankmachine3_cmd_payload_a = 11'd0;
wire    [1:0] __main___basesoc_sdram_bankmachine3_cmd_payload_ba;
reg           __main___basesoc_sdram_bankmachine3_cmd_payload_cas = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_cmd_payload_ras = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_cmd_payload_we = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_cmd_payload_is_read = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_cmd_payload_is_write = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_auto_precharge = 1'd0;
wire          __main___basesoc_sdram_bankmachine3_sink_valid;
wire          __main___basesoc_sdram_bankmachine3_sink_ready;
reg           __main___basesoc_sdram_bankmachine3_sink_first = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_sink_last = 1'd0;
wire          __main___basesoc_sdram_bankmachine3_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine3_sink_payload_addr;
wire          __main___basesoc_sdram_bankmachine3_source_valid;
wire          __main___basesoc_sdram_bankmachine3_source_ready;
wire          __main___basesoc_sdram_bankmachine3_source_first;
wire          __main___basesoc_sdram_bankmachine3_source_last;
wire          __main___basesoc_sdram_bankmachine3_source_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine3_source_payload_addr;
wire          __main___basesoc_sdram_bankmachine3_syncfifo3_we;
wire          __main___basesoc_sdram_bankmachine3_syncfifo3_writable;
wire          __main___basesoc_sdram_bankmachine3_syncfifo3_re;
wire          __main___basesoc_sdram_bankmachine3_syncfifo3_readable;
wire   [21:0] __main___basesoc_sdram_bankmachine3_syncfifo3_din;
wire   [21:0] __main___basesoc_sdram_bankmachine3_syncfifo3_dout;
reg     [3:0] __main___basesoc_sdram_bankmachine3_level = 4'd0;
reg           __main___basesoc_sdram_bankmachine3_replace = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine3_produce = 3'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine3_consume = 3'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine3_wrport_adr = 3'd0;
wire   [21:0] __main___basesoc_sdram_bankmachine3_wrport_dat_r;
wire          __main___basesoc_sdram_bankmachine3_wrport_we;
wire   [21:0] __main___basesoc_sdram_bankmachine3_wrport_dat_w;
wire          __main___basesoc_sdram_bankmachine3_do_read;
wire    [2:0] __main___basesoc_sdram_bankmachine3_rdport_adr;
wire   [21:0] __main___basesoc_sdram_bankmachine3_rdport_dat_r;
wire          __main___basesoc_sdram_bankmachine3_fifo_in_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine3_fifo_in_payload_addr;
wire          __main___basesoc_sdram_bankmachine3_fifo_in_first;
wire          __main___basesoc_sdram_bankmachine3_fifo_in_last;
wire          __main___basesoc_sdram_bankmachine3_fifo_out_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine3_fifo_out_payload_addr;
wire          __main___basesoc_sdram_bankmachine3_fifo_out_first;
wire          __main___basesoc_sdram_bankmachine3_fifo_out_last;
wire          __main___basesoc_sdram_bankmachine3_sink_sink_valid;
wire          __main___basesoc_sdram_bankmachine3_sink_sink_ready;
wire          __main___basesoc_sdram_bankmachine3_sink_sink_first;
wire          __main___basesoc_sdram_bankmachine3_sink_sink_last;
wire          __main___basesoc_sdram_bankmachine3_sink_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine3_sink_sink_payload_addr;
wire          __main___basesoc_sdram_bankmachine3_source_source_valid;
wire          __main___basesoc_sdram_bankmachine3_source_source_ready;
wire          __main___basesoc_sdram_bankmachine3_source_source_first;
wire          __main___basesoc_sdram_bankmachine3_source_source_last;
wire          __main___basesoc_sdram_bankmachine3_source_source_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine3_source_source_payload_addr;
wire          __main___basesoc_sdram_bankmachine3_pipe_valid_sink_valid;
wire          __main___basesoc_sdram_bankmachine3_pipe_valid_sink_ready;
wire          __main___basesoc_sdram_bankmachine3_pipe_valid_sink_first;
wire          __main___basesoc_sdram_bankmachine3_pipe_valid_sink_last;
wire          __main___basesoc_sdram_bankmachine3_pipe_valid_sink_payload_we;
wire   [18:0] __main___basesoc_sdram_bankmachine3_pipe_valid_sink_payload_addr;
reg           __main___basesoc_sdram_bankmachine3_pipe_valid_source_valid = 1'd0;
wire          __main___basesoc_sdram_bankmachine3_pipe_valid_source_ready;
reg           __main___basesoc_sdram_bankmachine3_pipe_valid_source_first = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_pipe_valid_source_last = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_pipe_valid_source_payload_we = 1'd0;
reg    [18:0] __main___basesoc_sdram_bankmachine3_pipe_valid_source_payload_addr = 19'd0;
reg    [10:0] __main___basesoc_sdram_bankmachine3_row = 11'd0;
reg           __main___basesoc_sdram_bankmachine3_row_opened = 1'd0;
wire          __main___basesoc_sdram_bankmachine3_row_hit;
reg           __main___basesoc_sdram_bankmachine3_row_open = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_row_close = 1'd0;
reg           __main___basesoc_sdram_bankmachine3_row_col_n_addr_sel = 1'd0;
wire          __main___basesoc_sdram_bankmachine3_twtpcon_valid;
reg           __main___basesoc_sdram_bankmachine3_twtpcon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine3_twtpcon_count = 3'd0;
wire          __main___basesoc_sdram_bankmachine3_trccon_valid;
reg           __main___basesoc_sdram_bankmachine3_trccon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine3_trccon_count = 3'd0;
wire          __main___basesoc_sdram_bankmachine3_trascon_valid;
reg           __main___basesoc_sdram_bankmachine3_trascon_ready = 1'd0;
reg     [2:0] __main___basesoc_sdram_bankmachine3_trascon_count = 3'd0;
wire          __main___basesoc_sdram_ras_allowed;
wire          __main___basesoc_sdram_cas_allowed;
reg           __main___basesoc_sdram_choose_cmd_want_reads = 1'd0;
reg           __main___basesoc_sdram_choose_cmd_want_writes = 1'd0;
reg           __main___basesoc_sdram_choose_cmd_want_cmds = 1'd0;
reg           __main___basesoc_sdram_choose_cmd_want_activates = 1'd0;
wire          __main___basesoc_sdram_choose_cmd_cmd_valid;
reg           __main___basesoc_sdram_choose_cmd_cmd_ready = 1'd0;
wire   [10:0] __main___basesoc_sdram_choose_cmd_cmd_payload_a;
wire    [1:0] __main___basesoc_sdram_choose_cmd_cmd_payload_ba;
reg           __main___basesoc_sdram_choose_cmd_cmd_payload_cas = 1'd0;
reg           __main___basesoc_sdram_choose_cmd_cmd_payload_ras = 1'd0;
reg           __main___basesoc_sdram_choose_cmd_cmd_payload_we = 1'd0;
wire          __main___basesoc_sdram_choose_cmd_cmd_payload_is_cmd;
wire          __main___basesoc_sdram_choose_cmd_cmd_payload_is_read;
wire          __main___basesoc_sdram_choose_cmd_cmd_payload_is_write;
reg     [3:0] __main___basesoc_sdram_choose_cmd_valids = 4'd0;
wire    [3:0] __main___basesoc_sdram_choose_cmd_request;
reg     [1:0] __main___basesoc_sdram_choose_cmd_grant = 2'd0;
wire          __main___basesoc_sdram_choose_cmd_ce;
reg           __main___basesoc_sdram_choose_req_want_reads = 1'd0;
reg           __main___basesoc_sdram_choose_req_want_writes = 1'd0;
wire          __main___basesoc_sdram_choose_req_want_cmds;
reg           __main___basesoc_sdram_choose_req_want_activates = 1'd0;
wire          __main___basesoc_sdram_choose_req_cmd_valid;
reg           __main___basesoc_sdram_choose_req_cmd_ready = 1'd0;
wire   [10:0] __main___basesoc_sdram_choose_req_cmd_payload_a;
wire    [1:0] __main___basesoc_sdram_choose_req_cmd_payload_ba;
reg           __main___basesoc_sdram_choose_req_cmd_payload_cas = 1'd0;
reg           __main___basesoc_sdram_choose_req_cmd_payload_ras = 1'd0;
reg           __main___basesoc_sdram_choose_req_cmd_payload_we = 1'd0;
wire          __main___basesoc_sdram_choose_req_cmd_payload_is_cmd;
wire          __main___basesoc_sdram_choose_req_cmd_payload_is_read;
wire          __main___basesoc_sdram_choose_req_cmd_payload_is_write;
reg     [3:0] __main___basesoc_sdram_choose_req_valids = 4'd0;
wire    [3:0] __main___basesoc_sdram_choose_req_request;
reg     [1:0] __main___basesoc_sdram_choose_req_grant = 2'd0;
wire          __main___basesoc_sdram_choose_req_ce;
reg    [10:0] __main___basesoc_sdram_nop_a = 11'd0;
reg     [1:0] __main___basesoc_sdram_nop_ba = 2'd0;
reg     [1:0] __main___basesoc_sdram_steerer_sel = 2'd0;
reg           __main___basesoc_sdram_steerer0 = 1'd1;
reg           __main___basesoc_sdram_steerer1 = 1'd1;
wire          __main___basesoc_sdram_trrdcon_valid;
reg           __main___basesoc_sdram_trrdcon_ready = 1'd0;
reg           __main___basesoc_sdram_trrdcon_count = 1'd0;
wire          __main___basesoc_sdram_tfawcon_valid;
reg           __main___basesoc_sdram_tfawcon_ready = 1'd1;
wire          __main___basesoc_sdram_tccdcon_valid;
reg           __main___basesoc_sdram_tccdcon_ready = 1'd0;
reg           __main___basesoc_sdram_tccdcon_count = 1'd0;
wire          __main___basesoc_sdram_twtrcon_valid;
reg           __main___basesoc_sdram_twtrcon_ready = 1'd0;
reg     [1:0] __main___basesoc_sdram_twtrcon_count = 2'd0;
wire          __main___basesoc_sdram_read_available;
wire          __main___basesoc_sdram_write_available;
reg           __main___basesoc_sdram_en0 = 1'd0;
wire          __main___basesoc_sdram_max_time0;
reg     [4:0] __main___basesoc_sdram_time0 = 5'd0;
reg           __main___basesoc_sdram_en1 = 1'd0;
wire          __main___basesoc_sdram_max_time1;
reg     [3:0] __main___basesoc_sdram_time1 = 4'd0;
wire          __main___basesoc_sdram_go_to_refresh;
reg           __main___basesoc_port_cmd_valid = 1'd0;
wire          __main___basesoc_port_cmd_ready;
reg           __main___basesoc_port_cmd_payload_we = 1'd0;
reg    [20:0] __main___basesoc_port_cmd_payload_addr = 21'd0;
wire          __main___basesoc_port_wdata_valid;
wire          __main___basesoc_port_wdata_ready;
wire          __main___basesoc_port_wdata_first;
wire          __main___basesoc_port_wdata_last;
wire   [31:0] __main___basesoc_port_wdata_payload_data;
wire    [3:0] __main___basesoc_port_wdata_payload_we;
wire          __main___basesoc_port_rdata_valid;
wire          __main___basesoc_port_rdata_ready;
reg           __main___basesoc_port_rdata_first = 1'd0;
reg           __main___basesoc_port_rdata_last = 1'd0;
wire   [31:0] __main___basesoc_port_rdata_payload_data;
wire   [29:0] __main___basesoc_wb_sdram_adr;
wire   [31:0] __main___basesoc_wb_sdram_dat_w;
reg    [31:0] __main___basesoc_wb_sdram_dat_r = 32'd0;
wire    [3:0] __main___basesoc_wb_sdram_sel;
wire          __main___basesoc_wb_sdram_cyc;
wire          __main___basesoc_wb_sdram_stb;
reg           __main___basesoc_wb_sdram_ack = 1'd0;
wire          __main___basesoc_wb_sdram_we;
wire    [2:0] __main___basesoc_wb_sdram_cti;
wire    [1:0] __main___basesoc_wb_sdram_bte;
reg           __main___basesoc_wb_sdram_err = 1'd0;
wire   [29:0] __main___basesoc_interface_adr;
wire  [127:0] __main___basesoc_interface_dat_w;
reg   [127:0] __main___basesoc_interface_dat_r = 128'd0;
wire   [15:0] __main___basesoc_interface_sel;
reg           __main___basesoc_interface_cyc = 1'd0;
reg           __main___basesoc_interface_stb = 1'd0;
reg           __main___basesoc_interface_ack = 1'd0;
reg           __main___basesoc_interface_we = 1'd0;
wire    [8:0] __main___basesoc_data_port_adr;
wire  [127:0] __main___basesoc_data_port_dat_r;
reg    [15:0] __main___basesoc_data_port_we = 16'd0;
reg   [127:0] __main___basesoc_data_port_dat_w = 128'd0;
reg           __main___basesoc_write_from_slave = 1'd0;
reg     [1:0] __main___basesoc_adr_offset_r = 2'd0;
wire    [8:0] __main___basesoc_tag_port_adr;
wire   [23:0] __main___basesoc_tag_port_dat_r;
reg           __main___basesoc_tag_port_we = 1'd0;
wire   [23:0] __main___basesoc_tag_port_dat_w;
wire   [22:0] __main___basesoc_tag_do_tag;
wire          __main___basesoc_tag_do_dirty;
wire   [22:0] __main___basesoc_tag_di_tag;
reg           __main___basesoc_tag_di_dirty = 1'd0;
reg           __main___basesoc_word_clr = 1'd0;
reg           __main___basesoc_word_inc = 1'd0;
wire          __main___basesoc_wishbone_bridge_flush;
reg           __main___basesoc_wishbone_bridge_cmd_valid = 1'd0;
reg           __main___basesoc_wishbone_bridge_cmd_ready = 1'd0;
wire          __main___basesoc_wishbone_bridge_cmd_last;
wire          __main___basesoc_wishbone_bridge_cmd_payload_we;
wire   [18:0] __main___basesoc_wishbone_bridge_cmd_payload_addr;
reg           __main___basesoc_wishbone_bridge_wdata_valid = 1'd0;
wire          __main___basesoc_wishbone_bridge_wdata_ready;
reg           __main___basesoc_wishbone_bridge_wdata_first = 1'd0;
reg           __main___basesoc_wishbone_bridge_wdata_last = 1'd0;
wire  [127:0] __main___basesoc_wishbone_bridge_wdata_payload_data;
wire   [15:0] __main___basesoc_wishbone_bridge_wdata_payload_we;
wire          __main___basesoc_wishbone_bridge_rdata_valid;
wire          __main___basesoc_wishbone_bridge_rdata_ready;
wire          __main___basesoc_wishbone_bridge_rdata_first;
wire          __main___basesoc_wishbone_bridge_rdata_last;
wire  [127:0] __main___basesoc_wishbone_bridge_rdata_payload_data;
reg     [1:0] __main___basesoc_wishbone_bridge_count = 2'd0;
wire          __main___basesoc_wishbone_bridge_wdata_converter_sink_valid;
wire          __main___basesoc_wishbone_bridge_wdata_converter_sink_ready;
wire          __main___basesoc_wishbone_bridge_wdata_converter_sink_first;
wire          __main___basesoc_wishbone_bridge_wdata_converter_sink_last;
wire  [127:0] __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_data;
wire   [15:0] __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_we;
wire          __main___basesoc_wishbone_bridge_wdata_converter_source_valid;
wire          __main___basesoc_wishbone_bridge_wdata_converter_source_ready;
wire          __main___basesoc_wishbone_bridge_wdata_converter_source_first;
wire          __main___basesoc_wishbone_bridge_wdata_converter_source_last;
wire   [31:0] __main___basesoc_wishbone_bridge_wdata_converter_source_payload_data;
wire    [3:0] __main___basesoc_wishbone_bridge_wdata_converter_source_payload_we;
wire          __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_valid;
wire          __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_ready;
wire          __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_first;
wire          __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_last;
reg   [143:0] __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data = 144'd0;
wire          __main___basesoc_wishbone_bridge_wdata_converter_converter_source_valid;
wire          __main___basesoc_wishbone_bridge_wdata_converter_converter_source_ready;
wire          __main___basesoc_wishbone_bridge_wdata_converter_converter_source_first;
wire          __main___basesoc_wishbone_bridge_wdata_converter_converter_source_last;
reg    [35:0] __main___basesoc_wishbone_bridge_wdata_converter_converter_source_payload_data = 36'd0;
wire          __main___basesoc_wishbone_bridge_wdata_converter_converter_source_payload_valid_token_count;
reg     [1:0] __main___basesoc_wishbone_bridge_wdata_converter_converter_mux = 2'd0;
wire          __main___basesoc_wishbone_bridge_wdata_converter_converter_first;
wire          __main___basesoc_wishbone_bridge_wdata_converter_converter_last;
wire          __main___basesoc_wishbone_bridge_wdata_converter_source_source_valid;
wire          __main___basesoc_wishbone_bridge_wdata_converter_source_source_ready;
wire          __main___basesoc_wishbone_bridge_wdata_converter_source_source_first;
wire          __main___basesoc_wishbone_bridge_wdata_converter_source_source_last;
wire   [35:0] __main___basesoc_wishbone_bridge_wdata_converter_source_source_payload_data;
wire          __main___basesoc_wishbone_bridge_rdata_converter_sink_valid;
wire          __main___basesoc_wishbone_bridge_rdata_converter_sink_ready;
wire          __main___basesoc_wishbone_bridge_rdata_converter_sink_first;
wire          __main___basesoc_wishbone_bridge_rdata_converter_sink_last;
wire   [31:0] __main___basesoc_wishbone_bridge_rdata_converter_sink_payload_data;
wire          __main___basesoc_wishbone_bridge_rdata_converter_source_valid;
wire          __main___basesoc_wishbone_bridge_rdata_converter_source_ready;
wire          __main___basesoc_wishbone_bridge_rdata_converter_source_first;
wire          __main___basesoc_wishbone_bridge_rdata_converter_source_last;
reg   [127:0] __main___basesoc_wishbone_bridge_rdata_converter_source_payload_data = 128'd0;
wire          __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_valid;
wire          __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_ready;
wire          __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_first;
wire          __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_last;
wire   [31:0] __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_payload_data;
wire          __main___basesoc_wishbone_bridge_rdata_converter_converter_source_valid;
wire          __main___basesoc_wishbone_bridge_rdata_converter_converter_source_ready;
reg           __main___basesoc_wishbone_bridge_rdata_converter_converter_source_first = 1'd0;
reg           __main___basesoc_wishbone_bridge_rdata_converter_converter_source_last = 1'd0;
reg   [127:0] __main___basesoc_wishbone_bridge_rdata_converter_converter_source_payload_data = 128'd0;
reg     [2:0] __main___basesoc_wishbone_bridge_rdata_converter_converter_source_payload_valid_token_count = 3'd0;
reg     [1:0] __main___basesoc_wishbone_bridge_rdata_converter_converter_demux = 2'd0;
wire          __main___basesoc_wishbone_bridge_rdata_converter_converter_load_part;
reg           __main___basesoc_wishbone_bridge_rdata_converter_converter_strobe_all = 1'd0;
wire          __main___basesoc_wishbone_bridge_rdata_converter_source_source_valid;
wire          __main___basesoc_wishbone_bridge_rdata_converter_source_source_ready;
wire          __main___basesoc_wishbone_bridge_rdata_converter_source_source_first;
wire          __main___basesoc_wishbone_bridge_rdata_converter_source_source_last;
wire  [127:0] __main___basesoc_wishbone_bridge_rdata_converter_source_source_payload_data;
reg           __main___basesoc_wishbone_bridge_aborted = 1'd0;
reg           __main___basesoc_wishbone_bridge_is_ongoing = 1'd0;
reg           __main___ethphy_reset_storage = 1'd0;
reg           __main___ethphy_reset_re = 1'd0;
(* keep = "true" *)
wire          eth_rx_clk;
wire          eth_rx_rst;
(* keep = "true" *)
wire          eth_tx_clk;
wire          eth_tx_rst;
wire          __main___ethphy_reset0;
wire          __main___ethphy_reset1;
reg     [8:0] __main___ethphy_counter = 9'd0;
wire          __main___ethphy_counter_done;
wire          __main___ethphy_counter_ce;
wire          __main___ethphy_liteethphyrmiitx_sink_sink_valid;
wire          __main___ethphy_liteethphyrmiitx_sink_sink_ready;
wire          __main___ethphy_liteethphyrmiitx_sink_sink_first;
wire          __main___ethphy_liteethphyrmiitx_sink_sink_last;
wire    [7:0] __main___ethphy_liteethphyrmiitx_sink_sink_payload_data;
wire          __main___ethphy_liteethphyrmiitx_sink_sink_payload_last_be;
wire          __main___ethphy_liteethphyrmiitx_sink_sink_payload_error;
wire          __main___ethphy_liteethphyrmiitx_converter_sink_valid;
wire          __main___ethphy_liteethphyrmiitx_converter_sink_ready;
reg           __main___ethphy_liteethphyrmiitx_converter_sink_first = 1'd0;
reg           __main___ethphy_liteethphyrmiitx_converter_sink_last = 1'd0;
wire    [7:0] __main___ethphy_liteethphyrmiitx_converter_sink_payload_data;
wire          __main___ethphy_liteethphyrmiitx_converter_source_valid;
wire          __main___ethphy_liteethphyrmiitx_converter_source_ready;
wire          __main___ethphy_liteethphyrmiitx_converter_source_first;
wire          __main___ethphy_liteethphyrmiitx_converter_source_last;
wire    [1:0] __main___ethphy_liteethphyrmiitx_converter_source_payload_data;
wire          __main___ethphy_liteethphyrmiitx_converter_converter_sink_valid;
wire          __main___ethphy_liteethphyrmiitx_converter_converter_sink_ready;
wire          __main___ethphy_liteethphyrmiitx_converter_converter_sink_first;
wire          __main___ethphy_liteethphyrmiitx_converter_converter_sink_last;
reg     [7:0] __main___ethphy_liteethphyrmiitx_converter_converter_sink_payload_data = 8'd0;
wire          __main___ethphy_liteethphyrmiitx_converter_converter_source_valid;
wire          __main___ethphy_liteethphyrmiitx_converter_converter_source_ready;
wire          __main___ethphy_liteethphyrmiitx_converter_converter_source_first;
wire          __main___ethphy_liteethphyrmiitx_converter_converter_source_last;
reg     [1:0] __main___ethphy_liteethphyrmiitx_converter_converter_source_payload_data = 2'd0;
wire          __main___ethphy_liteethphyrmiitx_converter_converter_source_payload_valid_token_count;
reg     [1:0] __main___ethphy_liteethphyrmiitx_converter_converter_mux = 2'd0;
wire          __main___ethphy_liteethphyrmiitx_converter_converter_first;
wire          __main___ethphy_liteethphyrmiitx_converter_converter_last;
wire          __main___ethphy_liteethphyrmiitx_converter_source_source_valid;
wire          __main___ethphy_liteethphyrmiitx_converter_source_source_ready;
wire          __main___ethphy_liteethphyrmiitx_converter_source_source_first;
wire          __main___ethphy_liteethphyrmiitx_converter_source_source_last;
wire    [1:0] __main___ethphy_liteethphyrmiitx_converter_source_source_payload_data;
wire          __main___ethphy_liteethphyrmiirx_source_source_valid;
wire          __main___ethphy_liteethphyrmiirx_source_source_ready;
wire          __main___ethphy_liteethphyrmiirx_source_source_first;
wire          __main___ethphy_liteethphyrmiirx_source_source_last;
wire    [7:0] __main___ethphy_liteethphyrmiirx_source_source_payload_data;
reg           __main___ethphy_liteethphyrmiirx_source_source_payload_last_be = 1'd0;
reg           __main___ethphy_liteethphyrmiirx_source_source_payload_error = 1'd0;
wire          __main___ethphy_liteethphyrmiirx_converter_sink_valid0;
wire          __main___ethphy_liteethphyrmiirx_converter_sink_ready;
reg           __main___ethphy_liteethphyrmiirx_converter_sink_first = 1'd0;
reg           __main___ethphy_liteethphyrmiirx_converter_sink_last = 1'd0;
wire    [1:0] __main___ethphy_liteethphyrmiirx_converter_sink_payload_data;
wire          __main___ethphy_liteethphyrmiirx_converter_source_valid;
wire          __main___ethphy_liteethphyrmiirx_converter_source_ready;
wire          __main___ethphy_liteethphyrmiirx_converter_source_first;
wire          __main___ethphy_liteethphyrmiirx_converter_source_last;
reg     [7:0] __main___ethphy_liteethphyrmiirx_converter_source_payload_data = 8'd0;
wire          __main___ethphy_liteethphyrmiirx_converter_converter_sink_valid;
wire          __main___ethphy_liteethphyrmiirx_converter_converter_sink_ready;
wire          __main___ethphy_liteethphyrmiirx_converter_converter_sink_first;
wire          __main___ethphy_liteethphyrmiirx_converter_converter_sink_last;
wire    [1:0] __main___ethphy_liteethphyrmiirx_converter_converter_sink_payload_data;
wire          __main___ethphy_liteethphyrmiirx_converter_converter_source_valid;
wire          __main___ethphy_liteethphyrmiirx_converter_converter_source_ready;
reg           __main___ethphy_liteethphyrmiirx_converter_converter_source_first = 1'd0;
reg           __main___ethphy_liteethphyrmiirx_converter_converter_source_last = 1'd0;
reg     [7:0] __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_data = 8'd0;
reg     [2:0] __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_valid_token_count = 3'd0;
reg     [1:0] __main___ethphy_liteethphyrmiirx_converter_converter_demux = 2'd0;
wire          __main___ethphy_liteethphyrmiirx_converter_converter_load_part;
reg           __main___ethphy_liteethphyrmiirx_converter_converter_strobe_all = 1'd0;
wire          __main___ethphy_liteethphyrmiirx_converter_source_source_valid;
wire          __main___ethphy_liteethphyrmiirx_converter_source_source_ready;
wire          __main___ethphy_liteethphyrmiirx_converter_source_source_first;
wire          __main___ethphy_liteethphyrmiirx_converter_source_source_last;
wire    [7:0] __main___ethphy_liteethphyrmiirx_converter_source_source_payload_data;
reg           __main___ethphy_liteethphyrmiirx_converter_reset = 1'd0;
reg           __main___ethphy_liteethphyrmiirx_converter_sink_valid1 = 1'd0;
reg     [1:0] __main___ethphy_liteethphyrmiirx_converter_sink_data = 2'd0;
reg           __main___ethphy_liteethphyrmiirx_crs_dv = 1'd0;
reg           __main___ethphy_liteethphyrmiirx_crs_dv_d = 1'd0;
reg     [1:0] __main___ethphy_liteethphyrmiirx_rx_data = 2'd0;
wire          __main___basesoc_ethmac_sink_valid;
wire          __main___basesoc_ethmac_sink_ready;
wire          __main___basesoc_ethmac_sink_first;
wire          __main___basesoc_ethmac_sink_last;
wire   [31:0] __main___basesoc_ethmac_sink_payload_data;
wire    [3:0] __main___basesoc_ethmac_sink_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_sink_payload_error;
wire          __main___basesoc_ethmac_source_valid;
wire          __main___basesoc_ethmac_source_ready;
wire          __main___basesoc_ethmac_source_first;
wire          __main___basesoc_ethmac_source_last;
wire   [31:0] __main___basesoc_ethmac_source_payload_data;
wire    [3:0] __main___basesoc_ethmac_source_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_source_payload_error;
reg           __main___basesoc_ethmac_status = 1'd1;
wire          __main___basesoc_ethmac_we;
reg           __main___basesoc_ethmac_re = 1'd0;
wire          __main___basesoc_ethmac_tx_cdc_sink_sink_valid;
wire          __main___basesoc_ethmac_tx_cdc_sink_sink_ready;
wire          __main___basesoc_ethmac_tx_cdc_sink_sink_first;
wire          __main___basesoc_ethmac_tx_cdc_sink_sink_last;
wire   [31:0] __main___basesoc_ethmac_tx_cdc_sink_sink_payload_data;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_sink_sink_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_sink_sink_payload_error;
wire          __main___basesoc_ethmac_tx_cdc_source_source_valid;
wire          __main___basesoc_ethmac_tx_cdc_source_source_ready;
wire          __main___basesoc_ethmac_tx_cdc_source_source_first;
wire          __main___basesoc_ethmac_tx_cdc_source_source_last;
wire   [31:0] __main___basesoc_ethmac_tx_cdc_source_source_payload_data;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_source_source_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_source_source_payload_error;
wire          __main___basesoc_ethmac_tx_cdc_cdc_sink_valid;
wire          __main___basesoc_ethmac_tx_cdc_cdc_sink_ready;
wire          __main___basesoc_ethmac_tx_cdc_cdc_sink_first;
wire          __main___basesoc_ethmac_tx_cdc_cdc_sink_last;
wire   [31:0] __main___basesoc_ethmac_tx_cdc_cdc_sink_payload_data;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_cdc_sink_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_cdc_sink_payload_error;
wire          __main___basesoc_ethmac_tx_cdc_cdc_source_valid;
wire          __main___basesoc_ethmac_tx_cdc_cdc_source_ready;
wire          __main___basesoc_ethmac_tx_cdc_cdc_source_first;
wire          __main___basesoc_ethmac_tx_cdc_cdc_source_last;
wire   [31:0] __main___basesoc_ethmac_tx_cdc_cdc_source_payload_data;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_cdc_source_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_cdc_source_payload_error;
wire          __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_we;
wire          __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_writable;
wire          __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_re;
wire          __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_readable;
wire   [41:0] __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_din;
wire   [41:0] __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_dout;
wire          __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_ce;
reg     [5:0] __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q = 6'd0;
wire    [5:0] __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next;
reg     [5:0] __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary = 6'd0;
reg     [5:0] __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary = 6'd0;
wire          __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_ce;
reg     [5:0] __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q = 6'd0;
wire    [5:0] __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next;
reg     [5:0] __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_binary = 6'd0;
reg     [5:0] __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary = 6'd0;
wire    [5:0] __main___basesoc_ethmac_tx_cdc_cdc_produce_rdomain;
wire    [5:0] __main___basesoc_ethmac_tx_cdc_cdc_consume_wdomain;
wire    [4:0] __main___basesoc_ethmac_tx_cdc_cdc_wrport_adr;
wire   [41:0] __main___basesoc_ethmac_tx_cdc_cdc_wrport_dat_r;
wire          __main___basesoc_ethmac_tx_cdc_cdc_wrport_we;
wire   [41:0] __main___basesoc_ethmac_tx_cdc_cdc_wrport_dat_w;
wire    [4:0] __main___basesoc_ethmac_tx_cdc_cdc_rdport_adr;
wire   [41:0] __main___basesoc_ethmac_tx_cdc_cdc_rdport_dat_r;
wire   [31:0] __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_data;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_error;
wire          __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_first;
wire          __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_last;
wire   [31:0] __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_data;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_error;
wire          __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_first;
wire          __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_last;
wire          __main___basesoc_ethmac_tx_converter_sink_valid;
wire          __main___basesoc_ethmac_tx_converter_sink_ready;
wire          __main___basesoc_ethmac_tx_converter_sink_first;
wire          __main___basesoc_ethmac_tx_converter_sink_last;
wire   [31:0] __main___basesoc_ethmac_tx_converter_sink_payload_data;
wire    [3:0] __main___basesoc_ethmac_tx_converter_sink_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_tx_converter_sink_payload_error;
wire          __main___basesoc_ethmac_tx_converter_source_valid;
wire          __main___basesoc_ethmac_tx_converter_source_ready;
wire          __main___basesoc_ethmac_tx_converter_source_first;
wire          __main___basesoc_ethmac_tx_converter_source_last;
wire    [7:0] __main___basesoc_ethmac_tx_converter_source_payload_data;
wire          __main___basesoc_ethmac_tx_converter_source_payload_last_be;
wire          __main___basesoc_ethmac_tx_converter_source_payload_error;
wire          __main___basesoc_ethmac_tx_converter_converter_sink_valid;
wire          __main___basesoc_ethmac_tx_converter_converter_sink_ready;
wire          __main___basesoc_ethmac_tx_converter_converter_sink_first;
wire          __main___basesoc_ethmac_tx_converter_converter_sink_last;
reg    [39:0] __main___basesoc_ethmac_tx_converter_converter_sink_payload_data = 40'd0;
wire          __main___basesoc_ethmac_tx_converter_converter_source_valid;
wire          __main___basesoc_ethmac_tx_converter_converter_source_ready;
wire          __main___basesoc_ethmac_tx_converter_converter_source_first;
wire          __main___basesoc_ethmac_tx_converter_converter_source_last;
reg     [9:0] __main___basesoc_ethmac_tx_converter_converter_source_payload_data = 10'd0;
wire          __main___basesoc_ethmac_tx_converter_converter_source_payload_valid_token_count;
reg     [1:0] __main___basesoc_ethmac_tx_converter_converter_mux = 2'd0;
wire          __main___basesoc_ethmac_tx_converter_converter_first;
wire          __main___basesoc_ethmac_tx_converter_converter_last;
wire          __main___basesoc_ethmac_tx_converter_source_source_valid;
wire          __main___basesoc_ethmac_tx_converter_source_source_ready;
wire          __main___basesoc_ethmac_tx_converter_source_source_first;
wire          __main___basesoc_ethmac_tx_converter_source_source_last;
wire    [9:0] __main___basesoc_ethmac_tx_converter_source_source_payload_data;
wire          __main___basesoc_ethmac_tx_last_be_sink_valid;
reg           __main___basesoc_ethmac_tx_last_be_sink_ready = 1'd0;
wire          __main___basesoc_ethmac_tx_last_be_sink_first;
wire          __main___basesoc_ethmac_tx_last_be_sink_last;
wire    [7:0] __main___basesoc_ethmac_tx_last_be_sink_payload_data;
wire          __main___basesoc_ethmac_tx_last_be_sink_payload_last_be;
wire          __main___basesoc_ethmac_tx_last_be_sink_payload_error;
reg           __main___basesoc_ethmac_tx_last_be_source_valid = 1'd0;
wire          __main___basesoc_ethmac_tx_last_be_source_ready;
reg           __main___basesoc_ethmac_tx_last_be_source_first = 1'd0;
reg           __main___basesoc_ethmac_tx_last_be_source_last = 1'd0;
reg     [7:0] __main___basesoc_ethmac_tx_last_be_source_payload_data = 8'd0;
reg           __main___basesoc_ethmac_tx_last_be_source_payload_last_be = 1'd0;
reg           __main___basesoc_ethmac_tx_last_be_source_payload_error = 1'd0;
wire          __main___basesoc_ethmac_tx_padding_sink_valid;
reg           __main___basesoc_ethmac_tx_padding_sink_ready = 1'd0;
wire          __main___basesoc_ethmac_tx_padding_sink_first;
wire          __main___basesoc_ethmac_tx_padding_sink_last;
wire    [7:0] __main___basesoc_ethmac_tx_padding_sink_payload_data;
wire          __main___basesoc_ethmac_tx_padding_sink_payload_last_be;
wire          __main___basesoc_ethmac_tx_padding_sink_payload_error;
reg           __main___basesoc_ethmac_tx_padding_source_valid = 1'd0;
wire          __main___basesoc_ethmac_tx_padding_source_ready;
reg           __main___basesoc_ethmac_tx_padding_source_first = 1'd0;
reg           __main___basesoc_ethmac_tx_padding_source_last = 1'd0;
reg     [7:0] __main___basesoc_ethmac_tx_padding_source_payload_data = 8'd0;
reg           __main___basesoc_ethmac_tx_padding_source_payload_last_be = 1'd0;
reg           __main___basesoc_ethmac_tx_padding_source_payload_error = 1'd0;
reg    [15:0] __main___basesoc_ethmac_tx_padding_counter = 16'd0;
wire          __main___basesoc_ethmac_tx_padding_counter_done;
wire          __main___basesoc_ethmac_tx_crc_sink_valid;
reg           __main___basesoc_ethmac_tx_crc_sink_ready = 1'd0;
wire          __main___basesoc_ethmac_tx_crc_sink_first;
wire          __main___basesoc_ethmac_tx_crc_sink_last;
wire    [7:0] __main___basesoc_ethmac_tx_crc_sink_payload_data;
wire          __main___basesoc_ethmac_tx_crc_sink_payload_last_be;
wire          __main___basesoc_ethmac_tx_crc_sink_payload_error;
reg           __main___basesoc_ethmac_tx_crc_source_valid = 1'd0;
wire          __main___basesoc_ethmac_tx_crc_source_ready;
reg           __main___basesoc_ethmac_tx_crc_source_first = 1'd0;
reg           __main___basesoc_ethmac_tx_crc_source_last = 1'd0;
reg     [7:0] __main___basesoc_ethmac_tx_crc_source_payload_data = 8'd0;
reg           __main___basesoc_ethmac_tx_crc_source_payload_last_be = 1'd0;
reg           __main___basesoc_ethmac_tx_crc_source_payload_error = 1'd0;
reg     [7:0] __main___basesoc_ethmac_tx_crc_data0 = 8'd0;
reg           __main___basesoc_ethmac_tx_crc_last_be0 = 1'd0;
reg    [31:0] __main___basesoc_ethmac_tx_crc_value = 32'd0;
reg           __main___basesoc_ethmac_tx_crc_error = 1'd0;
reg           __main___basesoc_ethmac_tx_crc_last_be1 = 1'd0;
wire    [7:0] __main___basesoc_ethmac_tx_crc_data1;
wire   [31:0] __main___basesoc_ethmac_tx_crc_last;
reg    [31:0] __main___basesoc_ethmac_tx_crc_next = 32'd0;
reg    [31:0] __main___basesoc_ethmac_tx_crc_reg = 32'd4294967295;
reg           __main___basesoc_ethmac_tx_crc_ce = 1'd0;
reg           __main___basesoc_ethmac_tx_crc_reset = 1'd0;
reg    [31:0] __main___basesoc_ethmac_tx_crc_crc_packet = 32'd0;
reg           __main___basesoc_ethmac_tx_crc_last_be2 = 1'd0;
reg     [1:0] __main___basesoc_ethmac_tx_crc_cnt = 2'd3;
wire          __main___basesoc_ethmac_tx_crc_cnt_done;
reg           __main___basesoc_ethmac_tx_crc_is_ongoing0 = 1'd0;
reg           __main___basesoc_ethmac_tx_crc_is_ongoing1 = 1'd0;
wire          __main___basesoc_ethmac_tx_crc_sink_sink_valid;
wire          __main___basesoc_ethmac_tx_crc_sink_sink_ready;
wire          __main___basesoc_ethmac_tx_crc_sink_sink_first;
wire          __main___basesoc_ethmac_tx_crc_sink_sink_last;
wire    [7:0] __main___basesoc_ethmac_tx_crc_sink_sink_payload_data;
wire          __main___basesoc_ethmac_tx_crc_sink_sink_payload_last_be;
wire          __main___basesoc_ethmac_tx_crc_sink_sink_payload_error;
wire          __main___basesoc_ethmac_tx_crc_source_source_valid;
wire          __main___basesoc_ethmac_tx_crc_source_source_ready;
wire          __main___basesoc_ethmac_tx_crc_source_source_first;
wire          __main___basesoc_ethmac_tx_crc_source_source_last;
wire    [7:0] __main___basesoc_ethmac_tx_crc_source_source_payload_data;
wire          __main___basesoc_ethmac_tx_crc_source_source_payload_last_be;
wire          __main___basesoc_ethmac_tx_crc_source_source_payload_error;
wire          __main___basesoc_ethmac_tx_crc_pipe_valid_sink_valid;
wire          __main___basesoc_ethmac_tx_crc_pipe_valid_sink_ready;
wire          __main___basesoc_ethmac_tx_crc_pipe_valid_sink_first;
wire          __main___basesoc_ethmac_tx_crc_pipe_valid_sink_last;
wire    [7:0] __main___basesoc_ethmac_tx_crc_pipe_valid_sink_payload_data;
wire          __main___basesoc_ethmac_tx_crc_pipe_valid_sink_payload_last_be;
wire          __main___basesoc_ethmac_tx_crc_pipe_valid_sink_payload_error;
reg           __main___basesoc_ethmac_tx_crc_pipe_valid_source_valid = 1'd0;
wire          __main___basesoc_ethmac_tx_crc_pipe_valid_source_ready;
reg           __main___basesoc_ethmac_tx_crc_pipe_valid_source_first = 1'd0;
reg           __main___basesoc_ethmac_tx_crc_pipe_valid_source_last = 1'd0;
reg     [7:0] __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_data = 8'd0;
reg           __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_last_be = 1'd0;
reg           __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_error = 1'd0;
wire          __main___basesoc_ethmac_tx_preamble_sink_valid;
reg           __main___basesoc_ethmac_tx_preamble_sink_ready = 1'd0;
wire          __main___basesoc_ethmac_tx_preamble_sink_first;
wire          __main___basesoc_ethmac_tx_preamble_sink_last;
wire    [7:0] __main___basesoc_ethmac_tx_preamble_sink_payload_data;
wire          __main___basesoc_ethmac_tx_preamble_sink_payload_last_be;
wire          __main___basesoc_ethmac_tx_preamble_sink_payload_error;
reg           __main___basesoc_ethmac_tx_preamble_source_valid = 1'd0;
wire          __main___basesoc_ethmac_tx_preamble_source_ready;
reg           __main___basesoc_ethmac_tx_preamble_source_first = 1'd0;
reg           __main___basesoc_ethmac_tx_preamble_source_last = 1'd0;
reg     [7:0] __main___basesoc_ethmac_tx_preamble_source_payload_data = 8'd0;
wire          __main___basesoc_ethmac_tx_preamble_source_payload_last_be;
reg           __main___basesoc_ethmac_tx_preamble_source_payload_error = 1'd0;
reg    [63:0] __main___basesoc_ethmac_tx_preamble_preamble = 64'd15372286728091293013;
reg     [2:0] __main___basesoc_ethmac_tx_preamble_count = 3'd0;
wire          __main___basesoc_ethmac_tx_gap_sink_valid;
reg           __main___basesoc_ethmac_tx_gap_sink_ready = 1'd0;
wire          __main___basesoc_ethmac_tx_gap_sink_first;
wire          __main___basesoc_ethmac_tx_gap_sink_last;
wire    [7:0] __main___basesoc_ethmac_tx_gap_sink_payload_data;
wire          __main___basesoc_ethmac_tx_gap_sink_payload_last_be;
wire          __main___basesoc_ethmac_tx_gap_sink_payload_error;
reg           __main___basesoc_ethmac_tx_gap_source_valid = 1'd0;
wire          __main___basesoc_ethmac_tx_gap_source_ready;
reg           __main___basesoc_ethmac_tx_gap_source_first = 1'd0;
reg           __main___basesoc_ethmac_tx_gap_source_last = 1'd0;
reg     [7:0] __main___basesoc_ethmac_tx_gap_source_payload_data = 8'd0;
reg           __main___basesoc_ethmac_tx_gap_source_payload_last_be = 1'd0;
reg           __main___basesoc_ethmac_tx_gap_source_payload_error = 1'd0;
reg     [3:0] __main___basesoc_ethmac_tx_gap_counter = 4'd0;
reg    [31:0] __main___basesoc_ethmac_preamble_errors_status = 32'd0;
wire          __main___basesoc_ethmac_preamble_errors_we;
reg           __main___basesoc_ethmac_preamble_errors_re = 1'd0;
reg    [31:0] __main___basesoc_ethmac_crc_errors_status = 32'd0;
wire          __main___basesoc_ethmac_crc_errors_we;
reg           __main___basesoc_ethmac_crc_errors_re = 1'd0;
wire          __main___basesoc_ethmac_rx_preamble_sink_valid;
reg           __main___basesoc_ethmac_rx_preamble_sink_ready = 1'd0;
wire          __main___basesoc_ethmac_rx_preamble_sink_first;
wire          __main___basesoc_ethmac_rx_preamble_sink_last;
wire    [7:0] __main___basesoc_ethmac_rx_preamble_sink_payload_data;
wire          __main___basesoc_ethmac_rx_preamble_sink_payload_last_be;
wire          __main___basesoc_ethmac_rx_preamble_sink_payload_error;
reg           __main___basesoc_ethmac_rx_preamble_source_valid = 1'd0;
wire          __main___basesoc_ethmac_rx_preamble_source_ready;
reg           __main___basesoc_ethmac_rx_preamble_source_first = 1'd0;
reg           __main___basesoc_ethmac_rx_preamble_source_last = 1'd0;
wire    [7:0] __main___basesoc_ethmac_rx_preamble_source_payload_data;
wire          __main___basesoc_ethmac_rx_preamble_source_payload_last_be;
reg           __main___basesoc_ethmac_rx_preamble_source_payload_error = 1'd0;
reg           __main___basesoc_ethmac_rx_preamble_error = 1'd0;
reg    [63:0] __main___basesoc_ethmac_rx_preamble_preamble = 64'd15372286728091293013;
wire          __main___basesoc_ethmac_pulsesynchronizer0_i;
wire          __main___basesoc_ethmac_pulsesynchronizer0_o;
reg           __main___basesoc_ethmac_pulsesynchronizer0_toggle_i = 1'd0;
wire          __main___basesoc_ethmac_pulsesynchronizer0_toggle_o;
reg           __main___basesoc_ethmac_pulsesynchronizer0_toggle_o_r = 1'd0;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_valid;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_ready = 1'd0;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_first;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_last;
wire    [7:0] __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_data;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_error;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_source_source_valid = 1'd0;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_source_source_ready;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_source_source_first = 1'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_source_source_last = 1'd0;
reg     [7:0] __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_data = 8'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_last_be = 1'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_error = 1'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_error = 1'd0;
wire    [7:0] __main___basesoc_ethmac_liteethmaccrc32checker_crc_data0;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_crc_last_be0;
reg    [31:0] __main___basesoc_ethmac_liteethmaccrc32checker_crc_value = 32'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_crc_error0 = 1'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_crc_last_be1 = 1'd0;
wire    [7:0] __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1;
wire   [31:0] __main___basesoc_ethmac_liteethmaccrc32checker_crc_last;
reg    [31:0] __main___basesoc_ethmac_liteethmaccrc32checker_crc_next = 32'd0;
reg    [31:0] __main___basesoc_ethmac_liteethmaccrc32checker_crc_reg = 32'd4294967295;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_crc_ce = 1'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_crc_reset = 1'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_valid = 1'd0;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_ready;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_first;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_last;
wire    [7:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_data;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_last_be;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_error;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_valid;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_ready = 1'd0;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_first;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_last;
wire    [7:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_data;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_last_be;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_error;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_we;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_re;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_readable;
wire   [11:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_din;
wire   [11:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_dout;
reg     [2:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_level = 3'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_replace = 1'd0;
reg     [2:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_produce = 3'd0;
reg     [2:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_consume = 3'd0;
reg     [2:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr = 3'd0;
wire   [11:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_dat_r;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_we;
wire   [11:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_dat_w;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_do_read;
wire    [2:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_rdport_adr;
wire   [11:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_rdport_dat_r;
wire    [7:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_data;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_last_be;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_error;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_first;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_last;
wire    [7:0] __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_data;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_last_be;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_error;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_first;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_last;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_fifo_reset = 1'd0;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_fifo_in;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_fifo_out;
wire          __main___basesoc_ethmac_liteethmaccrc32checker_fifo_full;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_last_be = 1'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_crc_error1 = 1'd0;
wire          __main___basesoc_ethmac_bufferizeendpoints_sink_sink_valid;
wire          __main___basesoc_ethmac_bufferizeendpoints_sink_sink_ready;
wire          __main___basesoc_ethmac_bufferizeendpoints_sink_sink_first;
wire          __main___basesoc_ethmac_bufferizeendpoints_sink_sink_last;
wire    [7:0] __main___basesoc_ethmac_bufferizeendpoints_sink_sink_payload_data;
wire          __main___basesoc_ethmac_bufferizeendpoints_sink_sink_payload_last_be;
wire          __main___basesoc_ethmac_bufferizeendpoints_sink_sink_payload_error;
wire          __main___basesoc_ethmac_bufferizeendpoints_source_source_valid;
wire          __main___basesoc_ethmac_bufferizeendpoints_source_source_ready;
wire          __main___basesoc_ethmac_bufferizeendpoints_source_source_first;
wire          __main___basesoc_ethmac_bufferizeendpoints_source_source_last;
wire    [7:0] __main___basesoc_ethmac_bufferizeendpoints_source_source_payload_data;
wire          __main___basesoc_ethmac_bufferizeendpoints_source_source_payload_last_be;
wire          __main___basesoc_ethmac_bufferizeendpoints_source_source_payload_error;
wire          __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_valid;
wire          __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_ready;
wire          __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_first;
wire          __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_last;
wire    [7:0] __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_payload_data;
wire          __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_payload_last_be;
wire          __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_payload_error;
reg           __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_valid = 1'd0;
wire          __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_ready;
reg           __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_first = 1'd0;
reg           __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_last = 1'd0;
reg     [7:0] __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_data = 8'd0;
reg           __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_last_be = 1'd0;
reg           __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_error = 1'd0;
wire          __main___basesoc_ethmac_pulsesynchronizer1_i;
wire          __main___basesoc_ethmac_pulsesynchronizer1_o;
reg           __main___basesoc_ethmac_pulsesynchronizer1_toggle_i = 1'd0;
wire          __main___basesoc_ethmac_pulsesynchronizer1_toggle_o;
reg           __main___basesoc_ethmac_pulsesynchronizer1_toggle_o_r = 1'd0;
wire          __main___basesoc_ethmac_rx_padding_sink_valid;
wire          __main___basesoc_ethmac_rx_padding_sink_ready;
wire          __main___basesoc_ethmac_rx_padding_sink_first;
wire          __main___basesoc_ethmac_rx_padding_sink_last;
wire    [7:0] __main___basesoc_ethmac_rx_padding_sink_payload_data;
wire          __main___basesoc_ethmac_rx_padding_sink_payload_last_be;
wire          __main___basesoc_ethmac_rx_padding_sink_payload_error;
wire          __main___basesoc_ethmac_rx_padding_source_valid;
wire          __main___basesoc_ethmac_rx_padding_source_ready;
wire          __main___basesoc_ethmac_rx_padding_source_first;
wire          __main___basesoc_ethmac_rx_padding_source_last;
wire    [7:0] __main___basesoc_ethmac_rx_padding_source_payload_data;
wire          __main___basesoc_ethmac_rx_padding_source_payload_last_be;
wire          __main___basesoc_ethmac_rx_padding_source_payload_error;
wire          __main___basesoc_ethmac_rx_last_be_sink_valid;
wire          __main___basesoc_ethmac_rx_last_be_sink_ready;
wire          __main___basesoc_ethmac_rx_last_be_sink_first;
wire          __main___basesoc_ethmac_rx_last_be_sink_last;
wire    [7:0] __main___basesoc_ethmac_rx_last_be_sink_payload_data;
wire          __main___basesoc_ethmac_rx_last_be_sink_payload_last_be;
wire          __main___basesoc_ethmac_rx_last_be_sink_payload_error;
wire          __main___basesoc_ethmac_rx_last_be_source_valid;
wire          __main___basesoc_ethmac_rx_last_be_source_ready;
wire          __main___basesoc_ethmac_rx_last_be_source_first;
wire          __main___basesoc_ethmac_rx_last_be_source_last;
wire    [7:0] __main___basesoc_ethmac_rx_last_be_source_payload_data;
reg           __main___basesoc_ethmac_rx_last_be_source_payload_last_be = 1'd0;
wire          __main___basesoc_ethmac_rx_last_be_source_payload_error;
wire          __main___basesoc_ethmac_rx_converter_sink_valid;
wire          __main___basesoc_ethmac_rx_converter_sink_ready;
wire          __main___basesoc_ethmac_rx_converter_sink_first;
wire          __main___basesoc_ethmac_rx_converter_sink_last;
wire    [7:0] __main___basesoc_ethmac_rx_converter_sink_payload_data;
wire          __main___basesoc_ethmac_rx_converter_sink_payload_last_be;
wire          __main___basesoc_ethmac_rx_converter_sink_payload_error;
wire          __main___basesoc_ethmac_rx_converter_source_valid;
wire          __main___basesoc_ethmac_rx_converter_source_ready;
wire          __main___basesoc_ethmac_rx_converter_source_first;
wire          __main___basesoc_ethmac_rx_converter_source_last;
reg    [31:0] __main___basesoc_ethmac_rx_converter_source_payload_data = 32'd0;
reg     [3:0] __main___basesoc_ethmac_rx_converter_source_payload_last_be = 4'd0;
reg     [3:0] __main___basesoc_ethmac_rx_converter_source_payload_error = 4'd0;
wire          __main___basesoc_ethmac_rx_converter_converter_sink_valid;
wire          __main___basesoc_ethmac_rx_converter_converter_sink_ready;
wire          __main___basesoc_ethmac_rx_converter_converter_sink_first;
wire          __main___basesoc_ethmac_rx_converter_converter_sink_last;
wire    [9:0] __main___basesoc_ethmac_rx_converter_converter_sink_payload_data;
wire          __main___basesoc_ethmac_rx_converter_converter_source_valid;
wire          __main___basesoc_ethmac_rx_converter_converter_source_ready;
reg           __main___basesoc_ethmac_rx_converter_converter_source_first = 1'd0;
reg           __main___basesoc_ethmac_rx_converter_converter_source_last = 1'd0;
reg    [39:0] __main___basesoc_ethmac_rx_converter_converter_source_payload_data = 40'd0;
reg     [2:0] __main___basesoc_ethmac_rx_converter_converter_source_payload_valid_token_count = 3'd0;
reg     [1:0] __main___basesoc_ethmac_rx_converter_converter_demux = 2'd0;
wire          __main___basesoc_ethmac_rx_converter_converter_load_part;
reg           __main___basesoc_ethmac_rx_converter_converter_strobe_all = 1'd0;
wire          __main___basesoc_ethmac_rx_converter_source_source_valid;
wire          __main___basesoc_ethmac_rx_converter_source_source_ready;
wire          __main___basesoc_ethmac_rx_converter_source_source_first;
wire          __main___basesoc_ethmac_rx_converter_source_source_last;
wire   [39:0] __main___basesoc_ethmac_rx_converter_source_source_payload_data;
wire          __main___basesoc_ethmac_rx_cdc_sink_sink_valid;
wire          __main___basesoc_ethmac_rx_cdc_sink_sink_ready;
wire          __main___basesoc_ethmac_rx_cdc_sink_sink_first;
wire          __main___basesoc_ethmac_rx_cdc_sink_sink_last;
wire   [31:0] __main___basesoc_ethmac_rx_cdc_sink_sink_payload_data;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_sink_sink_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_sink_sink_payload_error;
wire          __main___basesoc_ethmac_rx_cdc_source_source_valid;
wire          __main___basesoc_ethmac_rx_cdc_source_source_ready;
wire          __main___basesoc_ethmac_rx_cdc_source_source_first;
wire          __main___basesoc_ethmac_rx_cdc_source_source_last;
wire   [31:0] __main___basesoc_ethmac_rx_cdc_source_source_payload_data;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_source_source_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_source_source_payload_error;
wire          __main___basesoc_ethmac_rx_cdc_cdc_sink_valid;
wire          __main___basesoc_ethmac_rx_cdc_cdc_sink_ready;
wire          __main___basesoc_ethmac_rx_cdc_cdc_sink_first;
wire          __main___basesoc_ethmac_rx_cdc_cdc_sink_last;
wire   [31:0] __main___basesoc_ethmac_rx_cdc_cdc_sink_payload_data;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_cdc_sink_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_cdc_sink_payload_error;
wire          __main___basesoc_ethmac_rx_cdc_cdc_source_valid;
wire          __main___basesoc_ethmac_rx_cdc_cdc_source_ready;
wire          __main___basesoc_ethmac_rx_cdc_cdc_source_first;
wire          __main___basesoc_ethmac_rx_cdc_cdc_source_last;
wire   [31:0] __main___basesoc_ethmac_rx_cdc_cdc_source_payload_data;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_cdc_source_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_cdc_source_payload_error;
wire          __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_we;
wire          __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_writable;
wire          __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_re;
wire          __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_readable;
wire   [41:0] __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_din;
wire   [41:0] __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_dout;
wire          __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_ce;
reg     [5:0] __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q = 6'd0;
wire    [5:0] __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next;
reg     [5:0] __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary = 6'd0;
reg     [5:0] __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary = 6'd0;
wire          __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_ce;
reg     [5:0] __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q = 6'd0;
wire    [5:0] __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next;
reg     [5:0] __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_binary = 6'd0;
reg     [5:0] __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary = 6'd0;
wire    [5:0] __main___basesoc_ethmac_rx_cdc_cdc_produce_rdomain;
wire    [5:0] __main___basesoc_ethmac_rx_cdc_cdc_consume_wdomain;
wire    [4:0] __main___basesoc_ethmac_rx_cdc_cdc_wrport_adr;
wire   [41:0] __main___basesoc_ethmac_rx_cdc_cdc_wrport_dat_r;
wire          __main___basesoc_ethmac_rx_cdc_cdc_wrport_we;
wire   [41:0] __main___basesoc_ethmac_rx_cdc_cdc_wrport_dat_w;
wire    [4:0] __main___basesoc_ethmac_rx_cdc_cdc_rdport_adr;
wire   [41:0] __main___basesoc_ethmac_rx_cdc_cdc_rdport_dat_r;
wire   [31:0] __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_data;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_error;
wire          __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_first;
wire          __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_last;
wire   [31:0] __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_data;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_error;
wire          __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_first;
wire          __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_last;
wire          __main___basesoc_ethmac_sink_sink_valid;
wire          __main___basesoc_ethmac_sink_sink_ready;
wire          __main___basesoc_ethmac_sink_sink_first;
wire          __main___basesoc_ethmac_sink_sink_last;
wire   [31:0] __main___basesoc_ethmac_sink_sink_payload_data;
wire    [3:0] __main___basesoc_ethmac_sink_sink_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_sink_sink_payload_error;
wire          __main___basesoc_ethmac_source_source_valid;
wire          __main___basesoc_ethmac_source_source_ready;
wire          __main___basesoc_ethmac_source_source_first;
wire          __main___basesoc_ethmac_source_source_last;
wire   [31:0] __main___basesoc_ethmac_source_source_payload_data;
wire    [3:0] __main___basesoc_ethmac_source_source_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_source_source_payload_error;
wire   [29:0] __main___basesoc_ethmac_bus_adr;
wire   [31:0] __main___basesoc_ethmac_bus_dat_w;
wire   [31:0] __main___basesoc_ethmac_bus_dat_r;
wire    [3:0] __main___basesoc_ethmac_bus_sel;
wire          __main___basesoc_ethmac_bus_cyc;
wire          __main___basesoc_ethmac_bus_stb;
wire          __main___basesoc_ethmac_bus_ack;
wire          __main___basesoc_ethmac_bus_we;
wire    [2:0] __main___basesoc_ethmac_bus_cti;
wire    [1:0] __main___basesoc_ethmac_bus_bte;
wire          __main___basesoc_ethmac_bus_err;
wire          __main___basesoc_ethmac_sram0_sink_valid;
reg           __main___basesoc_ethmac_sram1_sink_ready = 1'd1;
wire          __main___basesoc_ethmac_sram2_sink_first;
wire          __main___basesoc_ethmac_sram3_sink_last;
wire   [31:0] __main___basesoc_ethmac_sram4_sink_payload_data;
wire    [3:0] __main___basesoc_ethmac_sram5_sink_payload_last_be;
wire    [3:0] __main___basesoc_ethmac_sram6_sink_payload_error;
wire          __main___basesoc_ethmac_sram7_status;
wire          __main___basesoc_ethmac_sram8_we;
reg           __main___basesoc_ethmac_sram9_re = 1'd0;
wire   [10:0] __main___basesoc_ethmac_sram10_status;
wire          __main___basesoc_ethmac_sram11_we;
reg           __main___basesoc_ethmac_sram12_re = 1'd0;
reg    [31:0] __main___basesoc_ethmac_sram13_status = 32'd0;
wire          __main___basesoc_ethmac_sram14_we;
reg           __main___basesoc_ethmac_sram15_re = 1'd0;
wire          __main___basesoc_ethmac_sram16_irq;
wire          __main___basesoc_ethmac_sram17_status;
wire          __main___basesoc_ethmac_sram18_pending;
wire          __main___basesoc_ethmac_sram19_trigger;
reg           __main___basesoc_ethmac_sram20_clear = 1'd0;
wire          __main___basesoc_ethmac_sram21_available;
wire          __main___basesoc_ethmac_sram22_status;
wire          __main___basesoc_ethmac_sram23_we;
reg           __main___basesoc_ethmac_sram24_re = 1'd0;
wire          __main___basesoc_ethmac_sram25_available;
wire          __main___basesoc_ethmac_sram26_status;
wire          __main___basesoc_ethmac_sram27_we;
reg           __main___basesoc_ethmac_sram28_re = 1'd0;
reg           __main___basesoc_ethmac_sram29_r = 1'd0;
wire          __main___basesoc_ethmac_sram30_available;
reg           __main___basesoc_ethmac_sram31_storage = 1'd0;
reg           __main___basesoc_ethmac_sram32_re = 1'd0;
reg           __main___basesoc_ethmac_write = 1'd0;
reg           __main___basesoc_ethmac_slot = 1'd0;
reg    [10:0] __main___basesoc_ethmac_sram35_length = 11'd0;
reg     [3:0] __main___basesoc_ethmac_length_inc = 4'd0;
reg           __main___basesoc_ethmac_sram37_sink_valid = 1'd0;
wire          __main___basesoc_ethmac_sram38_sink_ready;
reg           __main___basesoc_ethmac_sram39_sink_first = 1'd0;
reg           __main___basesoc_ethmac_sram40_sink_last = 1'd0;
reg           __main___basesoc_ethmac_sram41_sink_payload_slot = 1'd0;
reg    [10:0] __main___basesoc_ethmac_sram42_sink_payload_length = 11'd0;
wire          __main___basesoc_ethmac_sram43_source_valid;
wire          __main___basesoc_ethmac_sram44_source_ready;
wire          __main___basesoc_ethmac_sram45_source_first;
wire          __main___basesoc_ethmac_sram46_source_last;
wire          __main___basesoc_ethmac_sram47_source_payload_slot;
wire   [10:0] __main___basesoc_ethmac_sram48_source_payload_length;
wire          __main___basesoc_ethmac_sram49_we;
wire          __main___basesoc_ethmac_sram50_writable;
wire          __main___basesoc_ethmac_sram51_re;
wire          __main___basesoc_ethmac_sram52_readable;
wire   [13:0] __main___basesoc_ethmac_sram53_din;
wire   [13:0] __main___basesoc_ethmac_sram54_dout;
reg     [1:0] __main___basesoc_ethmac_sram55_level = 2'd0;
reg           __main___basesoc_ethmac_sram56_replace = 1'd0;
reg           __main___basesoc_ethmac_sram57_produce = 1'd0;
reg           __main___basesoc_ethmac_sram58_consume = 1'd0;
reg           __main___basesoc_ethmac_sram59_adr = 1'd0;
wire   [13:0] __main___basesoc_ethmac_sram60_dat_r;
wire          __main___basesoc_ethmac_sram61_we;
wire   [13:0] __main___basesoc_ethmac_sram62_dat_w;
wire          __main___basesoc_ethmac_sram63_do_read;
wire          __main___basesoc_ethmac_sram64_adr;
wire   [13:0] __main___basesoc_ethmac_sram65_dat_r;
wire          __main___basesoc_ethmac_sram66_fifo_in_payload_slot;
wire   [10:0] __main___basesoc_ethmac_sram67_fifo_in_payload_length;
wire          __main___basesoc_ethmac_sram68_fifo_in_first;
wire          __main___basesoc_ethmac_sram69_fifo_in_last;
wire          __main___basesoc_ethmac_sram70_fifo_out_payload_slot;
wire   [10:0] __main___basesoc_ethmac_sram71_fifo_out_payload_length;
wire          __main___basesoc_ethmac_sram72_fifo_out_first;
wire          __main___basesoc_ethmac_sram73_fifo_out_last;
wire   [31:0] __main___basesoc_ethmac_wr_data;
reg     [8:0] __main___basesoc_ethmac_sram75_adr = 9'd0;
wire   [31:0] __main___basesoc_ethmac_sram76_dat_r;
reg           __main___basesoc_ethmac_sram77_we = 1'd0;
reg    [31:0] __main___basesoc_ethmac_sram78_dat_w = 32'd0;
reg     [8:0] __main___basesoc_ethmac_sram79_adr = 9'd0;
wire   [31:0] __main___basesoc_ethmac_sram80_dat_r;
reg           __main___basesoc_ethmac_sram81_we = 1'd0;
reg    [31:0] __main___basesoc_ethmac_sram82_dat_w = 32'd0;
reg           __main___basesoc_ethmac_sram83_source_valid = 1'd0;
wire          __main___basesoc_ethmac_sram84_source_ready;
reg           __main___basesoc_ethmac_sram85_source_first = 1'd0;
reg           __main___basesoc_ethmac_sram86_source_last = 1'd0;
wire   [31:0] __main___basesoc_ethmac_sram87_source_payload_data;
reg     [3:0] __main___basesoc_ethmac_sram88_source_payload_last_be = 4'd0;
reg     [3:0] __main___basesoc_ethmac_sram89_source_payload_error = 4'd0;
reg           __main___basesoc_ethmac_start_re = 1'd0;
wire          __main___basesoc_ethmac_start_r;
reg           __main___basesoc_ethmac_start_we = 1'd0;
reg           __main___basesoc_ethmac_start_w = 1'd0;
wire          __main___basesoc_ethmac_sram94_status;
wire          __main___basesoc_ethmac_sram95_we;
reg           __main___basesoc_ethmac_sram96_re = 1'd0;
wire    [1:0] __main___basesoc_ethmac_sram97_status;
wire          __main___basesoc_ethmac_sram98_we;
reg           __main___basesoc_ethmac_sram99_re = 1'd0;
reg           __main___basesoc_ethmac_sram100_storage = 1'd0;
reg           __main___basesoc_ethmac_sram101_re = 1'd0;
reg    [10:0] __main___basesoc_ethmac_sram102_storage = 11'd0;
reg           __main___basesoc_ethmac_sram103_re = 1'd0;
wire          __main___basesoc_ethmac_sram104_irq;
wire          __main___basesoc_ethmac_sram105_status;
reg           __main___basesoc_ethmac_sram106_pending = 1'd0;
reg           __main___basesoc_ethmac_sram107_trigger = 1'd0;
reg           __main___basesoc_ethmac_sram108_clear = 1'd0;
wire          __main___basesoc_ethmac_sram109_event0;
wire          __main___basesoc_ethmac_sram110_status;
wire          __main___basesoc_ethmac_sram111_we;
reg           __main___basesoc_ethmac_sram112_re = 1'd0;
wire          __main___basesoc_ethmac_sram113_event0;
wire          __main___basesoc_ethmac_sram114_status;
wire          __main___basesoc_ethmac_sram115_we;
reg           __main___basesoc_ethmac_sram116_re = 1'd0;
reg           __main___basesoc_ethmac_sram117_r = 1'd0;
wire          __main___basesoc_ethmac_sram118_event0;
reg           __main___basesoc_ethmac_sram119_storage = 1'd0;
reg           __main___basesoc_ethmac_sram120_re = 1'd0;
reg           __main___basesoc_ethmac_read = 1'd0;
reg    [10:0] __main___basesoc_ethmac_sram122_length = 11'd0;
wire          __main___basesoc_ethmac_sram123_sink_valid;
wire          __main___basesoc_ethmac_sram124_sink_ready;
reg           __main___basesoc_ethmac_sram125_sink_first = 1'd0;
reg           __main___basesoc_ethmac_sram126_sink_last = 1'd0;
wire          __main___basesoc_ethmac_sram127_sink_payload_slot;
wire   [10:0] __main___basesoc_ethmac_sram128_sink_payload_length;
wire          __main___basesoc_ethmac_sram129_source_valid;
reg           __main___basesoc_ethmac_sram130_source_ready = 1'd0;
wire          __main___basesoc_ethmac_sram131_source_first;
wire          __main___basesoc_ethmac_sram132_source_last;
wire          __main___basesoc_ethmac_sram133_source_payload_slot;
wire   [10:0] __main___basesoc_ethmac_sram134_source_payload_length;
wire          __main___basesoc_ethmac_sram135_we;
wire          __main___basesoc_ethmac_sram136_writable;
wire          __main___basesoc_ethmac_sram137_re;
wire          __main___basesoc_ethmac_sram138_readable;
wire   [13:0] __main___basesoc_ethmac_sram139_din;
wire   [13:0] __main___basesoc_ethmac_sram140_dout;
reg     [1:0] __main___basesoc_ethmac_sram141_level = 2'd0;
reg           __main___basesoc_ethmac_sram142_replace = 1'd0;
reg           __main___basesoc_ethmac_sram143_produce = 1'd0;
reg           __main___basesoc_ethmac_sram144_consume = 1'd0;
reg           __main___basesoc_ethmac_sram145_adr = 1'd0;
wire   [13:0] __main___basesoc_ethmac_sram146_dat_r;
wire          __main___basesoc_ethmac_sram147_we;
wire   [13:0] __main___basesoc_ethmac_sram148_dat_w;
wire          __main___basesoc_ethmac_sram149_do_read;
wire          __main___basesoc_ethmac_sram150_adr;
wire   [13:0] __main___basesoc_ethmac_sram151_dat_r;
wire          __main___basesoc_ethmac_sram152_fifo_in_payload_slot;
wire   [10:0] __main___basesoc_ethmac_sram153_fifo_in_payload_length;
wire          __main___basesoc_ethmac_sram154_fifo_in_first;
wire          __main___basesoc_ethmac_sram155_fifo_in_last;
wire          __main___basesoc_ethmac_sram156_fifo_out_payload_slot;
wire   [10:0] __main___basesoc_ethmac_sram157_fifo_out_payload_length;
wire          __main___basesoc_ethmac_sram158_fifo_out_first;
wire          __main___basesoc_ethmac_sram159_fifo_out_last;
reg    [31:0] __main___basesoc_ethmac_rd_data = 32'd0;
wire    [8:0] __main___basesoc_ethmac_sram161_adr;
wire   [31:0] __main___basesoc_ethmac_sram162_dat_r;
wire          __main___basesoc_ethmac_sram163_re;
wire    [8:0] __main___basesoc_ethmac_sram164_adr;
wire   [31:0] __main___basesoc_ethmac_sram165_dat_r;
wire          __main___basesoc_ethmac_sram166_re;
wire          __main___basesoc_ethmac_sram167_irq;
wire   [29:0] __main___basesoc_ethmac_interface0_adr;
wire   [31:0] __main___basesoc_ethmac_interface0_dat_w;
wire   [31:0] __main___basesoc_ethmac_interface0_dat_r;
wire    [3:0] __main___basesoc_ethmac_interface0_sel;
wire          __main___basesoc_ethmac_interface0_cyc;
wire          __main___basesoc_ethmac_interface0_stb;
reg           __main___basesoc_ethmac_interface0_ack = 1'd0;
wire          __main___basesoc_ethmac_interface0_we;
wire    [2:0] __main___basesoc_ethmac_interface0_cti;
wire    [1:0] __main___basesoc_ethmac_interface0_bte;
reg           __main___basesoc_ethmac_interface0_err = 1'd0;
reg           __main___basesoc_ethmac_sram2_adr_burst = 1'd0;
wire    [8:0] __main___basesoc_ethmac_sram2_adr;
wire   [31:0] __main___basesoc_ethmac_sram2_dat_r;
wire   [29:0] __main___basesoc_ethmac_interface1_adr;
wire   [31:0] __main___basesoc_ethmac_interface1_dat_w;
wire   [31:0] __main___basesoc_ethmac_interface1_dat_r;
wire    [3:0] __main___basesoc_ethmac_interface1_sel;
wire          __main___basesoc_ethmac_interface1_cyc;
wire          __main___basesoc_ethmac_interface1_stb;
reg           __main___basesoc_ethmac_interface1_ack = 1'd0;
wire          __main___basesoc_ethmac_interface1_we;
wire    [2:0] __main___basesoc_ethmac_interface1_cti;
wire    [1:0] __main___basesoc_ethmac_interface1_bte;
reg           __main___basesoc_ethmac_interface1_err = 1'd0;
reg           __main___basesoc_ethmac_sram3_adr_burst = 1'd0;
wire    [8:0] __main___basesoc_ethmac_sram3_adr;
wire   [31:0] __main___basesoc_ethmac_sram3_dat_r;
wire   [29:0] __main___basesoc_ethmac_interface2_adr;
wire   [31:0] __main___basesoc_ethmac_interface2_dat_w;
wire   [31:0] __main___basesoc_ethmac_interface2_dat_r;
wire    [3:0] __main___basesoc_ethmac_interface2_sel;
wire          __main___basesoc_ethmac_interface2_cyc;
wire          __main___basesoc_ethmac_interface2_stb;
reg           __main___basesoc_ethmac_interface2_ack = 1'd0;
wire          __main___basesoc_ethmac_interface2_we;
wire    [2:0] __main___basesoc_ethmac_interface2_cti;
wire    [1:0] __main___basesoc_ethmac_interface2_bte;
reg           __main___basesoc_ethmac_interface2_err = 1'd0;
reg           __main___basesoc_ethmac_sram4_adr_burst = 1'd0;
wire    [8:0] __main___basesoc_ethmac_sram4_adr;
wire   [31:0] __main___basesoc_ethmac_sram4_dat_r;
reg     [3:0] __main___basesoc_ethmac_sram4_we = 4'd0;
wire   [31:0] __main___basesoc_ethmac_sram4_dat_w;
wire   [29:0] __main___basesoc_ethmac_interface3_adr;
wire   [31:0] __main___basesoc_ethmac_interface3_dat_w;
wire   [31:0] __main___basesoc_ethmac_interface3_dat_r;
wire    [3:0] __main___basesoc_ethmac_interface3_sel;
wire          __main___basesoc_ethmac_interface3_cyc;
wire          __main___basesoc_ethmac_interface3_stb;
reg           __main___basesoc_ethmac_interface3_ack = 1'd0;
wire          __main___basesoc_ethmac_interface3_we;
wire    [2:0] __main___basesoc_ethmac_interface3_cti;
wire    [1:0] __main___basesoc_ethmac_interface3_bte;
reg           __main___basesoc_ethmac_interface3_err = 1'd0;
reg           __main___basesoc_ethmac_sram5_adr_burst = 1'd0;
wire    [8:0] __main___basesoc_ethmac_sram5_adr;
wire   [31:0] __main___basesoc_ethmac_sram5_dat_r;
reg     [3:0] __main___basesoc_ethmac_sram5_we = 4'd0;
wire   [31:0] __main___basesoc_ethmac_sram5_dat_w;
reg     [3:0] __main___basesoc_ethmac_slave_sel = 4'd0;
reg     [3:0] __main___basesoc_ethmac_slave_sel_r = 4'd0;
wire          __main___scl;
wire          __main___oe;
wire          __main___sda0;
reg     [2:0] __main____w_storage = 3'd5;
reg           __main____w_re = 1'd0;
wire          __main___sda1;
wire          __main____r_status;
wire          __main____r_we;
reg           __main____r_re = 1'd0;
wire          __main___start0;
wire    [7:0] __main___length0;
reg           __main___done0 = 1'd0;
reg           __main___irq = 1'd0;
wire    [7:0] __main___mosi;
reg     [7:0] __main___miso = 8'd0;
wire          __main___cs;
wire          __main___cs_mode;
wire          __main___loopback;
wire   [15:0] __main___clk_divider0;
reg           __main___start1 = 1'd0;
wire    [7:0] __main___length1;
reg    [15:0] __main___control_storage = 16'd0;
reg           __main___control_re = 1'd0;
wire          __main___done1;
wire          __main___mode0;
reg     [1:0] __main___status_status = 2'd0;
wire          __main___status_we;
reg           __main___status_re = 1'd0;
reg     [7:0] __main___mosi_storage = 8'd0;
reg           __main___mosi_re = 1'd0;
wire    [7:0] __main___miso_status;
wire          __main___miso_we;
reg           __main___miso_re = 1'd0;
wire          __main___sel;
wire          __main___mode1;
reg    [16:0] __main___cs_storage = 17'd1;
reg           __main___cs_re = 1'd0;
wire          __main___mode2;
reg           __main___loopback_storage = 1'd0;
reg           __main___loopback_re = 1'd0;
reg           __main___clk_enable = 1'd0;
reg           __main___xfer_enable = 1'd0;
reg     [2:0] __main___count = 3'd0;
reg           __main___mosi_latch = 1'd0;
reg           __main___miso_latch = 1'd0;
reg    [15:0] __main___clk_divider1 = 16'd0;
wire          __main___clk_rise;
wire          __main___clk_fall;
reg     [7:0] __main___mosi_data = 8'd0;
reg     [2:0] __main___mosi_sel = 3'd0;
reg     [7:0] __main___miso_data = 8'd0;
reg    [15:0] __main___spimaster_storage = 16'd13;
reg           __main___spimaster_re = 1'd0;
reg           __main___leds_storage = 1'd0;
reg           __main___leds_re = 1'd0;
reg    [13:0] builder_basesoc_adr = 14'd0;
reg           builder_basesoc_we = 1'd0;
reg    [31:0] builder_basesoc_dat_w = 32'd0;
wire   [31:0] builder_basesoc_dat_r;
wire   [29:0] builder_basesoc_wishbone_adr;
wire   [31:0] builder_basesoc_wishbone_dat_w;
reg    [31:0] builder_basesoc_wishbone_dat_r = 32'd0;
wire    [3:0] builder_basesoc_wishbone_sel;
wire          builder_basesoc_wishbone_cyc;
wire          builder_basesoc_wishbone_stb;
reg           builder_basesoc_wishbone_ack = 1'd0;
wire          builder_basesoc_wishbone_we;
wire    [2:0] builder_basesoc_wishbone_cti;
wire    [1:0] builder_basesoc_wishbone_bte;
reg           builder_basesoc_wishbone_err = 1'd0;
wire   [29:0] builder_shared_adr;
wire   [31:0] builder_shared_dat_w;
reg    [31:0] builder_shared_dat_r = 32'd0;
wire    [3:0] builder_shared_sel;
wire          builder_shared_cyc;
wire          builder_shared_stb;
reg           builder_shared_ack = 1'd0;
wire          builder_shared_we;
wire    [2:0] builder_shared_cti;
wire    [1:0] builder_shared_bte;
wire          builder_shared_err;
wire    [1:0] builder_request;
reg           builder_grant = 1'd0;
reg     [4:0] builder_slave_sel = 5'd0;
reg     [4:0] builder_slave_sel_r = 5'd0;
reg           builder_error = 1'd0;
wire          builder_wait;
wire          builder_done;
reg    [19:0] builder_count = 20'd1000000;
wire   [13:0] builder_csr_bankarray_interface0_bank_bus_adr;
wire          builder_csr_bankarray_interface0_bank_bus_we;
wire   [31:0] builder_csr_bankarray_interface0_bank_bus_dat_w;
reg    [31:0] builder_csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
reg           builder_csr_bankarray_csrbank0_reset0_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank0_reset0_r;
reg           builder_csr_bankarray_csrbank0_reset0_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank0_reset0_w;
reg           builder_csr_bankarray_csrbank0_scratch0_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank0_scratch0_r;
reg           builder_csr_bankarray_csrbank0_scratch0_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank0_scratch0_w;
reg           builder_csr_bankarray_csrbank0_bus_errors_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank0_bus_errors_r;
reg           builder_csr_bankarray_csrbank0_bus_errors_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank0_bus_errors_w;
wire          builder_csr_bankarray_csrbank0_sel;
wire   [13:0] builder_csr_bankarray_interface1_bank_bus_adr;
wire          builder_csr_bankarray_interface1_bank_bus_we;
wire   [31:0] builder_csr_bankarray_interface1_bank_bus_dat_w;
reg    [31:0] builder_csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
reg           builder_csr_bankarray_csrbank1_sram_writer_slot_re = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_writer_slot_r;
reg           builder_csr_bankarray_csrbank1_sram_writer_slot_we = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_writer_slot_w;
reg           builder_csr_bankarray_csrbank1_sram_writer_length_re = 1'd0;
wire   [10:0] builder_csr_bankarray_csrbank1_sram_writer_length_r;
reg           builder_csr_bankarray_csrbank1_sram_writer_length_we = 1'd0;
wire   [10:0] builder_csr_bankarray_csrbank1_sram_writer_length_w;
reg           builder_csr_bankarray_csrbank1_sram_writer_errors_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank1_sram_writer_errors_r;
reg           builder_csr_bankarray_csrbank1_sram_writer_errors_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank1_sram_writer_errors_w;
reg           builder_csr_bankarray_csrbank1_sram_writer_ev_status_re = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_writer_ev_status_r;
reg           builder_csr_bankarray_csrbank1_sram_writer_ev_status_we = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_writer_ev_status_w;
reg           builder_csr_bankarray_csrbank1_sram_writer_ev_pending_re = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_writer_ev_pending_r;
reg           builder_csr_bankarray_csrbank1_sram_writer_ev_pending_we = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_writer_ev_pending_w;
reg           builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_re = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_r;
reg           builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_we = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_w;
reg           builder_csr_bankarray_csrbank1_sram_reader_ready_re = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_reader_ready_r;
reg           builder_csr_bankarray_csrbank1_sram_reader_ready_we = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_reader_ready_w;
reg           builder_csr_bankarray_csrbank1_sram_reader_level_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank1_sram_reader_level_r;
reg           builder_csr_bankarray_csrbank1_sram_reader_level_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank1_sram_reader_level_w;
reg           builder_csr_bankarray_csrbank1_sram_reader_slot0_re = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_reader_slot0_r;
reg           builder_csr_bankarray_csrbank1_sram_reader_slot0_we = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_reader_slot0_w;
reg           builder_csr_bankarray_csrbank1_sram_reader_length0_re = 1'd0;
wire   [10:0] builder_csr_bankarray_csrbank1_sram_reader_length0_r;
reg           builder_csr_bankarray_csrbank1_sram_reader_length0_we = 1'd0;
wire   [10:0] builder_csr_bankarray_csrbank1_sram_reader_length0_w;
reg           builder_csr_bankarray_csrbank1_sram_reader_ev_status_re = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_reader_ev_status_r;
reg           builder_csr_bankarray_csrbank1_sram_reader_ev_status_we = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_reader_ev_status_w;
reg           builder_csr_bankarray_csrbank1_sram_reader_ev_pending_re = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_reader_ev_pending_r;
reg           builder_csr_bankarray_csrbank1_sram_reader_ev_pending_we = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_reader_ev_pending_w;
reg           builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_re = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_r;
reg           builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_we = 1'd0;
wire          builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_w;
reg           builder_csr_bankarray_csrbank1_preamble_crc_re = 1'd0;
wire          builder_csr_bankarray_csrbank1_preamble_crc_r;
reg           builder_csr_bankarray_csrbank1_preamble_crc_we = 1'd0;
wire          builder_csr_bankarray_csrbank1_preamble_crc_w;
reg           builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_r;
reg           builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_w;
reg           builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_r;
reg           builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_w;
wire          builder_csr_bankarray_csrbank1_sel;
wire   [13:0] builder_csr_bankarray_interface2_bank_bus_adr;
wire          builder_csr_bankarray_interface2_bank_bus_we;
wire   [31:0] builder_csr_bankarray_interface2_bank_bus_dat_w;
reg    [31:0] builder_csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
reg           builder_csr_bankarray_csrbank2_crg_reset0_re = 1'd0;
wire          builder_csr_bankarray_csrbank2_crg_reset0_r;
reg           builder_csr_bankarray_csrbank2_crg_reset0_we = 1'd0;
wire          builder_csr_bankarray_csrbank2_crg_reset0_w;
wire          builder_csr_bankarray_csrbank2_sel;
wire   [13:0] builder_csr_bankarray_interface3_bank_bus_adr;
wire          builder_csr_bankarray_interface3_bank_bus_we;
wire   [31:0] builder_csr_bankarray_interface3_bank_bus_dat_w;
reg    [31:0] builder_csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
reg           builder_csr_bankarray_csrbank3_w0_re = 1'd0;
wire    [2:0] builder_csr_bankarray_csrbank3_w0_r;
reg           builder_csr_bankarray_csrbank3_w0_we = 1'd0;
wire    [2:0] builder_csr_bankarray_csrbank3_w0_w;
reg           builder_csr_bankarray_csrbank3_r_re = 1'd0;
wire          builder_csr_bankarray_csrbank3_r_r;
reg           builder_csr_bankarray_csrbank3_r_we = 1'd0;
wire          builder_csr_bankarray_csrbank3_r_w;
wire          builder_csr_bankarray_csrbank3_sel;
wire   [13:0] builder_csr_bankarray_sram_bus_adr;
wire          builder_csr_bankarray_sram_bus_we;
wire   [31:0] builder_csr_bankarray_sram_bus_dat_w;
reg    [31:0] builder_csr_bankarray_sram_bus_dat_r = 32'd0;
wire    [5:0] builder_csr_bankarray_adr;
wire    [7:0] builder_csr_bankarray_dat_r;
wire          builder_csr_bankarray_sel;
reg           builder_csr_bankarray_sel_r = 1'd0;
wire   [13:0] builder_csr_bankarray_interface4_bank_bus_adr;
wire          builder_csr_bankarray_interface4_bank_bus_we;
wire   [31:0] builder_csr_bankarray_interface4_bank_bus_dat_w;
reg    [31:0] builder_csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
reg           builder_csr_bankarray_csrbank4_out0_re = 1'd0;
wire          builder_csr_bankarray_csrbank4_out0_r;
reg           builder_csr_bankarray_csrbank4_out0_we = 1'd0;
wire          builder_csr_bankarray_csrbank4_out0_w;
wire          builder_csr_bankarray_csrbank4_sel;
wire   [13:0] builder_csr_bankarray_interface5_bank_bus_adr;
wire          builder_csr_bankarray_interface5_bank_bus_we;
wire   [31:0] builder_csr_bankarray_interface5_bank_bus_dat_w;
reg    [31:0] builder_csr_bankarray_interface5_bank_bus_dat_r = 32'd0;
reg           builder_csr_bankarray_csrbank5_dfii_control0_re = 1'd0;
wire    [3:0] builder_csr_bankarray_csrbank5_dfii_control0_r;
reg           builder_csr_bankarray_csrbank5_dfii_control0_we = 1'd0;
wire    [3:0] builder_csr_bankarray_csrbank5_dfii_control0_w;
reg           builder_csr_bankarray_csrbank5_dfii_pi0_command0_re = 1'd0;
wire    [5:0] builder_csr_bankarray_csrbank5_dfii_pi0_command0_r;
reg           builder_csr_bankarray_csrbank5_dfii_pi0_command0_we = 1'd0;
wire    [5:0] builder_csr_bankarray_csrbank5_dfii_pi0_command0_w;
reg           builder_csr_bankarray_csrbank5_dfii_pi0_address0_re = 1'd0;
wire   [10:0] builder_csr_bankarray_csrbank5_dfii_pi0_address0_r;
reg           builder_csr_bankarray_csrbank5_dfii_pi0_address0_we = 1'd0;
wire   [10:0] builder_csr_bankarray_csrbank5_dfii_pi0_address0_w;
reg           builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_r;
reg           builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_w;
reg           builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_r;
reg           builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_w;
reg           builder_csr_bankarray_csrbank5_dfii_pi0_rddata_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank5_dfii_pi0_rddata_r;
reg           builder_csr_bankarray_csrbank5_dfii_pi0_rddata_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank5_dfii_pi0_rddata_w;
wire          builder_csr_bankarray_csrbank5_sel;
wire   [13:0] builder_csr_bankarray_interface6_bank_bus_adr;
wire          builder_csr_bankarray_interface6_bank_bus_we;
wire   [31:0] builder_csr_bankarray_interface6_bank_bus_dat_w;
reg    [31:0] builder_csr_bankarray_interface6_bank_bus_dat_r = 32'd0;
reg           builder_csr_bankarray_csrbank6_control0_re = 1'd0;
wire   [15:0] builder_csr_bankarray_csrbank6_control0_r;
reg           builder_csr_bankarray_csrbank6_control0_we = 1'd0;
wire   [15:0] builder_csr_bankarray_csrbank6_control0_w;
reg           builder_csr_bankarray_csrbank6_status_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank6_status_r;
reg           builder_csr_bankarray_csrbank6_status_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank6_status_w;
reg           builder_csr_bankarray_csrbank6_mosi0_re = 1'd0;
wire    [7:0] builder_csr_bankarray_csrbank6_mosi0_r;
reg           builder_csr_bankarray_csrbank6_mosi0_we = 1'd0;
wire    [7:0] builder_csr_bankarray_csrbank6_mosi0_w;
reg           builder_csr_bankarray_csrbank6_miso_re = 1'd0;
wire    [7:0] builder_csr_bankarray_csrbank6_miso_r;
reg           builder_csr_bankarray_csrbank6_miso_we = 1'd0;
wire    [7:0] builder_csr_bankarray_csrbank6_miso_w;
reg           builder_csr_bankarray_csrbank6_cs0_re = 1'd0;
wire   [16:0] builder_csr_bankarray_csrbank6_cs0_r;
reg           builder_csr_bankarray_csrbank6_cs0_we = 1'd0;
wire   [16:0] builder_csr_bankarray_csrbank6_cs0_w;
reg           builder_csr_bankarray_csrbank6_loopback0_re = 1'd0;
wire          builder_csr_bankarray_csrbank6_loopback0_r;
reg           builder_csr_bankarray_csrbank6_loopback0_we = 1'd0;
wire          builder_csr_bankarray_csrbank6_loopback0_w;
reg           builder_csr_bankarray_csrbank6_clk_divider0_re = 1'd0;
wire   [15:0] builder_csr_bankarray_csrbank6_clk_divider0_r;
reg           builder_csr_bankarray_csrbank6_clk_divider0_we = 1'd0;
wire   [15:0] builder_csr_bankarray_csrbank6_clk_divider0_w;
wire          builder_csr_bankarray_csrbank6_sel;
wire   [13:0] builder_csr_bankarray_interface7_bank_bus_adr;
wire          builder_csr_bankarray_interface7_bank_bus_we;
wire   [31:0] builder_csr_bankarray_interface7_bank_bus_dat_w;
reg    [31:0] builder_csr_bankarray_interface7_bank_bus_dat_r = 32'd0;
reg           builder_csr_bankarray_csrbank7_load0_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank7_load0_r;
reg           builder_csr_bankarray_csrbank7_load0_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank7_load0_w;
reg           builder_csr_bankarray_csrbank7_reload0_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank7_reload0_r;
reg           builder_csr_bankarray_csrbank7_reload0_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank7_reload0_w;
reg           builder_csr_bankarray_csrbank7_en0_re = 1'd0;
wire          builder_csr_bankarray_csrbank7_en0_r;
reg           builder_csr_bankarray_csrbank7_en0_we = 1'd0;
wire          builder_csr_bankarray_csrbank7_en0_w;
reg           builder_csr_bankarray_csrbank7_update_value0_re = 1'd0;
wire          builder_csr_bankarray_csrbank7_update_value0_r;
reg           builder_csr_bankarray_csrbank7_update_value0_we = 1'd0;
wire          builder_csr_bankarray_csrbank7_update_value0_w;
reg           builder_csr_bankarray_csrbank7_value_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank7_value_r;
reg           builder_csr_bankarray_csrbank7_value_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank7_value_w;
reg           builder_csr_bankarray_csrbank7_ev_status_re = 1'd0;
wire          builder_csr_bankarray_csrbank7_ev_status_r;
reg           builder_csr_bankarray_csrbank7_ev_status_we = 1'd0;
wire          builder_csr_bankarray_csrbank7_ev_status_w;
reg           builder_csr_bankarray_csrbank7_ev_pending_re = 1'd0;
wire          builder_csr_bankarray_csrbank7_ev_pending_r;
reg           builder_csr_bankarray_csrbank7_ev_pending_we = 1'd0;
wire          builder_csr_bankarray_csrbank7_ev_pending_w;
reg           builder_csr_bankarray_csrbank7_ev_enable0_re = 1'd0;
wire          builder_csr_bankarray_csrbank7_ev_enable0_r;
reg           builder_csr_bankarray_csrbank7_ev_enable0_we = 1'd0;
wire          builder_csr_bankarray_csrbank7_ev_enable0_w;
reg           builder_csr_bankarray_csrbank7_uptime_latch0_re = 1'd0;
wire          builder_csr_bankarray_csrbank7_uptime_latch0_r;
reg           builder_csr_bankarray_csrbank7_uptime_latch0_we = 1'd0;
wire          builder_csr_bankarray_csrbank7_uptime_latch0_w;
reg           builder_csr_bankarray_csrbank7_uptime_cycles1_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank7_uptime_cycles1_r;
reg           builder_csr_bankarray_csrbank7_uptime_cycles1_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank7_uptime_cycles1_w;
reg           builder_csr_bankarray_csrbank7_uptime_cycles0_re = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank7_uptime_cycles0_r;
reg           builder_csr_bankarray_csrbank7_uptime_cycles0_we = 1'd0;
wire   [31:0] builder_csr_bankarray_csrbank7_uptime_cycles0_w;
wire          builder_csr_bankarray_csrbank7_sel;
wire   [13:0] builder_csr_bankarray_interface8_bank_bus_adr;
wire          builder_csr_bankarray_interface8_bank_bus_we;
wire   [31:0] builder_csr_bankarray_interface8_bank_bus_dat_w;
reg    [31:0] builder_csr_bankarray_interface8_bank_bus_dat_r = 32'd0;
reg           builder_csr_bankarray_csrbank8_txfull_re = 1'd0;
wire          builder_csr_bankarray_csrbank8_txfull_r;
reg           builder_csr_bankarray_csrbank8_txfull_we = 1'd0;
wire          builder_csr_bankarray_csrbank8_txfull_w;
reg           builder_csr_bankarray_csrbank8_rxempty_re = 1'd0;
wire          builder_csr_bankarray_csrbank8_rxempty_r;
reg           builder_csr_bankarray_csrbank8_rxempty_we = 1'd0;
wire          builder_csr_bankarray_csrbank8_rxempty_w;
reg           builder_csr_bankarray_csrbank8_ev_status_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank8_ev_status_r;
reg           builder_csr_bankarray_csrbank8_ev_status_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank8_ev_status_w;
reg           builder_csr_bankarray_csrbank8_ev_pending_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank8_ev_pending_r;
reg           builder_csr_bankarray_csrbank8_ev_pending_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank8_ev_pending_w;
reg           builder_csr_bankarray_csrbank8_ev_enable0_re = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank8_ev_enable0_r;
reg           builder_csr_bankarray_csrbank8_ev_enable0_we = 1'd0;
wire    [1:0] builder_csr_bankarray_csrbank8_ev_enable0_w;
reg           builder_csr_bankarray_csrbank8_txempty_re = 1'd0;
wire          builder_csr_bankarray_csrbank8_txempty_r;
reg           builder_csr_bankarray_csrbank8_txempty_we = 1'd0;
wire          builder_csr_bankarray_csrbank8_txempty_w;
reg           builder_csr_bankarray_csrbank8_rxfull_re = 1'd0;
wire          builder_csr_bankarray_csrbank8_rxfull_r;
reg           builder_csr_bankarray_csrbank8_rxfull_we = 1'd0;
wire          builder_csr_bankarray_csrbank8_rxfull_w;
wire          builder_csr_bankarray_csrbank8_sel;
wire   [13:0] builder_csr_interconnect_adr;
wire          builder_csr_interconnect_we;
wire   [31:0] builder_csr_interconnect_dat_w;
wire   [31:0] builder_csr_interconnect_dat_r;
reg           builder_basesoc_rs232phytx_state = 1'd0;
reg           builder_basesoc_rs232phytx_next_state = 1'd0;
reg     [3:0] __main___basesoc_tx_count_rs232phytx_next_value0 = 4'd0;
reg           __main___basesoc_tx_count_rs232phytx_next_value_ce0 = 1'd0;
reg           __main___basesoc_serial_tx_rs232phytx_next_value1 = 1'd0;
reg           __main___basesoc_serial_tx_rs232phytx_next_value_ce1 = 1'd0;
reg     [7:0] __main___basesoc_tx_data_rs232phytx_next_value2 = 8'd0;
reg           __main___basesoc_tx_data_rs232phytx_next_value_ce2 = 1'd0;
reg           builder_basesoc_rs232phyrx_state = 1'd0;
reg           builder_basesoc_rs232phyrx_next_state = 1'd0;
reg     [3:0] __main___basesoc_rx_count_rs232phyrx_next_value0 = 4'd0;
reg           __main___basesoc_rx_count_rs232phyrx_next_value_ce0 = 1'd0;
reg     [7:0] __main___basesoc_rx_data_rs232phyrx_next_value1 = 8'd0;
reg           __main___basesoc_rx_data_rs232phyrx_next_value_ce1 = 1'd0;
wire          builder_basesoc_crg_ecp5pll;
wire          builder_basesoc_crg_locked;
reg     [1:0] builder_basesoc_litedramcore_refresher_state = 2'd0;
reg     [1:0] builder_basesoc_litedramcore_refresher_next_state = 2'd0;
reg     [2:0] builder_basesoc_litedramcore_bankmachine0_state = 3'd0;
reg     [2:0] builder_basesoc_litedramcore_bankmachine0_next_state = 3'd0;
reg     [2:0] builder_basesoc_litedramcore_bankmachine1_state = 3'd0;
reg     [2:0] builder_basesoc_litedramcore_bankmachine1_next_state = 3'd0;
reg     [2:0] builder_basesoc_litedramcore_bankmachine2_state = 3'd0;
reg     [2:0] builder_basesoc_litedramcore_bankmachine2_next_state = 3'd0;
reg     [2:0] builder_basesoc_litedramcore_bankmachine3_state = 3'd0;
reg     [2:0] builder_basesoc_litedramcore_bankmachine3_next_state = 3'd0;
reg     [2:0] builder_basesoc_litedramcore_multiplexer_state = 3'd0;
reg     [2:0] builder_basesoc_litedramcore_multiplexer_next_state = 3'd0;
wire          builder_basesoc_litedramcore_roundrobin0_request;
wire          builder_basesoc_litedramcore_roundrobin0_grant;
wire          builder_basesoc_litedramcore_roundrobin0_ce;
wire          builder_basesoc_litedramcore_roundrobin1_request;
wire          builder_basesoc_litedramcore_roundrobin1_grant;
wire          builder_basesoc_litedramcore_roundrobin1_ce;
wire          builder_basesoc_litedramcore_roundrobin2_request;
wire          builder_basesoc_litedramcore_roundrobin2_grant;
wire          builder_basesoc_litedramcore_roundrobin2_ce;
wire          builder_basesoc_litedramcore_roundrobin3_request;
wire          builder_basesoc_litedramcore_roundrobin3_grant;
wire          builder_basesoc_litedramcore_roundrobin3_ce;
reg           builder_basesoc_litedramcore_locked0 = 1'd0;
reg           builder_basesoc_litedramcore_locked1 = 1'd0;
reg           builder_basesoc_litedramcore_locked2 = 1'd0;
reg           builder_basesoc_litedramcore_locked3 = 1'd0;
reg           builder_basesoc_litedramcore_new_master_wdata_ready = 1'd0;
reg           builder_basesoc_litedramcore_new_master_rdata_valid0 = 1'd0;
reg           builder_basesoc_litedramcore_new_master_rdata_valid1 = 1'd0;
reg           builder_basesoc_litedramcore_new_master_rdata_valid2 = 1'd0;
reg           builder_basesoc_litedramcore_new_master_rdata_valid3 = 1'd0;
reg     [1:0] builder_basesoc_fullmemorywe_state = 2'd0;
reg     [1:0] builder_basesoc_fullmemorywe_next_state = 2'd0;
reg           builder_basesoc_litedramnativeportconverter_state = 1'd0;
reg           builder_basesoc_litedramnativeportconverter_next_state = 1'd0;
reg     [1:0] __main___basesoc_wishbone_bridge_count_litedramnativeportconverter_next_value = 2'd0;
reg           __main___basesoc_wishbone_bridge_count_litedramnativeportconverter_next_value_ce = 1'd0;
reg     [1:0] builder_basesoc_fsm_state = 2'd0;
reg     [1:0] builder_basesoc_fsm_next_state = 2'd0;
reg           __main___basesoc_wishbone_bridge_aborted_fsm_next_value = 1'd0;
reg           __main___basesoc_wishbone_bridge_aborted_fsm_next_value_ce = 1'd0;
reg           builder_basesoc_liteethphyrmii_state = 1'd0;
reg           builder_basesoc_liteethphyrmii_next_state = 1'd0;
reg           builder_basesoc_txdatapath_liteethmactxlastbe_state = 1'd0;
reg           builder_basesoc_txdatapath_liteethmactxlastbe_next_state = 1'd0;
reg           builder_basesoc_txdatapath_liteethmacpaddinginserter_state = 1'd0;
reg           builder_basesoc_txdatapath_liteethmacpaddinginserter_next_state = 1'd0;
reg    [15:0] __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value = 16'd0;
reg           __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce = 1'd0;
reg     [1:0] builder_basesoc_txdatapath_bufferizeendpoints_state = 2'd0;
reg     [1:0] builder_basesoc_txdatapath_bufferizeendpoints_next_state = 2'd0;
reg    [31:0] __main___basesoc_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0 = 32'd0;
reg           __main___basesoc_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0 = 1'd0;
reg           __main___basesoc_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 = 1'd0;
reg           __main___basesoc_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 = 1'd0;
reg     [1:0] builder_basesoc_txdatapath_liteethmacpreambleinserter_state = 2'd0;
reg     [1:0] builder_basesoc_txdatapath_liteethmacpreambleinserter_next_state = 2'd0;
reg     [2:0] __main___basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value = 3'd0;
reg           __main___basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce = 1'd0;
reg           builder_basesoc_txdatapath_liteethmacgap_state = 1'd0;
reg           builder_basesoc_txdatapath_liteethmacgap_next_state = 1'd0;
reg     [3:0] __main___basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value = 4'd0;
reg           __main___basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce = 1'd0;
reg           builder_basesoc_rxdatapath_liteethmacpreamblechecker_state = 1'd0;
reg           builder_basesoc_rxdatapath_liteethmacpreamblechecker_next_state = 1'd0;
reg     [1:0] builder_basesoc_rxdatapath_bufferizeendpoints_state = 2'd0;
reg     [1:0] builder_basesoc_rxdatapath_bufferizeendpoints_next_state = 2'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value0 = 1'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value_ce0 = 1'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value1 = 1'd0;
reg           __main___basesoc_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value_ce1 = 1'd0;
reg     [2:0] builder_basesoc_liteethmacsramwriter_state = 3'd0;
reg     [2:0] builder_basesoc_liteethmacsramwriter_next_state = 3'd0;
reg    [10:0] __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value = 11'd0;
reg           __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce = 1'd0;
reg    [31:0] __main___basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value = 32'd0;
reg           __main___basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce = 1'd0;
reg           __main___basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value = 1'd0;
reg           __main___basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce = 1'd0;
reg     [1:0] builder_basesoc_liteethmacsramreader_state = 2'd0;
reg     [1:0] builder_basesoc_liteethmacsramreader_next_state = 2'd0;
reg    [10:0] __main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value = 11'd0;
reg           __main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce = 1'd0;
reg     [1:0] builder_basesoc_spimaster_state = 2'd0;
reg     [1:0] builder_basesoc_spimaster_next_state = 2'd0;
reg     [2:0] __main___count_spimaster_next_value = 3'd0;
reg           __main___count_spimaster_next_value_ce = 1'd0;
reg     [1:0] builder_basesoc_wishbone2csr_state = 2'd0;
reg     [1:0] builder_basesoc_wishbone2csr_next_state = 2'd0;
reg    [31:0] builder_basesoc_dat_w_wishbone2csr_next_value0 = 32'd0;
reg           builder_basesoc_dat_w_wishbone2csr_next_value_ce0 = 1'd0;
reg    [13:0] builder_basesoc_adr_wishbone2csr_next_value1 = 14'd0;
reg           builder_basesoc_adr_wishbone2csr_next_value_ce1 = 1'd0;
reg           builder_basesoc_we_wishbone2csr_next_value2 = 1'd0;
reg           builder_basesoc_we_wishbone2csr_next_value_ce2 = 1'd0;
wire   [31:0] builder_t_slice_proxy0;
wire   [31:0] builder_t_slice_proxy1;
wire   [31:0] builder_t_slice_proxy2;
wire   [31:0] builder_t_slice_proxy3;
wire   [31:0] builder_t_slice_proxy4;
wire   [31:0] builder_t_slice_proxy5;
wire   [31:0] builder_t_slice_proxy6;
wire   [31:0] builder_t_slice_proxy7;
wire   [31:0] builder_t_slice_proxy8;
wire   [31:0] builder_t_slice_proxy9;
wire   [31:0] builder_t_slice_proxy10;
wire   [31:0] builder_t_slice_proxy11;
wire   [31:0] builder_t_slice_proxy12;
wire   [31:0] builder_t_slice_proxy13;
wire   [31:0] builder_t_slice_proxy14;
wire   [31:0] builder_t_slice_proxy15;
wire   [31:0] builder_t_slice_proxy16;
wire   [31:0] builder_t_slice_proxy17;
wire   [31:0] builder_t_slice_proxy18;
wire   [31:0] builder_t_slice_proxy19;
wire   [31:0] builder_t_slice_proxy20;
wire   [31:0] builder_t_slice_proxy21;
wire   [31:0] builder_t_slice_proxy22;
wire   [31:0] builder_t_slice_proxy23;
wire   [31:0] builder_t_slice_proxy24;
wire   [31:0] builder_t_slice_proxy25;
wire   [31:0] builder_t_slice_proxy26;
wire   [31:0] builder_t_slice_proxy27;
wire   [31:0] builder_t_slice_proxy28;
wire   [31:0] builder_t_slice_proxy29;
wire   [31:0] builder_t_slice_proxy30;
wire   [31:0] builder_t_slice_proxy31;
wire   [39:0] builder_cases_slice_proxy;
wire   [31:0] builder_t_slice_proxy32;
wire   [31:0] builder_t_slice_proxy33;
wire   [31:0] builder_t_slice_proxy34;
wire   [31:0] builder_t_slice_proxy35;
wire   [31:0] builder_t_slice_proxy36;
wire   [31:0] builder_t_slice_proxy37;
wire   [31:0] builder_t_slice_proxy38;
wire   [31:0] builder_t_slice_proxy39;
wire   [31:0] builder_t_slice_proxy40;
wire   [31:0] builder_t_slice_proxy41;
wire   [31:0] builder_t_slice_proxy42;
wire   [31:0] builder_t_slice_proxy43;
wire   [31:0] builder_t_slice_proxy44;
wire   [31:0] builder_t_slice_proxy45;
wire   [31:0] builder_t_slice_proxy46;
wire   [31:0] builder_t_slice_proxy47;
wire   [31:0] builder_t_slice_proxy48;
wire   [31:0] builder_t_slice_proxy49;
wire   [31:0] builder_t_slice_proxy50;
wire   [31:0] builder_t_slice_proxy51;
wire   [31:0] builder_t_slice_proxy52;
wire   [31:0] builder_t_slice_proxy53;
wire   [31:0] builder_t_slice_proxy54;
wire   [31:0] builder_t_slice_proxy55;
wire   [31:0] builder_t_slice_proxy56;
wire   [31:0] builder_t_slice_proxy57;
wire   [31:0] builder_t_slice_proxy58;
wire   [31:0] builder_t_slice_proxy59;
wire   [31:0] builder_t_slice_proxy60;
wire   [31:0] builder_t_slice_proxy61;
wire   [31:0] builder_t_slice_proxy62;
wire   [31:0] builder_t_slice_proxy63;
reg    [29:0] builder_comb_rhs_array_muxed0 = 30'd0;
reg    [31:0] builder_comb_rhs_array_muxed1 = 32'd0;
reg     [3:0] builder_comb_rhs_array_muxed2 = 4'd0;
reg           builder_comb_rhs_array_muxed3 = 1'd0;
reg           builder_comb_rhs_array_muxed4 = 1'd0;
reg           builder_comb_rhs_array_muxed5 = 1'd0;
reg     [2:0] builder_comb_rhs_array_muxed6 = 3'd0;
reg     [1:0] builder_comb_rhs_array_muxed7 = 2'd0;
reg           builder_comb_rhs_array_muxed8 = 1'd0;
reg    [10:0] builder_comb_rhs_array_muxed9 = 11'd0;
reg     [1:0] builder_comb_rhs_array_muxed10 = 2'd0;
reg           builder_comb_rhs_array_muxed11 = 1'd0;
reg           builder_comb_rhs_array_muxed12 = 1'd0;
reg           builder_comb_rhs_array_muxed13 = 1'd0;
reg           builder_comb_t_array_muxed0 = 1'd0;
reg           builder_comb_t_array_muxed1 = 1'd0;
reg           builder_comb_t_array_muxed2 = 1'd0;
reg           builder_comb_rhs_array_muxed14 = 1'd0;
reg    [10:0] builder_comb_rhs_array_muxed15 = 11'd0;
reg     [1:0] builder_comb_rhs_array_muxed16 = 2'd0;
reg           builder_comb_rhs_array_muxed17 = 1'd0;
reg           builder_comb_rhs_array_muxed18 = 1'd0;
reg           builder_comb_rhs_array_muxed19 = 1'd0;
reg           builder_comb_t_array_muxed3 = 1'd0;
reg           builder_comb_t_array_muxed4 = 1'd0;
reg           builder_comb_t_array_muxed5 = 1'd0;
reg    [18:0] builder_comb_rhs_array_muxed20 = 19'd0;
reg           builder_comb_rhs_array_muxed21 = 1'd0;
reg           builder_comb_rhs_array_muxed22 = 1'd0;
reg    [18:0] builder_comb_rhs_array_muxed23 = 19'd0;
reg           builder_comb_rhs_array_muxed24 = 1'd0;
reg           builder_comb_rhs_array_muxed25 = 1'd0;
reg    [18:0] builder_comb_rhs_array_muxed26 = 19'd0;
reg           builder_comb_rhs_array_muxed27 = 1'd0;
reg           builder_comb_rhs_array_muxed28 = 1'd0;
reg    [18:0] builder_comb_rhs_array_muxed29 = 19'd0;
reg           builder_comb_rhs_array_muxed30 = 1'd0;
reg           builder_comb_rhs_array_muxed31 = 1'd0;
reg     [1:0] builder_sync_rhs_array_muxed0 = 2'd0;
reg    [10:0] builder_sync_rhs_array_muxed1 = 11'd0;
reg           builder_sync_rhs_array_muxed2 = 1'd0;
reg           builder_sync_rhs_array_muxed3 = 1'd0;
reg           builder_sync_rhs_array_muxed4 = 1'd0;
reg           builder_sync_rhs_array_muxed5 = 1'd0;
reg           builder_sync_rhs_array_muxed6 = 1'd0;
reg           builder_sync_f_array_muxed = 1'd0;
reg           builder_multiregimpl0_regs0 = 1'd0;
reg           builder_multiregimpl0_regs1 = 1'd0;
wire          builder_rst10;
wire          builder_rst11;
wire          builder_rst12;
wire          builder_inferedsdrtristate0__o;
reg           builder_inferedsdrtristate0_oe = 1'd0;
wire          builder_inferedsdrtristate0__i;
wire          sdrio_clk;
wire          builder_inferedsdrtristate1__o;
reg           builder_inferedsdrtristate1_oe = 1'd0;
wire          builder_inferedsdrtristate1__i;
wire          sdrio_clk_1;
wire          builder_inferedsdrtristate2__o;
reg           builder_inferedsdrtristate2_oe = 1'd0;
wire          builder_inferedsdrtristate2__i;
wire          sdrio_clk_2;
wire          builder_inferedsdrtristate3__o;
reg           builder_inferedsdrtristate3_oe = 1'd0;
wire          builder_inferedsdrtristate3__i;
wire          sdrio_clk_3;
wire          builder_inferedsdrtristate4__o;
reg           builder_inferedsdrtristate4_oe = 1'd0;
wire          builder_inferedsdrtristate4__i;
wire          sdrio_clk_4;
wire          builder_inferedsdrtristate5__o;
reg           builder_inferedsdrtristate5_oe = 1'd0;
wire          builder_inferedsdrtristate5__i;
wire          sdrio_clk_5;
wire          builder_inferedsdrtristate6__o;
reg           builder_inferedsdrtristate6_oe = 1'd0;
wire          builder_inferedsdrtristate6__i;
wire          sdrio_clk_6;
wire          builder_inferedsdrtristate7__o;
reg           builder_inferedsdrtristate7_oe = 1'd0;
wire          builder_inferedsdrtristate7__i;
wire          sdrio_clk_7;
wire          builder_inferedsdrtristate8__o;
reg           builder_inferedsdrtristate8_oe = 1'd0;
wire          builder_inferedsdrtristate8__i;
wire          sdrio_clk_8;
wire          builder_inferedsdrtristate9__o;
reg           builder_inferedsdrtristate9_oe = 1'd0;
wire          builder_inferedsdrtristate9__i;
wire          sdrio_clk_9;
wire          builder_inferedsdrtristate10__o;
reg           builder_inferedsdrtristate10_oe = 1'd0;
wire          builder_inferedsdrtristate10__i;
wire          sdrio_clk_10;
wire          builder_inferedsdrtristate11__o;
reg           builder_inferedsdrtristate11_oe = 1'd0;
wire          builder_inferedsdrtristate11__i;
wire          sdrio_clk_11;
wire          builder_inferedsdrtristate12__o;
reg           builder_inferedsdrtristate12_oe = 1'd0;
wire          builder_inferedsdrtristate12__i;
wire          sdrio_clk_12;
wire          builder_inferedsdrtristate13__o;
reg           builder_inferedsdrtristate13_oe = 1'd0;
wire          builder_inferedsdrtristate13__i;
wire          sdrio_clk_13;
wire          builder_inferedsdrtristate14__o;
reg           builder_inferedsdrtristate14_oe = 1'd0;
wire          builder_inferedsdrtristate14__i;
wire          sdrio_clk_14;
wire          builder_inferedsdrtristate15__o;
reg           builder_inferedsdrtristate15_oe = 1'd0;
wire          builder_inferedsdrtristate15__i;
wire          sdrio_clk_15;
wire          builder_inferedsdrtristate16__o;
reg           builder_inferedsdrtristate16_oe = 1'd0;
wire          builder_inferedsdrtristate16__i;
wire          sdrio_clk_16;
wire          builder_inferedsdrtristate17__o;
reg           builder_inferedsdrtristate17_oe = 1'd0;
wire          builder_inferedsdrtristate17__i;
wire          sdrio_clk_17;
wire          builder_inferedsdrtristate18__o;
reg           builder_inferedsdrtristate18_oe = 1'd0;
wire          builder_inferedsdrtristate18__i;
wire          sdrio_clk_18;
wire          builder_inferedsdrtristate19__o;
reg           builder_inferedsdrtristate19_oe = 1'd0;
wire          builder_inferedsdrtristate19__i;
wire          sdrio_clk_19;
wire          builder_inferedsdrtristate20__o;
reg           builder_inferedsdrtristate20_oe = 1'd0;
wire          builder_inferedsdrtristate20__i;
wire          sdrio_clk_20;
wire          builder_inferedsdrtristate21__o;
reg           builder_inferedsdrtristate21_oe = 1'd0;
wire          builder_inferedsdrtristate21__i;
wire          sdrio_clk_21;
wire          builder_inferedsdrtristate22__o;
reg           builder_inferedsdrtristate22_oe = 1'd0;
wire          builder_inferedsdrtristate22__i;
wire          sdrio_clk_22;
wire          builder_inferedsdrtristate23__o;
reg           builder_inferedsdrtristate23_oe = 1'd0;
wire          builder_inferedsdrtristate23__i;
wire          sdrio_clk_23;
wire          builder_inferedsdrtristate24__o;
reg           builder_inferedsdrtristate24_oe = 1'd0;
wire          builder_inferedsdrtristate24__i;
wire          sdrio_clk_24;
wire          builder_inferedsdrtristate25__o;
reg           builder_inferedsdrtristate25_oe = 1'd0;
wire          builder_inferedsdrtristate25__i;
wire          sdrio_clk_25;
wire          builder_inferedsdrtristate26__o;
reg           builder_inferedsdrtristate26_oe = 1'd0;
wire          builder_inferedsdrtristate26__i;
wire          sdrio_clk_26;
wire          builder_inferedsdrtristate27__o;
reg           builder_inferedsdrtristate27_oe = 1'd0;
wire          builder_inferedsdrtristate27__i;
wire          sdrio_clk_27;
wire          builder_inferedsdrtristate28__o;
reg           builder_inferedsdrtristate28_oe = 1'd0;
wire          builder_inferedsdrtristate28__i;
wire          sdrio_clk_28;
wire          builder_inferedsdrtristate29__o;
reg           builder_inferedsdrtristate29_oe = 1'd0;
wire          builder_inferedsdrtristate29__i;
wire          sdrio_clk_29;
wire          builder_inferedsdrtristate30__o;
reg           builder_inferedsdrtristate30_oe = 1'd0;
wire          builder_inferedsdrtristate30__i;
wire          sdrio_clk_30;
wire          builder_inferedsdrtristate31__o;
reg           builder_inferedsdrtristate31_oe = 1'd0;
wire          builder_inferedsdrtristate31__i;
wire          sdrio_clk_31;
wire          builder_rst13;
wire          builder_rst14;
reg           builder_multiregimpl1_regs0 = 1'd0;
reg           builder_multiregimpl1_regs1 = 1'd0;
reg     [1:0] builder_multiregimpl2_regs0 = 2'd0;
reg     [1:0] builder_multiregimpl2_regs1 = 2'd0;
reg     [5:0] builder_multiregimpl3_regs0 = 6'd0;
reg     [5:0] builder_multiregimpl3_regs1 = 6'd0;
reg     [5:0] builder_multiregimpl4_regs0 = 6'd0;
reg     [5:0] builder_multiregimpl4_regs1 = 6'd0;
reg           builder_multiregimpl5_regs0 = 1'd0;
reg           builder_multiregimpl5_regs1 = 1'd0;
reg           builder_multiregimpl6_regs0 = 1'd0;
reg           builder_multiregimpl6_regs1 = 1'd0;
reg     [5:0] builder_multiregimpl7_regs0 = 6'd0;
reg     [5:0] builder_multiregimpl7_regs1 = 6'd0;
reg     [5:0] builder_multiregimpl8_regs0 = 6'd0;
reg     [5:0] builder_multiregimpl8_regs1 = 6'd0;
wire          builder_expr;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign __main___basesoc_reset = (__main___basesoc_soc_rst | __main___basesoc_cpu_rst);
always @(*) begin
    __main___crg_rst <= 1'd0;
    if (__main___basesoc_soc_rst) begin
        __main___crg_rst <= 1'd1;
    end
end
assign __main___basesoc_bus_error = builder_error;
always @(*) begin
    __main___basesoc_interrupt <= 32'd0;
    __main___basesoc_interrupt[2] <= __main___basesoc_ethmac_sram167_irq;
    __main___basesoc_interrupt[1] <= __main___basesoc_timer_irq;
    __main___basesoc_interrupt[0] <= __main___basesoc_uart_irq;
end
assign builder_shared_adr = builder_comb_rhs_array_muxed0;
assign builder_shared_dat_w = builder_comb_rhs_array_muxed1;
assign builder_shared_sel = builder_comb_rhs_array_muxed2;
assign builder_shared_cyc = builder_comb_rhs_array_muxed3;
assign builder_shared_stb = builder_comb_rhs_array_muxed4;
assign builder_shared_we = builder_comb_rhs_array_muxed5;
assign builder_shared_cti = builder_comb_rhs_array_muxed6;
assign builder_shared_bte = builder_comb_rhs_array_muxed7;
assign __main___basesoc_ibus_dat_r = builder_shared_dat_r;
assign __main___basesoc_dbus_dat_r = builder_shared_dat_r;
assign __main___basesoc_ibus_ack = (builder_shared_ack & (builder_grant == 1'd0));
assign __main___basesoc_dbus_ack = (builder_shared_ack & (builder_grant == 1'd1));
assign __main___basesoc_ibus_err = (builder_shared_err & (builder_grant == 1'd0));
assign __main___basesoc_dbus_err = (builder_shared_err & (builder_grant == 1'd1));
assign builder_request = {__main___basesoc_dbus_cyc, __main___basesoc_ibus_cyc};
always @(*) begin
    builder_slave_sel <= 5'd0;
    builder_slave_sel[0] <= (builder_shared_adr[29:14] == 1'd0);
    builder_slave_sel[1] <= (builder_shared_adr[29:11] == 16'd32768);
    builder_slave_sel[2] <= (builder_shared_adr[29:21] == 8'd128);
    builder_slave_sel[3] <= (builder_shared_adr[29:11] == 19'd262144);
    builder_slave_sel[4] <= (builder_shared_adr[29:14] == 16'd61440);
end
assign __main___basesoc_basesoc_ram_bus_adr = builder_shared_adr;
assign __main___basesoc_basesoc_ram_bus_dat_w = builder_shared_dat_w;
assign __main___basesoc_basesoc_ram_bus_sel = builder_shared_sel;
assign __main___basesoc_basesoc_ram_bus_stb = builder_shared_stb;
assign __main___basesoc_basesoc_ram_bus_we = builder_shared_we;
assign __main___basesoc_basesoc_ram_bus_cti = builder_shared_cti;
assign __main___basesoc_basesoc_ram_bus_bte = builder_shared_bte;
assign __main___basesoc_ram_bus_ram_bus_adr = builder_shared_adr;
assign __main___basesoc_ram_bus_ram_bus_dat_w = builder_shared_dat_w;
assign __main___basesoc_ram_bus_ram_bus_sel = builder_shared_sel;
assign __main___basesoc_ram_bus_ram_bus_stb = builder_shared_stb;
assign __main___basesoc_ram_bus_ram_bus_we = builder_shared_we;
assign __main___basesoc_ram_bus_ram_bus_cti = builder_shared_cti;
assign __main___basesoc_ram_bus_ram_bus_bte = builder_shared_bte;
assign __main___basesoc_wb_sdram_adr = builder_shared_adr;
assign __main___basesoc_wb_sdram_dat_w = builder_shared_dat_w;
assign __main___basesoc_wb_sdram_sel = builder_shared_sel;
assign __main___basesoc_wb_sdram_stb = builder_shared_stb;
assign __main___basesoc_wb_sdram_we = builder_shared_we;
assign __main___basesoc_wb_sdram_cti = builder_shared_cti;
assign __main___basesoc_wb_sdram_bte = builder_shared_bte;
assign __main___basesoc_ethmac_bus_adr = builder_shared_adr;
assign __main___basesoc_ethmac_bus_dat_w = builder_shared_dat_w;
assign __main___basesoc_ethmac_bus_sel = builder_shared_sel;
assign __main___basesoc_ethmac_bus_stb = builder_shared_stb;
assign __main___basesoc_ethmac_bus_we = builder_shared_we;
assign __main___basesoc_ethmac_bus_cti = builder_shared_cti;
assign __main___basesoc_ethmac_bus_bte = builder_shared_bte;
assign builder_basesoc_wishbone_adr = builder_shared_adr;
assign builder_basesoc_wishbone_dat_w = builder_shared_dat_w;
assign builder_basesoc_wishbone_sel = builder_shared_sel;
assign builder_basesoc_wishbone_stb = builder_shared_stb;
assign builder_basesoc_wishbone_we = builder_shared_we;
assign builder_basesoc_wishbone_cti = builder_shared_cti;
assign builder_basesoc_wishbone_bte = builder_shared_bte;
assign __main___basesoc_basesoc_ram_bus_cyc = (builder_shared_cyc & builder_slave_sel[0]);
assign __main___basesoc_ram_bus_ram_bus_cyc = (builder_shared_cyc & builder_slave_sel[1]);
assign __main___basesoc_wb_sdram_cyc = (builder_shared_cyc & builder_slave_sel[2]);
assign __main___basesoc_ethmac_bus_cyc = (builder_shared_cyc & builder_slave_sel[3]);
assign builder_basesoc_wishbone_cyc = (builder_shared_cyc & builder_slave_sel[4]);
assign builder_shared_err = ((((__main___basesoc_basesoc_ram_bus_err | __main___basesoc_ram_bus_ram_bus_err) | __main___basesoc_wb_sdram_err) | __main___basesoc_ethmac_bus_err) | builder_basesoc_wishbone_err);
assign builder_wait = ((builder_shared_stb & builder_shared_cyc) & (~builder_shared_ack));
always @(*) begin
    builder_shared_ack <= 1'd0;
    builder_error <= 1'd0;
    builder_shared_dat_r <= 32'd0;
    builder_shared_ack <= ((((__main___basesoc_basesoc_ram_bus_ack | __main___basesoc_ram_bus_ram_bus_ack) | __main___basesoc_wb_sdram_ack) | __main___basesoc_ethmac_bus_ack) | builder_basesoc_wishbone_ack);
    builder_shared_dat_r <= ((((({32{builder_slave_sel_r[0]}} & __main___basesoc_basesoc_ram_bus_dat_r) | ({32{builder_slave_sel_r[1]}} & __main___basesoc_ram_bus_ram_bus_dat_r)) | ({32{builder_slave_sel_r[2]}} & __main___basesoc_wb_sdram_dat_r)) | ({32{builder_slave_sel_r[3]}} & __main___basesoc_ethmac_bus_dat_r)) | ({32{builder_slave_sel_r[4]}} & builder_basesoc_wishbone_dat_r));
    if (builder_done) begin
        builder_shared_dat_r <= 32'd4294967295;
        builder_shared_ack <= 1'd1;
        builder_error <= 1'd1;
    end
end
assign builder_done = (builder_count == 1'd0);
assign __main___basesoc_bus_errors_status = __main___basesoc_bus_errors;
always @(*) begin
    __main___basesoc_soc_rst <= 1'd0;
    if (__main___basesoc_reset_re) begin
        __main___basesoc_soc_rst <= __main___basesoc_reset_storage[0];
    end
end
assign __main___basesoc_cpu_rst = __main___basesoc_reset_storage[1];
assign builder_csr_bankarray_csrbank0_reset0_w = __main___basesoc_reset_storage[1:0];
assign builder_csr_bankarray_csrbank0_scratch0_w = __main___basesoc_scratch_storage[31:0];
assign builder_csr_bankarray_csrbank0_bus_errors_w = __main___basesoc_bus_errors_status[31:0];
assign __main___basesoc_bus_errors_we = builder_csr_bankarray_csrbank0_bus_errors_we;
assign __main___basesoc_basesoc_adr = __main___basesoc_basesoc_ram_bus_adr[13:0];
assign __main___basesoc_basesoc_ram_bus_dat_r = __main___basesoc_basesoc_dat_r;
always @(*) begin
    __main___basesoc_ram_we <= 4'd0;
    __main___basesoc_ram_we[0] <= (((__main___basesoc_ram_bus_ram_bus_cyc & __main___basesoc_ram_bus_ram_bus_stb) & __main___basesoc_ram_bus_ram_bus_we) & __main___basesoc_ram_bus_ram_bus_sel[0]);
    __main___basesoc_ram_we[1] <= (((__main___basesoc_ram_bus_ram_bus_cyc & __main___basesoc_ram_bus_ram_bus_stb) & __main___basesoc_ram_bus_ram_bus_we) & __main___basesoc_ram_bus_ram_bus_sel[1]);
    __main___basesoc_ram_we[2] <= (((__main___basesoc_ram_bus_ram_bus_cyc & __main___basesoc_ram_bus_ram_bus_stb) & __main___basesoc_ram_bus_ram_bus_we) & __main___basesoc_ram_bus_ram_bus_sel[2]);
    __main___basesoc_ram_we[3] <= (((__main___basesoc_ram_bus_ram_bus_cyc & __main___basesoc_ram_bus_ram_bus_stb) & __main___basesoc_ram_bus_ram_bus_we) & __main___basesoc_ram_bus_ram_bus_sel[3]);
end
assign __main___basesoc_ram_adr = __main___basesoc_ram_bus_ram_bus_adr[10:0];
assign __main___basesoc_ram_bus_ram_bus_dat_r = __main___basesoc_ram_dat_r;
assign __main___basesoc_ram_dat_w = __main___basesoc_ram_bus_ram_bus_dat_w;
always @(*) begin
    __main___basesoc_tx_data_rs232phytx_next_value2 <= 8'd0;
    __main___basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd0;
    __main___basesoc_tx_sink_ready <= 1'd0;
    builder_basesoc_rs232phytx_next_state <= 1'd0;
    __main___basesoc_tx_count_rs232phytx_next_value0 <= 4'd0;
    __main___basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd0;
    __main___basesoc_tx_enable <= 1'd0;
    __main___basesoc_serial_tx_rs232phytx_next_value1 <= 1'd0;
    __main___basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd0;
    builder_basesoc_rs232phytx_next_state <= builder_basesoc_rs232phytx_state;
    case (builder_basesoc_rs232phytx_state)
        1'd1: begin
            __main___basesoc_tx_enable <= 1'd1;
            if (__main___basesoc_tx_tick) begin
                __main___basesoc_serial_tx_rs232phytx_next_value1 <= __main___basesoc_tx_data;
                __main___basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                __main___basesoc_tx_count_rs232phytx_next_value0 <= (__main___basesoc_tx_count + 1'd1);
                __main___basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
                __main___basesoc_tx_data_rs232phytx_next_value2 <= {1'd1, __main___basesoc_tx_data[7:1]};
                __main___basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                if ((__main___basesoc_tx_count == 4'd9)) begin
                    __main___basesoc_tx_sink_ready <= 1'd1;
                    builder_basesoc_rs232phytx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            __main___basesoc_tx_count_rs232phytx_next_value0 <= 1'd0;
            __main___basesoc_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
            __main___basesoc_serial_tx_rs232phytx_next_value1 <= 1'd1;
            __main___basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
            if (__main___basesoc_tx_sink_valid) begin
                __main___basesoc_serial_tx_rs232phytx_next_value1 <= 1'd0;
                __main___basesoc_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                __main___basesoc_tx_data_rs232phytx_next_value2 <= __main___basesoc_tx_sink_payload_data;
                __main___basesoc_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                builder_basesoc_rs232phytx_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    __main___basesoc_rx_data_rs232phyrx_next_value1 <= 8'd0;
    __main___basesoc_rx_data_rs232phyrx_next_value_ce1 <= 1'd0;
    __main___basesoc_rx_source_valid <= 1'd0;
    builder_basesoc_rs232phyrx_next_state <= 1'd0;
    __main___basesoc_rx_source_payload_data <= 8'd0;
    __main___basesoc_rx_count_rs232phyrx_next_value0 <= 4'd0;
    __main___basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd0;
    __main___basesoc_rx_enable <= 1'd0;
    builder_basesoc_rs232phyrx_next_state <= builder_basesoc_rs232phyrx_state;
    case (builder_basesoc_rs232phyrx_state)
        1'd1: begin
            __main___basesoc_rx_enable <= 1'd1;
            if (__main___basesoc_rx_tick) begin
                __main___basesoc_rx_count_rs232phyrx_next_value0 <= (__main___basesoc_rx_count + 1'd1);
                __main___basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
                __main___basesoc_rx_data_rs232phyrx_next_value1 <= {__main___basesoc_rx_rx, __main___basesoc_rx_data[7:1]};
                __main___basesoc_rx_data_rs232phyrx_next_value_ce1 <= 1'd1;
                if ((__main___basesoc_rx_count == 4'd9)) begin
                    __main___basesoc_rx_source_valid <= (__main___basesoc_rx_rx == 1'd1);
                    __main___basesoc_rx_source_payload_data <= __main___basesoc_rx_data;
                    builder_basesoc_rs232phyrx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            __main___basesoc_rx_count_rs232phyrx_next_value0 <= 1'd0;
            __main___basesoc_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
            if (((__main___basesoc_rx_rx == 1'd0) & (__main___basesoc_rx_rx_d == 1'd1))) begin
                builder_basesoc_rs232phyrx_next_state <= 1'd1;
            end
        end
    endcase
end
assign __main___basesoc_uart_uart_sink_valid = __main___basesoc_rx_source_valid;
assign __main___basesoc_rx_source_ready = __main___basesoc_uart_uart_sink_ready;
assign __main___basesoc_uart_uart_sink_first = __main___basesoc_rx_source_first;
assign __main___basesoc_uart_uart_sink_last = __main___basesoc_rx_source_last;
assign __main___basesoc_uart_uart_sink_payload_data = __main___basesoc_rx_source_payload_data;
assign __main___basesoc_tx_sink_valid = __main___basesoc_uart_uart_source_valid;
assign __main___basesoc_uart_uart_source_ready = __main___basesoc_tx_sink_ready;
assign __main___basesoc_tx_sink_first = __main___basesoc_uart_uart_source_first;
assign __main___basesoc_tx_sink_last = __main___basesoc_uart_uart_source_last;
assign __main___basesoc_tx_sink_payload_data = __main___basesoc_uart_uart_source_payload_data;
assign __main___basesoc_uart_tx_fifo_sink_valid = __main___basesoc_uart_rxtx_re;
assign __main___basesoc_uart_tx_fifo_sink_payload_data = __main___basesoc_uart_rxtx_r;
assign __main___basesoc_uart_uart_source_valid = __main___basesoc_uart_tx_fifo_source_valid;
assign __main___basesoc_uart_tx_fifo_source_ready = __main___basesoc_uart_uart_source_ready;
assign __main___basesoc_uart_uart_source_first = __main___basesoc_uart_tx_fifo_source_first;
assign __main___basesoc_uart_uart_source_last = __main___basesoc_uart_tx_fifo_source_last;
assign __main___basesoc_uart_uart_source_payload_data = __main___basesoc_uart_tx_fifo_source_payload_data;
assign __main___basesoc_uart_txfull_status = (~__main___basesoc_uart_tx_fifo_sink_ready);
assign __main___basesoc_uart_txempty_status = (~__main___basesoc_uart_tx_fifo_source_valid);
assign __main___basesoc_uart_tx_trigger = __main___basesoc_uart_tx_fifo_sink_ready;
assign __main___basesoc_uart_rx_fifo_sink_valid = __main___basesoc_uart_uart_sink_valid;
assign __main___basesoc_uart_uart_sink_ready = __main___basesoc_uart_rx_fifo_sink_ready;
assign __main___basesoc_uart_rx_fifo_sink_first = __main___basesoc_uart_uart_sink_first;
assign __main___basesoc_uart_rx_fifo_sink_last = __main___basesoc_uart_uart_sink_last;
assign __main___basesoc_uart_rx_fifo_sink_payload_data = __main___basesoc_uart_uart_sink_payload_data;
assign __main___basesoc_uart_rxtx_w = __main___basesoc_uart_rx_fifo_source_payload_data;
assign __main___basesoc_uart_rx_fifo_source_ready = (__main___basesoc_uart_rx_clear | (1'd0 & __main___basesoc_uart_rxtx_we));
assign __main___basesoc_uart_rxempty_status = (~__main___basesoc_uart_rx_fifo_source_valid);
assign __main___basesoc_uart_rxfull_status = (~__main___basesoc_uart_rx_fifo_sink_ready);
assign __main___basesoc_uart_rx_trigger = __main___basesoc_uart_rx_fifo_source_valid;
assign __main___basesoc_uart_tx0 = __main___basesoc_uart_tx_status;
assign __main___basesoc_uart_tx1 = __main___basesoc_uart_tx_pending;
always @(*) begin
    __main___basesoc_uart_tx_clear <= 1'd0;
    if ((__main___basesoc_uart_pending_re & __main___basesoc_uart_pending_r[0])) begin
        __main___basesoc_uart_tx_clear <= 1'd1;
    end
end
assign __main___basesoc_uart_rx0 = __main___basesoc_uart_rx_status;
assign __main___basesoc_uart_rx1 = __main___basesoc_uart_rx_pending;
always @(*) begin
    __main___basesoc_uart_rx_clear <= 1'd0;
    if ((__main___basesoc_uart_pending_re & __main___basesoc_uart_pending_r[1])) begin
        __main___basesoc_uart_rx_clear <= 1'd1;
    end
end
assign __main___basesoc_uart_irq = ((__main___basesoc_uart_pending_status[0] & __main___basesoc_uart_enable_storage[0]) | (__main___basesoc_uart_pending_status[1] & __main___basesoc_uart_enable_storage[1]));
assign __main___basesoc_uart_tx_status = __main___basesoc_uart_tx_trigger;
assign __main___basesoc_uart_rx_status = __main___basesoc_uart_rx_trigger;
assign __main___basesoc_uart_tx_fifo_syncfifo_din = {__main___basesoc_uart_tx_fifo_fifo_in_last, __main___basesoc_uart_tx_fifo_fifo_in_first, __main___basesoc_uart_tx_fifo_fifo_in_payload_data};
assign {__main___basesoc_uart_tx_fifo_fifo_out_last, __main___basesoc_uart_tx_fifo_fifo_out_first, __main___basesoc_uart_tx_fifo_fifo_out_payload_data} = __main___basesoc_uart_tx_fifo_syncfifo_dout;
assign __main___basesoc_uart_tx_fifo_sink_ready = __main___basesoc_uart_tx_fifo_syncfifo_writable;
assign __main___basesoc_uart_tx_fifo_syncfifo_we = __main___basesoc_uart_tx_fifo_sink_valid;
assign __main___basesoc_uart_tx_fifo_fifo_in_first = __main___basesoc_uart_tx_fifo_sink_first;
assign __main___basesoc_uart_tx_fifo_fifo_in_last = __main___basesoc_uart_tx_fifo_sink_last;
assign __main___basesoc_uart_tx_fifo_fifo_in_payload_data = __main___basesoc_uart_tx_fifo_sink_payload_data;
assign __main___basesoc_uart_tx_fifo_source_valid = __main___basesoc_uart_tx_fifo_readable;
assign __main___basesoc_uart_tx_fifo_source_first = __main___basesoc_uart_tx_fifo_fifo_out_first;
assign __main___basesoc_uart_tx_fifo_source_last = __main___basesoc_uart_tx_fifo_fifo_out_last;
assign __main___basesoc_uart_tx_fifo_source_payload_data = __main___basesoc_uart_tx_fifo_fifo_out_payload_data;
assign __main___basesoc_uart_tx_fifo_re = __main___basesoc_uart_tx_fifo_source_ready;
assign __main___basesoc_uart_tx_fifo_syncfifo_re = (__main___basesoc_uart_tx_fifo_syncfifo_readable & ((~__main___basesoc_uart_tx_fifo_readable) | __main___basesoc_uart_tx_fifo_re));
assign __main___basesoc_uart_tx_fifo_level1 = (__main___basesoc_uart_tx_fifo_level0 + __main___basesoc_uart_tx_fifo_readable);
always @(*) begin
    __main___basesoc_uart_tx_fifo_wrport_adr <= 4'd0;
    if (__main___basesoc_uart_tx_fifo_replace) begin
        __main___basesoc_uart_tx_fifo_wrport_adr <= (__main___basesoc_uart_tx_fifo_produce - 1'd1);
    end else begin
        __main___basesoc_uart_tx_fifo_wrport_adr <= __main___basesoc_uart_tx_fifo_produce;
    end
end
assign __main___basesoc_uart_tx_fifo_wrport_dat_w = __main___basesoc_uart_tx_fifo_syncfifo_din;
assign __main___basesoc_uart_tx_fifo_wrport_we = (__main___basesoc_uart_tx_fifo_syncfifo_we & (__main___basesoc_uart_tx_fifo_syncfifo_writable | __main___basesoc_uart_tx_fifo_replace));
assign __main___basesoc_uart_tx_fifo_do_read = (__main___basesoc_uart_tx_fifo_syncfifo_readable & __main___basesoc_uart_tx_fifo_syncfifo_re);
assign __main___basesoc_uart_tx_fifo_rdport_adr = __main___basesoc_uart_tx_fifo_consume;
assign __main___basesoc_uart_tx_fifo_syncfifo_dout = __main___basesoc_uart_tx_fifo_rdport_dat_r;
assign __main___basesoc_uart_tx_fifo_rdport_re = __main___basesoc_uart_tx_fifo_do_read;
assign __main___basesoc_uart_tx_fifo_syncfifo_writable = (__main___basesoc_uart_tx_fifo_level0 != 5'd16);
assign __main___basesoc_uart_tx_fifo_syncfifo_readable = (__main___basesoc_uart_tx_fifo_level0 != 1'd0);
assign __main___basesoc_uart_rx_fifo_syncfifo_din = {__main___basesoc_uart_rx_fifo_fifo_in_last, __main___basesoc_uart_rx_fifo_fifo_in_first, __main___basesoc_uart_rx_fifo_fifo_in_payload_data};
assign {__main___basesoc_uart_rx_fifo_fifo_out_last, __main___basesoc_uart_rx_fifo_fifo_out_first, __main___basesoc_uart_rx_fifo_fifo_out_payload_data} = __main___basesoc_uart_rx_fifo_syncfifo_dout;
assign __main___basesoc_uart_rx_fifo_sink_ready = __main___basesoc_uart_rx_fifo_syncfifo_writable;
assign __main___basesoc_uart_rx_fifo_syncfifo_we = __main___basesoc_uart_rx_fifo_sink_valid;
assign __main___basesoc_uart_rx_fifo_fifo_in_first = __main___basesoc_uart_rx_fifo_sink_first;
assign __main___basesoc_uart_rx_fifo_fifo_in_last = __main___basesoc_uart_rx_fifo_sink_last;
assign __main___basesoc_uart_rx_fifo_fifo_in_payload_data = __main___basesoc_uart_rx_fifo_sink_payload_data;
assign __main___basesoc_uart_rx_fifo_source_valid = __main___basesoc_uart_rx_fifo_readable;
assign __main___basesoc_uart_rx_fifo_source_first = __main___basesoc_uart_rx_fifo_fifo_out_first;
assign __main___basesoc_uart_rx_fifo_source_last = __main___basesoc_uart_rx_fifo_fifo_out_last;
assign __main___basesoc_uart_rx_fifo_source_payload_data = __main___basesoc_uart_rx_fifo_fifo_out_payload_data;
assign __main___basesoc_uart_rx_fifo_re = __main___basesoc_uart_rx_fifo_source_ready;
assign __main___basesoc_uart_rx_fifo_syncfifo_re = (__main___basesoc_uart_rx_fifo_syncfifo_readable & ((~__main___basesoc_uart_rx_fifo_readable) | __main___basesoc_uart_rx_fifo_re));
assign __main___basesoc_uart_rx_fifo_level1 = (__main___basesoc_uart_rx_fifo_level0 + __main___basesoc_uart_rx_fifo_readable);
always @(*) begin
    __main___basesoc_uart_rx_fifo_wrport_adr <= 4'd0;
    if (__main___basesoc_uart_rx_fifo_replace) begin
        __main___basesoc_uart_rx_fifo_wrport_adr <= (__main___basesoc_uart_rx_fifo_produce - 1'd1);
    end else begin
        __main___basesoc_uart_rx_fifo_wrport_adr <= __main___basesoc_uart_rx_fifo_produce;
    end
end
assign __main___basesoc_uart_rx_fifo_wrport_dat_w = __main___basesoc_uart_rx_fifo_syncfifo_din;
assign __main___basesoc_uart_rx_fifo_wrport_we = (__main___basesoc_uart_rx_fifo_syncfifo_we & (__main___basesoc_uart_rx_fifo_syncfifo_writable | __main___basesoc_uart_rx_fifo_replace));
assign __main___basesoc_uart_rx_fifo_do_read = (__main___basesoc_uart_rx_fifo_syncfifo_readable & __main___basesoc_uart_rx_fifo_syncfifo_re);
assign __main___basesoc_uart_rx_fifo_rdport_adr = __main___basesoc_uart_rx_fifo_consume;
assign __main___basesoc_uart_rx_fifo_syncfifo_dout = __main___basesoc_uart_rx_fifo_rdport_dat_r;
assign __main___basesoc_uart_rx_fifo_rdport_re = __main___basesoc_uart_rx_fifo_do_read;
assign __main___basesoc_uart_rx_fifo_syncfifo_writable = (__main___basesoc_uart_rx_fifo_level0 != 5'd16);
assign __main___basesoc_uart_rx_fifo_syncfifo_readable = (__main___basesoc_uart_rx_fifo_level0 != 1'd0);
assign __main___basesoc_timer_zero_trigger = (__main___basesoc_timer_value == 1'd0);
assign __main___basesoc_timer_zero0 = __main___basesoc_timer_zero_status;
assign __main___basesoc_timer_zero1 = __main___basesoc_timer_zero_pending;
always @(*) begin
    __main___basesoc_timer_zero_clear <= 1'd0;
    if ((__main___basesoc_timer_pending_re & __main___basesoc_timer_pending_r)) begin
        __main___basesoc_timer_zero_clear <= 1'd1;
    end
end
assign __main___basesoc_timer_irq = (__main___basesoc_timer_pending_status & __main___basesoc_timer_enable_storage);
assign __main___basesoc_timer_zero_status = __main___basesoc_timer_zero_trigger;
assign __main___crg_reset = ((~cpu_reset_n0) | __main___crg_rst);
assign __main___crg_clkin = clk25;
assign sys_clk = __main___crg_clkout0;
assign sys2x_clk = __main___crg_clkout1;
assign sys2x_ps_clk = __main___crg_clkout2;
assign __main___crg_locked = (builder_basesoc_crg_locked & (~__main___crg_reset));
assign __main___dfi_p0_address = __main___basesoc_sdram_master_p0_address;
assign __main___dfi_p0_bank = __main___basesoc_sdram_master_p0_bank;
assign __main___dfi_p0_cas_n = __main___basesoc_sdram_master_p0_cas_n;
assign __main___dfi_p0_cs_n = __main___basesoc_sdram_master_p0_cs_n;
assign __main___dfi_p0_ras_n = __main___basesoc_sdram_master_p0_ras_n;
assign __main___dfi_p0_we_n = __main___basesoc_sdram_master_p0_we_n;
assign __main___dfi_p0_cke = __main___basesoc_sdram_master_p0_cke;
assign __main___dfi_p0_odt = __main___basesoc_sdram_master_p0_odt;
assign __main___dfi_p0_reset_n = __main___basesoc_sdram_master_p0_reset_n;
assign __main___dfi_p0_act_n = __main___basesoc_sdram_master_p0_act_n;
assign __main___dfi_p0_wrdata = __main___basesoc_sdram_master_p0_wrdata;
assign __main___dfi_p0_wrdata_en = __main___basesoc_sdram_master_p0_wrdata_en;
assign __main___dfi_p0_wrdata_mask = __main___basesoc_sdram_master_p0_wrdata_mask;
assign __main___dfi_p0_rddata_en = __main___basesoc_sdram_master_p0_rddata_en;
assign __main___basesoc_sdram_master_p0_rddata = __main___dfi_p0_rddata;
assign __main___basesoc_sdram_master_p0_rddata_valid = __main___dfi_p0_rddata_valid;
assign __main___basesoc_sdram_slave_p0_address = __main___basesoc_sdram_dfi_p0_address;
assign __main___basesoc_sdram_slave_p0_bank = __main___basesoc_sdram_dfi_p0_bank;
assign __main___basesoc_sdram_slave_p0_cas_n = __main___basesoc_sdram_dfi_p0_cas_n;
assign __main___basesoc_sdram_slave_p0_cs_n = __main___basesoc_sdram_dfi_p0_cs_n;
assign __main___basesoc_sdram_slave_p0_ras_n = __main___basesoc_sdram_dfi_p0_ras_n;
assign __main___basesoc_sdram_slave_p0_we_n = __main___basesoc_sdram_dfi_p0_we_n;
assign __main___basesoc_sdram_slave_p0_cke = __main___basesoc_sdram_dfi_p0_cke;
assign __main___basesoc_sdram_slave_p0_odt = __main___basesoc_sdram_dfi_p0_odt;
assign __main___basesoc_sdram_slave_p0_reset_n = __main___basesoc_sdram_dfi_p0_reset_n;
assign __main___basesoc_sdram_slave_p0_act_n = __main___basesoc_sdram_dfi_p0_act_n;
assign __main___basesoc_sdram_slave_p0_wrdata = __main___basesoc_sdram_dfi_p0_wrdata;
assign __main___basesoc_sdram_slave_p0_wrdata_en = __main___basesoc_sdram_dfi_p0_wrdata_en;
assign __main___basesoc_sdram_slave_p0_wrdata_mask = __main___basesoc_sdram_dfi_p0_wrdata_mask;
assign __main___basesoc_sdram_slave_p0_rddata_en = __main___basesoc_sdram_dfi_p0_rddata_en;
assign __main___basesoc_sdram_dfi_p0_rddata = __main___basesoc_sdram_slave_p0_rddata;
assign __main___basesoc_sdram_dfi_p0_rddata_valid = __main___basesoc_sdram_slave_p0_rddata_valid;
always @(*) begin
    __main___basesoc_sdram_ext_dfi_p0_rddata <= 32'd0;
    __main___basesoc_sdram_ext_dfi_p0_rddata_valid <= 1'd0;
    __main___basesoc_sdram_slave_p0_rddata <= 32'd0;
    __main___basesoc_sdram_slave_p0_rddata_valid <= 1'd0;
    __main___basesoc_sdram_master_p0_address <= 11'd0;
    __main___basesoc_sdram_csr_dfi_p0_rddata <= 32'd0;
    __main___basesoc_sdram_master_p0_bank <= 2'd0;
    __main___basesoc_sdram_csr_dfi_p0_rddata_valid <= 1'd0;
    __main___basesoc_sdram_master_p0_cas_n <= 1'd1;
    __main___basesoc_sdram_master_p0_cs_n <= 1'd1;
    __main___basesoc_sdram_master_p0_ras_n <= 1'd1;
    __main___basesoc_sdram_master_p0_we_n <= 1'd1;
    __main___basesoc_sdram_master_p0_cke <= 1'd0;
    __main___basesoc_sdram_master_p0_odt <= 1'd0;
    __main___basesoc_sdram_master_p0_reset_n <= 1'd0;
    __main___basesoc_sdram_master_p0_act_n <= 1'd1;
    __main___basesoc_sdram_master_p0_wrdata <= 32'd0;
    __main___basesoc_sdram_master_p0_wrdata_en <= 1'd0;
    __main___basesoc_sdram_master_p0_wrdata_mask <= 4'd0;
    __main___basesoc_sdram_master_p0_rddata_en <= 1'd0;
    if (__main___basesoc_sdram_sel) begin
        if (__main___basesoc_sdram_ext_dfi_sel) begin
            __main___basesoc_sdram_master_p0_address <= __main___basesoc_sdram_ext_dfi_p0_address;
            __main___basesoc_sdram_master_p0_bank <= __main___basesoc_sdram_ext_dfi_p0_bank;
            __main___basesoc_sdram_master_p0_cas_n <= __main___basesoc_sdram_ext_dfi_p0_cas_n;
            __main___basesoc_sdram_master_p0_cs_n <= __main___basesoc_sdram_ext_dfi_p0_cs_n;
            __main___basesoc_sdram_master_p0_ras_n <= __main___basesoc_sdram_ext_dfi_p0_ras_n;
            __main___basesoc_sdram_master_p0_we_n <= __main___basesoc_sdram_ext_dfi_p0_we_n;
            __main___basesoc_sdram_master_p0_cke <= __main___basesoc_sdram_ext_dfi_p0_cke;
            __main___basesoc_sdram_master_p0_odt <= __main___basesoc_sdram_ext_dfi_p0_odt;
            __main___basesoc_sdram_master_p0_reset_n <= __main___basesoc_sdram_ext_dfi_p0_reset_n;
            __main___basesoc_sdram_master_p0_act_n <= __main___basesoc_sdram_ext_dfi_p0_act_n;
            __main___basesoc_sdram_master_p0_wrdata <= __main___basesoc_sdram_ext_dfi_p0_wrdata;
            __main___basesoc_sdram_master_p0_wrdata_en <= __main___basesoc_sdram_ext_dfi_p0_wrdata_en;
            __main___basesoc_sdram_master_p0_wrdata_mask <= __main___basesoc_sdram_ext_dfi_p0_wrdata_mask;
            __main___basesoc_sdram_master_p0_rddata_en <= __main___basesoc_sdram_ext_dfi_p0_rddata_en;
            __main___basesoc_sdram_ext_dfi_p0_rddata <= __main___basesoc_sdram_master_p0_rddata;
            __main___basesoc_sdram_ext_dfi_p0_rddata_valid <= __main___basesoc_sdram_master_p0_rddata_valid;
        end else begin
            __main___basesoc_sdram_master_p0_address <= __main___basesoc_sdram_slave_p0_address;
            __main___basesoc_sdram_master_p0_bank <= __main___basesoc_sdram_slave_p0_bank;
            __main___basesoc_sdram_master_p0_cas_n <= __main___basesoc_sdram_slave_p0_cas_n;
            __main___basesoc_sdram_master_p0_cs_n <= __main___basesoc_sdram_slave_p0_cs_n;
            __main___basesoc_sdram_master_p0_ras_n <= __main___basesoc_sdram_slave_p0_ras_n;
            __main___basesoc_sdram_master_p0_we_n <= __main___basesoc_sdram_slave_p0_we_n;
            __main___basesoc_sdram_master_p0_cke <= __main___basesoc_sdram_slave_p0_cke;
            __main___basesoc_sdram_master_p0_odt <= __main___basesoc_sdram_slave_p0_odt;
            __main___basesoc_sdram_master_p0_reset_n <= __main___basesoc_sdram_slave_p0_reset_n;
            __main___basesoc_sdram_master_p0_act_n <= __main___basesoc_sdram_slave_p0_act_n;
            __main___basesoc_sdram_master_p0_wrdata <= __main___basesoc_sdram_slave_p0_wrdata;
            __main___basesoc_sdram_master_p0_wrdata_en <= __main___basesoc_sdram_slave_p0_wrdata_en;
            __main___basesoc_sdram_master_p0_wrdata_mask <= __main___basesoc_sdram_slave_p0_wrdata_mask;
            __main___basesoc_sdram_master_p0_rddata_en <= __main___basesoc_sdram_slave_p0_rddata_en;
            __main___basesoc_sdram_slave_p0_rddata <= __main___basesoc_sdram_master_p0_rddata;
            __main___basesoc_sdram_slave_p0_rddata_valid <= __main___basesoc_sdram_master_p0_rddata_valid;
        end
    end else begin
        __main___basesoc_sdram_master_p0_address <= __main___basesoc_sdram_csr_dfi_p0_address;
        __main___basesoc_sdram_master_p0_bank <= __main___basesoc_sdram_csr_dfi_p0_bank;
        __main___basesoc_sdram_master_p0_cas_n <= __main___basesoc_sdram_csr_dfi_p0_cas_n;
        __main___basesoc_sdram_master_p0_cs_n <= __main___basesoc_sdram_csr_dfi_p0_cs_n;
        __main___basesoc_sdram_master_p0_ras_n <= __main___basesoc_sdram_csr_dfi_p0_ras_n;
        __main___basesoc_sdram_master_p0_we_n <= __main___basesoc_sdram_csr_dfi_p0_we_n;
        __main___basesoc_sdram_master_p0_cke <= __main___basesoc_sdram_csr_dfi_p0_cke;
        __main___basesoc_sdram_master_p0_odt <= __main___basesoc_sdram_csr_dfi_p0_odt;
        __main___basesoc_sdram_master_p0_reset_n <= __main___basesoc_sdram_csr_dfi_p0_reset_n;
        __main___basesoc_sdram_master_p0_act_n <= __main___basesoc_sdram_csr_dfi_p0_act_n;
        __main___basesoc_sdram_master_p0_wrdata <= __main___basesoc_sdram_csr_dfi_p0_wrdata;
        __main___basesoc_sdram_master_p0_wrdata_en <= __main___basesoc_sdram_csr_dfi_p0_wrdata_en;
        __main___basesoc_sdram_master_p0_wrdata_mask <= __main___basesoc_sdram_csr_dfi_p0_wrdata_mask;
        __main___basesoc_sdram_master_p0_rddata_en <= __main___basesoc_sdram_csr_dfi_p0_rddata_en;
        __main___basesoc_sdram_csr_dfi_p0_rddata <= __main___basesoc_sdram_master_p0_rddata;
        __main___basesoc_sdram_csr_dfi_p0_rddata_valid <= __main___basesoc_sdram_master_p0_rddata_valid;
    end
end
assign __main___basesoc_sdram_csr_dfi_p0_cke = __main___basesoc_sdram_cke;
assign __main___basesoc_sdram_csr_dfi_p0_odt = __main___basesoc_sdram_odt;
assign __main___basesoc_sdram_csr_dfi_p0_reset_n = __main___basesoc_sdram_reset_n;
always @(*) begin
    __main___basesoc_sdram_csr_dfi_p0_we_n <= 1'd1;
    __main___basesoc_sdram_csr_dfi_p0_cas_n <= 1'd1;
    __main___basesoc_sdram_csr_dfi_p0_cs_n <= 1'd1;
    __main___basesoc_sdram_csr_dfi_p0_ras_n <= 1'd1;
    if (__main___basesoc_sdram_command_issue_re) begin
        __main___basesoc_sdram_csr_dfi_p0_cs_n <= {1{(~__main___basesoc_sdram_csrfield_cs)}};
        __main___basesoc_sdram_csr_dfi_p0_we_n <= (~__main___basesoc_sdram_csrfield_we);
        __main___basesoc_sdram_csr_dfi_p0_cas_n <= (~__main___basesoc_sdram_csrfield_cas);
        __main___basesoc_sdram_csr_dfi_p0_ras_n <= (~__main___basesoc_sdram_csrfield_ras);
    end else begin
        __main___basesoc_sdram_csr_dfi_p0_cs_n <= {1{1'd1}};
        __main___basesoc_sdram_csr_dfi_p0_we_n <= 1'd1;
        __main___basesoc_sdram_csr_dfi_p0_cas_n <= 1'd1;
        __main___basesoc_sdram_csr_dfi_p0_ras_n <= 1'd1;
    end
end
assign __main___basesoc_sdram_csr_dfi_p0_address = __main___basesoc_sdram_address_storage;
assign __main___basesoc_sdram_csr_dfi_p0_bank = __main___basesoc_sdram_baddress_storage;
assign __main___basesoc_sdram_csr_dfi_p0_wrdata_en = (__main___basesoc_sdram_command_issue_re & __main___basesoc_sdram_csrfield_wren);
assign __main___basesoc_sdram_csr_dfi_p0_rddata_en = (__main___basesoc_sdram_command_issue_re & __main___basesoc_sdram_csrfield_rden);
assign __main___basesoc_sdram_csr_dfi_p0_wrdata = __main___basesoc_sdram_wrdata_storage;
assign __main___basesoc_sdram_csr_dfi_p0_wrdata_mask = 1'd0;
assign __main___basesoc_sdram_bankmachine0_req_valid = __main___basesoc_sdram_interface_bank0_valid;
assign __main___basesoc_sdram_interface_bank0_ready = __main___basesoc_sdram_bankmachine0_req_ready;
assign __main___basesoc_sdram_bankmachine0_req_we = __main___basesoc_sdram_interface_bank0_we;
assign __main___basesoc_sdram_bankmachine0_req_addr = __main___basesoc_sdram_interface_bank0_addr;
assign __main___basesoc_sdram_interface_bank0_lock = __main___basesoc_sdram_bankmachine0_req_lock;
assign __main___basesoc_sdram_interface_bank0_wdata_ready = __main___basesoc_sdram_bankmachine0_req_wdata_ready;
assign __main___basesoc_sdram_interface_bank0_rdata_valid = __main___basesoc_sdram_bankmachine0_req_rdata_valid;
assign __main___basesoc_sdram_bankmachine1_req_valid = __main___basesoc_sdram_interface_bank1_valid;
assign __main___basesoc_sdram_interface_bank1_ready = __main___basesoc_sdram_bankmachine1_req_ready;
assign __main___basesoc_sdram_bankmachine1_req_we = __main___basesoc_sdram_interface_bank1_we;
assign __main___basesoc_sdram_bankmachine1_req_addr = __main___basesoc_sdram_interface_bank1_addr;
assign __main___basesoc_sdram_interface_bank1_lock = __main___basesoc_sdram_bankmachine1_req_lock;
assign __main___basesoc_sdram_interface_bank1_wdata_ready = __main___basesoc_sdram_bankmachine1_req_wdata_ready;
assign __main___basesoc_sdram_interface_bank1_rdata_valid = __main___basesoc_sdram_bankmachine1_req_rdata_valid;
assign __main___basesoc_sdram_bankmachine2_req_valid = __main___basesoc_sdram_interface_bank2_valid;
assign __main___basesoc_sdram_interface_bank2_ready = __main___basesoc_sdram_bankmachine2_req_ready;
assign __main___basesoc_sdram_bankmachine2_req_we = __main___basesoc_sdram_interface_bank2_we;
assign __main___basesoc_sdram_bankmachine2_req_addr = __main___basesoc_sdram_interface_bank2_addr;
assign __main___basesoc_sdram_interface_bank2_lock = __main___basesoc_sdram_bankmachine2_req_lock;
assign __main___basesoc_sdram_interface_bank2_wdata_ready = __main___basesoc_sdram_bankmachine2_req_wdata_ready;
assign __main___basesoc_sdram_interface_bank2_rdata_valid = __main___basesoc_sdram_bankmachine2_req_rdata_valid;
assign __main___basesoc_sdram_bankmachine3_req_valid = __main___basesoc_sdram_interface_bank3_valid;
assign __main___basesoc_sdram_interface_bank3_ready = __main___basesoc_sdram_bankmachine3_req_ready;
assign __main___basesoc_sdram_bankmachine3_req_we = __main___basesoc_sdram_interface_bank3_we;
assign __main___basesoc_sdram_bankmachine3_req_addr = __main___basesoc_sdram_interface_bank3_addr;
assign __main___basesoc_sdram_interface_bank3_lock = __main___basesoc_sdram_bankmachine3_req_lock;
assign __main___basesoc_sdram_interface_bank3_wdata_ready = __main___basesoc_sdram_bankmachine3_req_wdata_ready;
assign __main___basesoc_sdram_interface_bank3_rdata_valid = __main___basesoc_sdram_bankmachine3_req_rdata_valid;
assign __main___basesoc_sdram_timer_wait = (~__main___basesoc_sdram_timer_done0);
assign __main___basesoc_sdram_postponer_req_i = __main___basesoc_sdram_timer_done0;
assign __main___basesoc_sdram_wants_refresh = __main___basesoc_sdram_postponer_req_o;
assign __main___basesoc_sdram_timer_done1 = (__main___basesoc_sdram_timer_count1 == 1'd0);
assign __main___basesoc_sdram_timer_done0 = __main___basesoc_sdram_timer_done1;
assign __main___basesoc_sdram_timer_count0 = __main___basesoc_sdram_timer_count1;
assign __main___basesoc_sdram_sequencer_start1 = (__main___basesoc_sdram_sequencer_start0 | (__main___basesoc_sdram_sequencer_count != 1'd0));
assign __main___basesoc_sdram_sequencer_done0 = (__main___basesoc_sdram_sequencer_done1 & (__main___basesoc_sdram_sequencer_count == 1'd0));
always @(*) begin
    __main___basesoc_sdram_cmd_last <= 1'd0;
    __main___basesoc_sdram_sequencer_start0 <= 1'd0;
    builder_basesoc_litedramcore_refresher_next_state <= 2'd0;
    __main___basesoc_sdram_cmd_valid <= 1'd0;
    builder_basesoc_litedramcore_refresher_next_state <= builder_basesoc_litedramcore_refresher_state;
    case (builder_basesoc_litedramcore_refresher_state)
        1'd1: begin
            __main___basesoc_sdram_cmd_valid <= 1'd1;
            if (__main___basesoc_sdram_cmd_ready) begin
                __main___basesoc_sdram_sequencer_start0 <= 1'd1;
                builder_basesoc_litedramcore_refresher_next_state <= 2'd2;
            end
        end
        2'd2: begin
            __main___basesoc_sdram_cmd_valid <= 1'd1;
            if (__main___basesoc_sdram_sequencer_done0) begin
                __main___basesoc_sdram_cmd_valid <= 1'd0;
                __main___basesoc_sdram_cmd_last <= 1'd1;
                builder_basesoc_litedramcore_refresher_next_state <= 1'd0;
            end
        end
        default: begin
            if (1'd1) begin
                if (__main___basesoc_sdram_wants_refresh) begin
                    builder_basesoc_litedramcore_refresher_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign __main___basesoc_sdram_bankmachine0_sink_valid = __main___basesoc_sdram_bankmachine0_req_valid;
assign __main___basesoc_sdram_bankmachine0_req_ready = __main___basesoc_sdram_bankmachine0_sink_ready;
assign __main___basesoc_sdram_bankmachine0_sink_payload_we = __main___basesoc_sdram_bankmachine0_req_we;
assign __main___basesoc_sdram_bankmachine0_sink_payload_addr = __main___basesoc_sdram_bankmachine0_req_addr;
assign __main___basesoc_sdram_bankmachine0_sink_sink_valid = __main___basesoc_sdram_bankmachine0_source_valid;
assign __main___basesoc_sdram_bankmachine0_source_ready = __main___basesoc_sdram_bankmachine0_sink_sink_ready;
assign __main___basesoc_sdram_bankmachine0_sink_sink_first = __main___basesoc_sdram_bankmachine0_source_first;
assign __main___basesoc_sdram_bankmachine0_sink_sink_last = __main___basesoc_sdram_bankmachine0_source_last;
assign __main___basesoc_sdram_bankmachine0_sink_sink_payload_we = __main___basesoc_sdram_bankmachine0_source_payload_we;
assign __main___basesoc_sdram_bankmachine0_sink_sink_payload_addr = __main___basesoc_sdram_bankmachine0_source_payload_addr;
assign __main___basesoc_sdram_bankmachine0_source_source_ready = (__main___basesoc_sdram_bankmachine0_req_wdata_ready | __main___basesoc_sdram_bankmachine0_req_rdata_valid);
assign __main___basesoc_sdram_bankmachine0_req_lock = (__main___basesoc_sdram_bankmachine0_source_valid | __main___basesoc_sdram_bankmachine0_source_source_valid);
assign __main___basesoc_sdram_bankmachine0_row_hit = (__main___basesoc_sdram_bankmachine0_row == __main___basesoc_sdram_bankmachine0_source_source_payload_addr[18:8]);
assign __main___basesoc_sdram_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
    __main___basesoc_sdram_bankmachine0_cmd_payload_a <= 11'd0;
    if (__main___basesoc_sdram_bankmachine0_row_col_n_addr_sel) begin
        __main___basesoc_sdram_bankmachine0_cmd_payload_a <= __main___basesoc_sdram_bankmachine0_source_source_payload_addr[18:8];
    end else begin
        __main___basesoc_sdram_bankmachine0_cmd_payload_a <= ((__main___basesoc_sdram_bankmachine0_auto_precharge <<< 4'd10) | {__main___basesoc_sdram_bankmachine0_source_source_payload_addr[7:0], {0{1'd0}}});
    end
end
assign __main___basesoc_sdram_bankmachine0_twtpcon_valid = ((__main___basesoc_sdram_bankmachine0_cmd_valid & __main___basesoc_sdram_bankmachine0_cmd_ready) & __main___basesoc_sdram_bankmachine0_cmd_payload_is_write);
assign __main___basesoc_sdram_bankmachine0_trccon_valid = ((__main___basesoc_sdram_bankmachine0_cmd_valid & __main___basesoc_sdram_bankmachine0_cmd_ready) & __main___basesoc_sdram_bankmachine0_row_open);
assign __main___basesoc_sdram_bankmachine0_trascon_valid = ((__main___basesoc_sdram_bankmachine0_cmd_valid & __main___basesoc_sdram_bankmachine0_cmd_ready) & __main___basesoc_sdram_bankmachine0_row_open);
always @(*) begin
    __main___basesoc_sdram_bankmachine0_auto_precharge <= 1'd0;
    if ((__main___basesoc_sdram_bankmachine0_source_valid & __main___basesoc_sdram_bankmachine0_source_source_valid)) begin
        if ((__main___basesoc_sdram_bankmachine0_source_payload_addr[18:8] != __main___basesoc_sdram_bankmachine0_source_source_payload_addr[18:8])) begin
            __main___basesoc_sdram_bankmachine0_auto_precharge <= (__main___basesoc_sdram_bankmachine0_row_close == 1'd0);
        end
    end
end
assign __main___basesoc_sdram_bankmachine0_syncfifo0_din = {__main___basesoc_sdram_bankmachine0_fifo_in_last, __main___basesoc_sdram_bankmachine0_fifo_in_first, __main___basesoc_sdram_bankmachine0_fifo_in_payload_addr, __main___basesoc_sdram_bankmachine0_fifo_in_payload_we};
assign {__main___basesoc_sdram_bankmachine0_fifo_out_last, __main___basesoc_sdram_bankmachine0_fifo_out_first, __main___basesoc_sdram_bankmachine0_fifo_out_payload_addr, __main___basesoc_sdram_bankmachine0_fifo_out_payload_we} = __main___basesoc_sdram_bankmachine0_syncfifo0_dout;
assign __main___basesoc_sdram_bankmachine0_sink_ready = __main___basesoc_sdram_bankmachine0_syncfifo0_writable;
assign __main___basesoc_sdram_bankmachine0_syncfifo0_we = __main___basesoc_sdram_bankmachine0_sink_valid;
assign __main___basesoc_sdram_bankmachine0_fifo_in_first = __main___basesoc_sdram_bankmachine0_sink_first;
assign __main___basesoc_sdram_bankmachine0_fifo_in_last = __main___basesoc_sdram_bankmachine0_sink_last;
assign __main___basesoc_sdram_bankmachine0_fifo_in_payload_we = __main___basesoc_sdram_bankmachine0_sink_payload_we;
assign __main___basesoc_sdram_bankmachine0_fifo_in_payload_addr = __main___basesoc_sdram_bankmachine0_sink_payload_addr;
assign __main___basesoc_sdram_bankmachine0_source_valid = __main___basesoc_sdram_bankmachine0_syncfifo0_readable;
assign __main___basesoc_sdram_bankmachine0_source_first = __main___basesoc_sdram_bankmachine0_fifo_out_first;
assign __main___basesoc_sdram_bankmachine0_source_last = __main___basesoc_sdram_bankmachine0_fifo_out_last;
assign __main___basesoc_sdram_bankmachine0_source_payload_we = __main___basesoc_sdram_bankmachine0_fifo_out_payload_we;
assign __main___basesoc_sdram_bankmachine0_source_payload_addr = __main___basesoc_sdram_bankmachine0_fifo_out_payload_addr;
assign __main___basesoc_sdram_bankmachine0_syncfifo0_re = __main___basesoc_sdram_bankmachine0_source_ready;
always @(*) begin
    __main___basesoc_sdram_bankmachine0_wrport_adr <= 3'd0;
    if (__main___basesoc_sdram_bankmachine0_replace) begin
        __main___basesoc_sdram_bankmachine0_wrport_adr <= (__main___basesoc_sdram_bankmachine0_produce - 1'd1);
    end else begin
        __main___basesoc_sdram_bankmachine0_wrport_adr <= __main___basesoc_sdram_bankmachine0_produce;
    end
end
assign __main___basesoc_sdram_bankmachine0_wrport_dat_w = __main___basesoc_sdram_bankmachine0_syncfifo0_din;
assign __main___basesoc_sdram_bankmachine0_wrport_we = (__main___basesoc_sdram_bankmachine0_syncfifo0_we & (__main___basesoc_sdram_bankmachine0_syncfifo0_writable | __main___basesoc_sdram_bankmachine0_replace));
assign __main___basesoc_sdram_bankmachine0_do_read = (__main___basesoc_sdram_bankmachine0_syncfifo0_readable & __main___basesoc_sdram_bankmachine0_syncfifo0_re);
assign __main___basesoc_sdram_bankmachine0_rdport_adr = __main___basesoc_sdram_bankmachine0_consume;
assign __main___basesoc_sdram_bankmachine0_syncfifo0_dout = __main___basesoc_sdram_bankmachine0_rdport_dat_r;
assign __main___basesoc_sdram_bankmachine0_syncfifo0_writable = (__main___basesoc_sdram_bankmachine0_level != 4'd8);
assign __main___basesoc_sdram_bankmachine0_syncfifo0_readable = (__main___basesoc_sdram_bankmachine0_level != 1'd0);
assign __main___basesoc_sdram_bankmachine0_pipe_valid_sink_ready = ((~__main___basesoc_sdram_bankmachine0_pipe_valid_source_valid) | __main___basesoc_sdram_bankmachine0_pipe_valid_source_ready);
assign __main___basesoc_sdram_bankmachine0_pipe_valid_sink_valid = __main___basesoc_sdram_bankmachine0_sink_sink_valid;
assign __main___basesoc_sdram_bankmachine0_sink_sink_ready = __main___basesoc_sdram_bankmachine0_pipe_valid_sink_ready;
assign __main___basesoc_sdram_bankmachine0_pipe_valid_sink_first = __main___basesoc_sdram_bankmachine0_sink_sink_first;
assign __main___basesoc_sdram_bankmachine0_pipe_valid_sink_last = __main___basesoc_sdram_bankmachine0_sink_sink_last;
assign __main___basesoc_sdram_bankmachine0_pipe_valid_sink_payload_we = __main___basesoc_sdram_bankmachine0_sink_sink_payload_we;
assign __main___basesoc_sdram_bankmachine0_pipe_valid_sink_payload_addr = __main___basesoc_sdram_bankmachine0_sink_sink_payload_addr;
assign __main___basesoc_sdram_bankmachine0_source_source_valid = __main___basesoc_sdram_bankmachine0_pipe_valid_source_valid;
assign __main___basesoc_sdram_bankmachine0_pipe_valid_source_ready = __main___basesoc_sdram_bankmachine0_source_source_ready;
assign __main___basesoc_sdram_bankmachine0_source_source_first = __main___basesoc_sdram_bankmachine0_pipe_valid_source_first;
assign __main___basesoc_sdram_bankmachine0_source_source_last = __main___basesoc_sdram_bankmachine0_pipe_valid_source_last;
assign __main___basesoc_sdram_bankmachine0_source_source_payload_we = __main___basesoc_sdram_bankmachine0_pipe_valid_source_payload_we;
assign __main___basesoc_sdram_bankmachine0_source_source_payload_addr = __main___basesoc_sdram_bankmachine0_pipe_valid_source_payload_addr;
always @(*) begin
    __main___basesoc_sdram_bankmachine0_cmd_payload_cas <= 1'd0;
    __main___basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd0;
    __main___basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd0;
    __main___basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd0;
    __main___basesoc_sdram_bankmachine0_cmd_payload_is_read <= 1'd0;
    __main___basesoc_sdram_bankmachine0_cmd_payload_is_write <= 1'd0;
    __main___basesoc_sdram_bankmachine0_req_wdata_ready <= 1'd0;
    __main___basesoc_sdram_bankmachine0_req_rdata_valid <= 1'd0;
    builder_basesoc_litedramcore_bankmachine0_next_state <= 3'd0;
    __main___basesoc_sdram_bankmachine0_refresh_gnt <= 1'd0;
    __main___basesoc_sdram_bankmachine0_row_open <= 1'd0;
    __main___basesoc_sdram_bankmachine0_cmd_valid <= 1'd0;
    __main___basesoc_sdram_bankmachine0_row_close <= 1'd0;
    __main___basesoc_sdram_bankmachine0_row_col_n_addr_sel <= 1'd0;
    builder_basesoc_litedramcore_bankmachine0_next_state <= builder_basesoc_litedramcore_bankmachine0_state;
    case (builder_basesoc_litedramcore_bankmachine0_state)
        1'd1: begin
            if ((__main___basesoc_sdram_bankmachine0_twtpcon_ready & __main___basesoc_sdram_bankmachine0_trascon_ready)) begin
                __main___basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
                if (__main___basesoc_sdram_bankmachine0_cmd_ready) begin
                    builder_basesoc_litedramcore_bankmachine0_next_state <= 3'd5;
                end
                __main___basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
                __main___basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd1;
                __main___basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            end
            __main___basesoc_sdram_bankmachine0_row_close <= 1'd1;
        end
        2'd2: begin
            if ((__main___basesoc_sdram_bankmachine0_twtpcon_ready & __main___basesoc_sdram_bankmachine0_trascon_ready)) begin
                builder_basesoc_litedramcore_bankmachine0_next_state <= 3'd5;
            end
            __main___basesoc_sdram_bankmachine0_row_close <= 1'd1;
        end
        2'd3: begin
            if (__main___basesoc_sdram_bankmachine0_trccon_ready) begin
                __main___basesoc_sdram_bankmachine0_row_col_n_addr_sel <= 1'd1;
                __main___basesoc_sdram_bankmachine0_row_open <= 1'd1;
                __main___basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
                __main___basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
                if (__main___basesoc_sdram_bankmachine0_cmd_ready) begin
                    builder_basesoc_litedramcore_bankmachine0_next_state <= 3'd6;
                end
                __main___basesoc_sdram_bankmachine0_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (__main___basesoc_sdram_bankmachine0_twtpcon_ready) begin
                __main___basesoc_sdram_bankmachine0_refresh_gnt <= 1'd1;
            end
            __main___basesoc_sdram_bankmachine0_row_close <= 1'd1;
            __main___basesoc_sdram_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            if ((~__main___basesoc_sdram_bankmachine0_refresh_req)) begin
                builder_basesoc_litedramcore_bankmachine0_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_basesoc_litedramcore_bankmachine0_next_state <= 2'd3;
        end
        3'd6: begin
            builder_basesoc_litedramcore_bankmachine0_next_state <= 1'd0;
        end
        default: begin
            if (__main___basesoc_sdram_bankmachine0_refresh_req) begin
                builder_basesoc_litedramcore_bankmachine0_next_state <= 3'd4;
            end else begin
                if (__main___basesoc_sdram_bankmachine0_source_source_valid) begin
                    if (__main___basesoc_sdram_bankmachine0_row_opened) begin
                        if (__main___basesoc_sdram_bankmachine0_row_hit) begin
                            __main___basesoc_sdram_bankmachine0_cmd_valid <= 1'd1;
                            if (__main___basesoc_sdram_bankmachine0_source_source_payload_we) begin
                                __main___basesoc_sdram_bankmachine0_req_wdata_ready <= __main___basesoc_sdram_bankmachine0_cmd_ready;
                                __main___basesoc_sdram_bankmachine0_cmd_payload_is_write <= 1'd1;
                                __main___basesoc_sdram_bankmachine0_cmd_payload_we <= 1'd1;
                            end else begin
                                __main___basesoc_sdram_bankmachine0_req_rdata_valid <= __main___basesoc_sdram_bankmachine0_cmd_ready;
                                __main___basesoc_sdram_bankmachine0_cmd_payload_is_read <= 1'd1;
                            end
                            __main___basesoc_sdram_bankmachine0_cmd_payload_cas <= 1'd1;
                            if ((__main___basesoc_sdram_bankmachine0_cmd_ready & __main___basesoc_sdram_bankmachine0_auto_precharge)) begin
                                builder_basesoc_litedramcore_bankmachine0_next_state <= 2'd2;
                            end
                        end else begin
                            builder_basesoc_litedramcore_bankmachine0_next_state <= 1'd1;
                        end
                    end else begin
                        builder_basesoc_litedramcore_bankmachine0_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign __main___basesoc_sdram_bankmachine1_sink_valid = __main___basesoc_sdram_bankmachine1_req_valid;
assign __main___basesoc_sdram_bankmachine1_req_ready = __main___basesoc_sdram_bankmachine1_sink_ready;
assign __main___basesoc_sdram_bankmachine1_sink_payload_we = __main___basesoc_sdram_bankmachine1_req_we;
assign __main___basesoc_sdram_bankmachine1_sink_payload_addr = __main___basesoc_sdram_bankmachine1_req_addr;
assign __main___basesoc_sdram_bankmachine1_sink_sink_valid = __main___basesoc_sdram_bankmachine1_source_valid;
assign __main___basesoc_sdram_bankmachine1_source_ready = __main___basesoc_sdram_bankmachine1_sink_sink_ready;
assign __main___basesoc_sdram_bankmachine1_sink_sink_first = __main___basesoc_sdram_bankmachine1_source_first;
assign __main___basesoc_sdram_bankmachine1_sink_sink_last = __main___basesoc_sdram_bankmachine1_source_last;
assign __main___basesoc_sdram_bankmachine1_sink_sink_payload_we = __main___basesoc_sdram_bankmachine1_source_payload_we;
assign __main___basesoc_sdram_bankmachine1_sink_sink_payload_addr = __main___basesoc_sdram_bankmachine1_source_payload_addr;
assign __main___basesoc_sdram_bankmachine1_source_source_ready = (__main___basesoc_sdram_bankmachine1_req_wdata_ready | __main___basesoc_sdram_bankmachine1_req_rdata_valid);
assign __main___basesoc_sdram_bankmachine1_req_lock = (__main___basesoc_sdram_bankmachine1_source_valid | __main___basesoc_sdram_bankmachine1_source_source_valid);
assign __main___basesoc_sdram_bankmachine1_row_hit = (__main___basesoc_sdram_bankmachine1_row == __main___basesoc_sdram_bankmachine1_source_source_payload_addr[18:8]);
assign __main___basesoc_sdram_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
    __main___basesoc_sdram_bankmachine1_cmd_payload_a <= 11'd0;
    if (__main___basesoc_sdram_bankmachine1_row_col_n_addr_sel) begin
        __main___basesoc_sdram_bankmachine1_cmd_payload_a <= __main___basesoc_sdram_bankmachine1_source_source_payload_addr[18:8];
    end else begin
        __main___basesoc_sdram_bankmachine1_cmd_payload_a <= ((__main___basesoc_sdram_bankmachine1_auto_precharge <<< 4'd10) | {__main___basesoc_sdram_bankmachine1_source_source_payload_addr[7:0], {0{1'd0}}});
    end
end
assign __main___basesoc_sdram_bankmachine1_twtpcon_valid = ((__main___basesoc_sdram_bankmachine1_cmd_valid & __main___basesoc_sdram_bankmachine1_cmd_ready) & __main___basesoc_sdram_bankmachine1_cmd_payload_is_write);
assign __main___basesoc_sdram_bankmachine1_trccon_valid = ((__main___basesoc_sdram_bankmachine1_cmd_valid & __main___basesoc_sdram_bankmachine1_cmd_ready) & __main___basesoc_sdram_bankmachine1_row_open);
assign __main___basesoc_sdram_bankmachine1_trascon_valid = ((__main___basesoc_sdram_bankmachine1_cmd_valid & __main___basesoc_sdram_bankmachine1_cmd_ready) & __main___basesoc_sdram_bankmachine1_row_open);
always @(*) begin
    __main___basesoc_sdram_bankmachine1_auto_precharge <= 1'd0;
    if ((__main___basesoc_sdram_bankmachine1_source_valid & __main___basesoc_sdram_bankmachine1_source_source_valid)) begin
        if ((__main___basesoc_sdram_bankmachine1_source_payload_addr[18:8] != __main___basesoc_sdram_bankmachine1_source_source_payload_addr[18:8])) begin
            __main___basesoc_sdram_bankmachine1_auto_precharge <= (__main___basesoc_sdram_bankmachine1_row_close == 1'd0);
        end
    end
end
assign __main___basesoc_sdram_bankmachine1_syncfifo1_din = {__main___basesoc_sdram_bankmachine1_fifo_in_last, __main___basesoc_sdram_bankmachine1_fifo_in_first, __main___basesoc_sdram_bankmachine1_fifo_in_payload_addr, __main___basesoc_sdram_bankmachine1_fifo_in_payload_we};
assign {__main___basesoc_sdram_bankmachine1_fifo_out_last, __main___basesoc_sdram_bankmachine1_fifo_out_first, __main___basesoc_sdram_bankmachine1_fifo_out_payload_addr, __main___basesoc_sdram_bankmachine1_fifo_out_payload_we} = __main___basesoc_sdram_bankmachine1_syncfifo1_dout;
assign __main___basesoc_sdram_bankmachine1_sink_ready = __main___basesoc_sdram_bankmachine1_syncfifo1_writable;
assign __main___basesoc_sdram_bankmachine1_syncfifo1_we = __main___basesoc_sdram_bankmachine1_sink_valid;
assign __main___basesoc_sdram_bankmachine1_fifo_in_first = __main___basesoc_sdram_bankmachine1_sink_first;
assign __main___basesoc_sdram_bankmachine1_fifo_in_last = __main___basesoc_sdram_bankmachine1_sink_last;
assign __main___basesoc_sdram_bankmachine1_fifo_in_payload_we = __main___basesoc_sdram_bankmachine1_sink_payload_we;
assign __main___basesoc_sdram_bankmachine1_fifo_in_payload_addr = __main___basesoc_sdram_bankmachine1_sink_payload_addr;
assign __main___basesoc_sdram_bankmachine1_source_valid = __main___basesoc_sdram_bankmachine1_syncfifo1_readable;
assign __main___basesoc_sdram_bankmachine1_source_first = __main___basesoc_sdram_bankmachine1_fifo_out_first;
assign __main___basesoc_sdram_bankmachine1_source_last = __main___basesoc_sdram_bankmachine1_fifo_out_last;
assign __main___basesoc_sdram_bankmachine1_source_payload_we = __main___basesoc_sdram_bankmachine1_fifo_out_payload_we;
assign __main___basesoc_sdram_bankmachine1_source_payload_addr = __main___basesoc_sdram_bankmachine1_fifo_out_payload_addr;
assign __main___basesoc_sdram_bankmachine1_syncfifo1_re = __main___basesoc_sdram_bankmachine1_source_ready;
always @(*) begin
    __main___basesoc_sdram_bankmachine1_wrport_adr <= 3'd0;
    if (__main___basesoc_sdram_bankmachine1_replace) begin
        __main___basesoc_sdram_bankmachine1_wrport_adr <= (__main___basesoc_sdram_bankmachine1_produce - 1'd1);
    end else begin
        __main___basesoc_sdram_bankmachine1_wrport_adr <= __main___basesoc_sdram_bankmachine1_produce;
    end
end
assign __main___basesoc_sdram_bankmachine1_wrport_dat_w = __main___basesoc_sdram_bankmachine1_syncfifo1_din;
assign __main___basesoc_sdram_bankmachine1_wrport_we = (__main___basesoc_sdram_bankmachine1_syncfifo1_we & (__main___basesoc_sdram_bankmachine1_syncfifo1_writable | __main___basesoc_sdram_bankmachine1_replace));
assign __main___basesoc_sdram_bankmachine1_do_read = (__main___basesoc_sdram_bankmachine1_syncfifo1_readable & __main___basesoc_sdram_bankmachine1_syncfifo1_re);
assign __main___basesoc_sdram_bankmachine1_rdport_adr = __main___basesoc_sdram_bankmachine1_consume;
assign __main___basesoc_sdram_bankmachine1_syncfifo1_dout = __main___basesoc_sdram_bankmachine1_rdport_dat_r;
assign __main___basesoc_sdram_bankmachine1_syncfifo1_writable = (__main___basesoc_sdram_bankmachine1_level != 4'd8);
assign __main___basesoc_sdram_bankmachine1_syncfifo1_readable = (__main___basesoc_sdram_bankmachine1_level != 1'd0);
assign __main___basesoc_sdram_bankmachine1_pipe_valid_sink_ready = ((~__main___basesoc_sdram_bankmachine1_pipe_valid_source_valid) | __main___basesoc_sdram_bankmachine1_pipe_valid_source_ready);
assign __main___basesoc_sdram_bankmachine1_pipe_valid_sink_valid = __main___basesoc_sdram_bankmachine1_sink_sink_valid;
assign __main___basesoc_sdram_bankmachine1_sink_sink_ready = __main___basesoc_sdram_bankmachine1_pipe_valid_sink_ready;
assign __main___basesoc_sdram_bankmachine1_pipe_valid_sink_first = __main___basesoc_sdram_bankmachine1_sink_sink_first;
assign __main___basesoc_sdram_bankmachine1_pipe_valid_sink_last = __main___basesoc_sdram_bankmachine1_sink_sink_last;
assign __main___basesoc_sdram_bankmachine1_pipe_valid_sink_payload_we = __main___basesoc_sdram_bankmachine1_sink_sink_payload_we;
assign __main___basesoc_sdram_bankmachine1_pipe_valid_sink_payload_addr = __main___basesoc_sdram_bankmachine1_sink_sink_payload_addr;
assign __main___basesoc_sdram_bankmachine1_source_source_valid = __main___basesoc_sdram_bankmachine1_pipe_valid_source_valid;
assign __main___basesoc_sdram_bankmachine1_pipe_valid_source_ready = __main___basesoc_sdram_bankmachine1_source_source_ready;
assign __main___basesoc_sdram_bankmachine1_source_source_first = __main___basesoc_sdram_bankmachine1_pipe_valid_source_first;
assign __main___basesoc_sdram_bankmachine1_source_source_last = __main___basesoc_sdram_bankmachine1_pipe_valid_source_last;
assign __main___basesoc_sdram_bankmachine1_source_source_payload_we = __main___basesoc_sdram_bankmachine1_pipe_valid_source_payload_we;
assign __main___basesoc_sdram_bankmachine1_source_source_payload_addr = __main___basesoc_sdram_bankmachine1_pipe_valid_source_payload_addr;
always @(*) begin
    __main___basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd0;
    __main___basesoc_sdram_bankmachine1_cmd_payload_is_read <= 1'd0;
    __main___basesoc_sdram_bankmachine1_cmd_payload_is_write <= 1'd0;
    __main___basesoc_sdram_bankmachine1_req_wdata_ready <= 1'd0;
    __main___basesoc_sdram_bankmachine1_req_rdata_valid <= 1'd0;
    __main___basesoc_sdram_bankmachine1_refresh_gnt <= 1'd0;
    __main___basesoc_sdram_bankmachine1_row_open <= 1'd0;
    __main___basesoc_sdram_bankmachine1_cmd_valid <= 1'd0;
    builder_basesoc_litedramcore_bankmachine1_next_state <= 3'd0;
    __main___basesoc_sdram_bankmachine1_row_close <= 1'd0;
    __main___basesoc_sdram_bankmachine1_row_col_n_addr_sel <= 1'd0;
    __main___basesoc_sdram_bankmachine1_cmd_payload_cas <= 1'd0;
    __main___basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd0;
    __main___basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd0;
    builder_basesoc_litedramcore_bankmachine1_next_state <= builder_basesoc_litedramcore_bankmachine1_state;
    case (builder_basesoc_litedramcore_bankmachine1_state)
        1'd1: begin
            if ((__main___basesoc_sdram_bankmachine1_twtpcon_ready & __main___basesoc_sdram_bankmachine1_trascon_ready)) begin
                __main___basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
                if (__main___basesoc_sdram_bankmachine1_cmd_ready) begin
                    builder_basesoc_litedramcore_bankmachine1_next_state <= 3'd5;
                end
                __main___basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
                __main___basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd1;
                __main___basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            end
            __main___basesoc_sdram_bankmachine1_row_close <= 1'd1;
        end
        2'd2: begin
            if ((__main___basesoc_sdram_bankmachine1_twtpcon_ready & __main___basesoc_sdram_bankmachine1_trascon_ready)) begin
                builder_basesoc_litedramcore_bankmachine1_next_state <= 3'd5;
            end
            __main___basesoc_sdram_bankmachine1_row_close <= 1'd1;
        end
        2'd3: begin
            if (__main___basesoc_sdram_bankmachine1_trccon_ready) begin
                __main___basesoc_sdram_bankmachine1_row_col_n_addr_sel <= 1'd1;
                __main___basesoc_sdram_bankmachine1_row_open <= 1'd1;
                __main___basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
                __main___basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
                if (__main___basesoc_sdram_bankmachine1_cmd_ready) begin
                    builder_basesoc_litedramcore_bankmachine1_next_state <= 3'd6;
                end
                __main___basesoc_sdram_bankmachine1_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (__main___basesoc_sdram_bankmachine1_twtpcon_ready) begin
                __main___basesoc_sdram_bankmachine1_refresh_gnt <= 1'd1;
            end
            __main___basesoc_sdram_bankmachine1_row_close <= 1'd1;
            __main___basesoc_sdram_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            if ((~__main___basesoc_sdram_bankmachine1_refresh_req)) begin
                builder_basesoc_litedramcore_bankmachine1_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_basesoc_litedramcore_bankmachine1_next_state <= 2'd3;
        end
        3'd6: begin
            builder_basesoc_litedramcore_bankmachine1_next_state <= 1'd0;
        end
        default: begin
            if (__main___basesoc_sdram_bankmachine1_refresh_req) begin
                builder_basesoc_litedramcore_bankmachine1_next_state <= 3'd4;
            end else begin
                if (__main___basesoc_sdram_bankmachine1_source_source_valid) begin
                    if (__main___basesoc_sdram_bankmachine1_row_opened) begin
                        if (__main___basesoc_sdram_bankmachine1_row_hit) begin
                            __main___basesoc_sdram_bankmachine1_cmd_valid <= 1'd1;
                            if (__main___basesoc_sdram_bankmachine1_source_source_payload_we) begin
                                __main___basesoc_sdram_bankmachine1_req_wdata_ready <= __main___basesoc_sdram_bankmachine1_cmd_ready;
                                __main___basesoc_sdram_bankmachine1_cmd_payload_is_write <= 1'd1;
                                __main___basesoc_sdram_bankmachine1_cmd_payload_we <= 1'd1;
                            end else begin
                                __main___basesoc_sdram_bankmachine1_req_rdata_valid <= __main___basesoc_sdram_bankmachine1_cmd_ready;
                                __main___basesoc_sdram_bankmachine1_cmd_payload_is_read <= 1'd1;
                            end
                            __main___basesoc_sdram_bankmachine1_cmd_payload_cas <= 1'd1;
                            if ((__main___basesoc_sdram_bankmachine1_cmd_ready & __main___basesoc_sdram_bankmachine1_auto_precharge)) begin
                                builder_basesoc_litedramcore_bankmachine1_next_state <= 2'd2;
                            end
                        end else begin
                            builder_basesoc_litedramcore_bankmachine1_next_state <= 1'd1;
                        end
                    end else begin
                        builder_basesoc_litedramcore_bankmachine1_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign __main___basesoc_sdram_bankmachine2_sink_valid = __main___basesoc_sdram_bankmachine2_req_valid;
assign __main___basesoc_sdram_bankmachine2_req_ready = __main___basesoc_sdram_bankmachine2_sink_ready;
assign __main___basesoc_sdram_bankmachine2_sink_payload_we = __main___basesoc_sdram_bankmachine2_req_we;
assign __main___basesoc_sdram_bankmachine2_sink_payload_addr = __main___basesoc_sdram_bankmachine2_req_addr;
assign __main___basesoc_sdram_bankmachine2_sink_sink_valid = __main___basesoc_sdram_bankmachine2_source_valid;
assign __main___basesoc_sdram_bankmachine2_source_ready = __main___basesoc_sdram_bankmachine2_sink_sink_ready;
assign __main___basesoc_sdram_bankmachine2_sink_sink_first = __main___basesoc_sdram_bankmachine2_source_first;
assign __main___basesoc_sdram_bankmachine2_sink_sink_last = __main___basesoc_sdram_bankmachine2_source_last;
assign __main___basesoc_sdram_bankmachine2_sink_sink_payload_we = __main___basesoc_sdram_bankmachine2_source_payload_we;
assign __main___basesoc_sdram_bankmachine2_sink_sink_payload_addr = __main___basesoc_sdram_bankmachine2_source_payload_addr;
assign __main___basesoc_sdram_bankmachine2_source_source_ready = (__main___basesoc_sdram_bankmachine2_req_wdata_ready | __main___basesoc_sdram_bankmachine2_req_rdata_valid);
assign __main___basesoc_sdram_bankmachine2_req_lock = (__main___basesoc_sdram_bankmachine2_source_valid | __main___basesoc_sdram_bankmachine2_source_source_valid);
assign __main___basesoc_sdram_bankmachine2_row_hit = (__main___basesoc_sdram_bankmachine2_row == __main___basesoc_sdram_bankmachine2_source_source_payload_addr[18:8]);
assign __main___basesoc_sdram_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
    __main___basesoc_sdram_bankmachine2_cmd_payload_a <= 11'd0;
    if (__main___basesoc_sdram_bankmachine2_row_col_n_addr_sel) begin
        __main___basesoc_sdram_bankmachine2_cmd_payload_a <= __main___basesoc_sdram_bankmachine2_source_source_payload_addr[18:8];
    end else begin
        __main___basesoc_sdram_bankmachine2_cmd_payload_a <= ((__main___basesoc_sdram_bankmachine2_auto_precharge <<< 4'd10) | {__main___basesoc_sdram_bankmachine2_source_source_payload_addr[7:0], {0{1'd0}}});
    end
end
assign __main___basesoc_sdram_bankmachine2_twtpcon_valid = ((__main___basesoc_sdram_bankmachine2_cmd_valid & __main___basesoc_sdram_bankmachine2_cmd_ready) & __main___basesoc_sdram_bankmachine2_cmd_payload_is_write);
assign __main___basesoc_sdram_bankmachine2_trccon_valid = ((__main___basesoc_sdram_bankmachine2_cmd_valid & __main___basesoc_sdram_bankmachine2_cmd_ready) & __main___basesoc_sdram_bankmachine2_row_open);
assign __main___basesoc_sdram_bankmachine2_trascon_valid = ((__main___basesoc_sdram_bankmachine2_cmd_valid & __main___basesoc_sdram_bankmachine2_cmd_ready) & __main___basesoc_sdram_bankmachine2_row_open);
always @(*) begin
    __main___basesoc_sdram_bankmachine2_auto_precharge <= 1'd0;
    if ((__main___basesoc_sdram_bankmachine2_source_valid & __main___basesoc_sdram_bankmachine2_source_source_valid)) begin
        if ((__main___basesoc_sdram_bankmachine2_source_payload_addr[18:8] != __main___basesoc_sdram_bankmachine2_source_source_payload_addr[18:8])) begin
            __main___basesoc_sdram_bankmachine2_auto_precharge <= (__main___basesoc_sdram_bankmachine2_row_close == 1'd0);
        end
    end
end
assign __main___basesoc_sdram_bankmachine2_syncfifo2_din = {__main___basesoc_sdram_bankmachine2_fifo_in_last, __main___basesoc_sdram_bankmachine2_fifo_in_first, __main___basesoc_sdram_bankmachine2_fifo_in_payload_addr, __main___basesoc_sdram_bankmachine2_fifo_in_payload_we};
assign {__main___basesoc_sdram_bankmachine2_fifo_out_last, __main___basesoc_sdram_bankmachine2_fifo_out_first, __main___basesoc_sdram_bankmachine2_fifo_out_payload_addr, __main___basesoc_sdram_bankmachine2_fifo_out_payload_we} = __main___basesoc_sdram_bankmachine2_syncfifo2_dout;
assign __main___basesoc_sdram_bankmachine2_sink_ready = __main___basesoc_sdram_bankmachine2_syncfifo2_writable;
assign __main___basesoc_sdram_bankmachine2_syncfifo2_we = __main___basesoc_sdram_bankmachine2_sink_valid;
assign __main___basesoc_sdram_bankmachine2_fifo_in_first = __main___basesoc_sdram_bankmachine2_sink_first;
assign __main___basesoc_sdram_bankmachine2_fifo_in_last = __main___basesoc_sdram_bankmachine2_sink_last;
assign __main___basesoc_sdram_bankmachine2_fifo_in_payload_we = __main___basesoc_sdram_bankmachine2_sink_payload_we;
assign __main___basesoc_sdram_bankmachine2_fifo_in_payload_addr = __main___basesoc_sdram_bankmachine2_sink_payload_addr;
assign __main___basesoc_sdram_bankmachine2_source_valid = __main___basesoc_sdram_bankmachine2_syncfifo2_readable;
assign __main___basesoc_sdram_bankmachine2_source_first = __main___basesoc_sdram_bankmachine2_fifo_out_first;
assign __main___basesoc_sdram_bankmachine2_source_last = __main___basesoc_sdram_bankmachine2_fifo_out_last;
assign __main___basesoc_sdram_bankmachine2_source_payload_we = __main___basesoc_sdram_bankmachine2_fifo_out_payload_we;
assign __main___basesoc_sdram_bankmachine2_source_payload_addr = __main___basesoc_sdram_bankmachine2_fifo_out_payload_addr;
assign __main___basesoc_sdram_bankmachine2_syncfifo2_re = __main___basesoc_sdram_bankmachine2_source_ready;
always @(*) begin
    __main___basesoc_sdram_bankmachine2_wrport_adr <= 3'd0;
    if (__main___basesoc_sdram_bankmachine2_replace) begin
        __main___basesoc_sdram_bankmachine2_wrport_adr <= (__main___basesoc_sdram_bankmachine2_produce - 1'd1);
    end else begin
        __main___basesoc_sdram_bankmachine2_wrport_adr <= __main___basesoc_sdram_bankmachine2_produce;
    end
end
assign __main___basesoc_sdram_bankmachine2_wrport_dat_w = __main___basesoc_sdram_bankmachine2_syncfifo2_din;
assign __main___basesoc_sdram_bankmachine2_wrport_we = (__main___basesoc_sdram_bankmachine2_syncfifo2_we & (__main___basesoc_sdram_bankmachine2_syncfifo2_writable | __main___basesoc_sdram_bankmachine2_replace));
assign __main___basesoc_sdram_bankmachine2_do_read = (__main___basesoc_sdram_bankmachine2_syncfifo2_readable & __main___basesoc_sdram_bankmachine2_syncfifo2_re);
assign __main___basesoc_sdram_bankmachine2_rdport_adr = __main___basesoc_sdram_bankmachine2_consume;
assign __main___basesoc_sdram_bankmachine2_syncfifo2_dout = __main___basesoc_sdram_bankmachine2_rdport_dat_r;
assign __main___basesoc_sdram_bankmachine2_syncfifo2_writable = (__main___basesoc_sdram_bankmachine2_level != 4'd8);
assign __main___basesoc_sdram_bankmachine2_syncfifo2_readable = (__main___basesoc_sdram_bankmachine2_level != 1'd0);
assign __main___basesoc_sdram_bankmachine2_pipe_valid_sink_ready = ((~__main___basesoc_sdram_bankmachine2_pipe_valid_source_valid) | __main___basesoc_sdram_bankmachine2_pipe_valid_source_ready);
assign __main___basesoc_sdram_bankmachine2_pipe_valid_sink_valid = __main___basesoc_sdram_bankmachine2_sink_sink_valid;
assign __main___basesoc_sdram_bankmachine2_sink_sink_ready = __main___basesoc_sdram_bankmachine2_pipe_valid_sink_ready;
assign __main___basesoc_sdram_bankmachine2_pipe_valid_sink_first = __main___basesoc_sdram_bankmachine2_sink_sink_first;
assign __main___basesoc_sdram_bankmachine2_pipe_valid_sink_last = __main___basesoc_sdram_bankmachine2_sink_sink_last;
assign __main___basesoc_sdram_bankmachine2_pipe_valid_sink_payload_we = __main___basesoc_sdram_bankmachine2_sink_sink_payload_we;
assign __main___basesoc_sdram_bankmachine2_pipe_valid_sink_payload_addr = __main___basesoc_sdram_bankmachine2_sink_sink_payload_addr;
assign __main___basesoc_sdram_bankmachine2_source_source_valid = __main___basesoc_sdram_bankmachine2_pipe_valid_source_valid;
assign __main___basesoc_sdram_bankmachine2_pipe_valid_source_ready = __main___basesoc_sdram_bankmachine2_source_source_ready;
assign __main___basesoc_sdram_bankmachine2_source_source_first = __main___basesoc_sdram_bankmachine2_pipe_valid_source_first;
assign __main___basesoc_sdram_bankmachine2_source_source_last = __main___basesoc_sdram_bankmachine2_pipe_valid_source_last;
assign __main___basesoc_sdram_bankmachine2_source_source_payload_we = __main___basesoc_sdram_bankmachine2_pipe_valid_source_payload_we;
assign __main___basesoc_sdram_bankmachine2_source_source_payload_addr = __main___basesoc_sdram_bankmachine2_pipe_valid_source_payload_addr;
always @(*) begin
    __main___basesoc_sdram_bankmachine2_req_rdata_valid <= 1'd0;
    __main___basesoc_sdram_bankmachine2_refresh_gnt <= 1'd0;
    __main___basesoc_sdram_bankmachine2_row_open <= 1'd0;
    __main___basesoc_sdram_bankmachine2_cmd_valid <= 1'd0;
    __main___basesoc_sdram_bankmachine2_row_close <= 1'd0;
    builder_basesoc_litedramcore_bankmachine2_next_state <= 3'd0;
    __main___basesoc_sdram_bankmachine2_row_col_n_addr_sel <= 1'd0;
    __main___basesoc_sdram_bankmachine2_cmd_payload_cas <= 1'd0;
    __main___basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd0;
    __main___basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd0;
    __main___basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd0;
    __main___basesoc_sdram_bankmachine2_cmd_payload_is_read <= 1'd0;
    __main___basesoc_sdram_bankmachine2_cmd_payload_is_write <= 1'd0;
    __main___basesoc_sdram_bankmachine2_req_wdata_ready <= 1'd0;
    builder_basesoc_litedramcore_bankmachine2_next_state <= builder_basesoc_litedramcore_bankmachine2_state;
    case (builder_basesoc_litedramcore_bankmachine2_state)
        1'd1: begin
            if ((__main___basesoc_sdram_bankmachine2_twtpcon_ready & __main___basesoc_sdram_bankmachine2_trascon_ready)) begin
                __main___basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
                if (__main___basesoc_sdram_bankmachine2_cmd_ready) begin
                    builder_basesoc_litedramcore_bankmachine2_next_state <= 3'd5;
                end
                __main___basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
                __main___basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd1;
                __main___basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            end
            __main___basesoc_sdram_bankmachine2_row_close <= 1'd1;
        end
        2'd2: begin
            if ((__main___basesoc_sdram_bankmachine2_twtpcon_ready & __main___basesoc_sdram_bankmachine2_trascon_ready)) begin
                builder_basesoc_litedramcore_bankmachine2_next_state <= 3'd5;
            end
            __main___basesoc_sdram_bankmachine2_row_close <= 1'd1;
        end
        2'd3: begin
            if (__main___basesoc_sdram_bankmachine2_trccon_ready) begin
                __main___basesoc_sdram_bankmachine2_row_col_n_addr_sel <= 1'd1;
                __main___basesoc_sdram_bankmachine2_row_open <= 1'd1;
                __main___basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
                __main___basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
                if (__main___basesoc_sdram_bankmachine2_cmd_ready) begin
                    builder_basesoc_litedramcore_bankmachine2_next_state <= 3'd6;
                end
                __main___basesoc_sdram_bankmachine2_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (__main___basesoc_sdram_bankmachine2_twtpcon_ready) begin
                __main___basesoc_sdram_bankmachine2_refresh_gnt <= 1'd1;
            end
            __main___basesoc_sdram_bankmachine2_row_close <= 1'd1;
            __main___basesoc_sdram_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            if ((~__main___basesoc_sdram_bankmachine2_refresh_req)) begin
                builder_basesoc_litedramcore_bankmachine2_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_basesoc_litedramcore_bankmachine2_next_state <= 2'd3;
        end
        3'd6: begin
            builder_basesoc_litedramcore_bankmachine2_next_state <= 1'd0;
        end
        default: begin
            if (__main___basesoc_sdram_bankmachine2_refresh_req) begin
                builder_basesoc_litedramcore_bankmachine2_next_state <= 3'd4;
            end else begin
                if (__main___basesoc_sdram_bankmachine2_source_source_valid) begin
                    if (__main___basesoc_sdram_bankmachine2_row_opened) begin
                        if (__main___basesoc_sdram_bankmachine2_row_hit) begin
                            __main___basesoc_sdram_bankmachine2_cmd_valid <= 1'd1;
                            if (__main___basesoc_sdram_bankmachine2_source_source_payload_we) begin
                                __main___basesoc_sdram_bankmachine2_req_wdata_ready <= __main___basesoc_sdram_bankmachine2_cmd_ready;
                                __main___basesoc_sdram_bankmachine2_cmd_payload_is_write <= 1'd1;
                                __main___basesoc_sdram_bankmachine2_cmd_payload_we <= 1'd1;
                            end else begin
                                __main___basesoc_sdram_bankmachine2_req_rdata_valid <= __main___basesoc_sdram_bankmachine2_cmd_ready;
                                __main___basesoc_sdram_bankmachine2_cmd_payload_is_read <= 1'd1;
                            end
                            __main___basesoc_sdram_bankmachine2_cmd_payload_cas <= 1'd1;
                            if ((__main___basesoc_sdram_bankmachine2_cmd_ready & __main___basesoc_sdram_bankmachine2_auto_precharge)) begin
                                builder_basesoc_litedramcore_bankmachine2_next_state <= 2'd2;
                            end
                        end else begin
                            builder_basesoc_litedramcore_bankmachine2_next_state <= 1'd1;
                        end
                    end else begin
                        builder_basesoc_litedramcore_bankmachine2_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign __main___basesoc_sdram_bankmachine3_sink_valid = __main___basesoc_sdram_bankmachine3_req_valid;
assign __main___basesoc_sdram_bankmachine3_req_ready = __main___basesoc_sdram_bankmachine3_sink_ready;
assign __main___basesoc_sdram_bankmachine3_sink_payload_we = __main___basesoc_sdram_bankmachine3_req_we;
assign __main___basesoc_sdram_bankmachine3_sink_payload_addr = __main___basesoc_sdram_bankmachine3_req_addr;
assign __main___basesoc_sdram_bankmachine3_sink_sink_valid = __main___basesoc_sdram_bankmachine3_source_valid;
assign __main___basesoc_sdram_bankmachine3_source_ready = __main___basesoc_sdram_bankmachine3_sink_sink_ready;
assign __main___basesoc_sdram_bankmachine3_sink_sink_first = __main___basesoc_sdram_bankmachine3_source_first;
assign __main___basesoc_sdram_bankmachine3_sink_sink_last = __main___basesoc_sdram_bankmachine3_source_last;
assign __main___basesoc_sdram_bankmachine3_sink_sink_payload_we = __main___basesoc_sdram_bankmachine3_source_payload_we;
assign __main___basesoc_sdram_bankmachine3_sink_sink_payload_addr = __main___basesoc_sdram_bankmachine3_source_payload_addr;
assign __main___basesoc_sdram_bankmachine3_source_source_ready = (__main___basesoc_sdram_bankmachine3_req_wdata_ready | __main___basesoc_sdram_bankmachine3_req_rdata_valid);
assign __main___basesoc_sdram_bankmachine3_req_lock = (__main___basesoc_sdram_bankmachine3_source_valid | __main___basesoc_sdram_bankmachine3_source_source_valid);
assign __main___basesoc_sdram_bankmachine3_row_hit = (__main___basesoc_sdram_bankmachine3_row == __main___basesoc_sdram_bankmachine3_source_source_payload_addr[18:8]);
assign __main___basesoc_sdram_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
    __main___basesoc_sdram_bankmachine3_cmd_payload_a <= 11'd0;
    if (__main___basesoc_sdram_bankmachine3_row_col_n_addr_sel) begin
        __main___basesoc_sdram_bankmachine3_cmd_payload_a <= __main___basesoc_sdram_bankmachine3_source_source_payload_addr[18:8];
    end else begin
        __main___basesoc_sdram_bankmachine3_cmd_payload_a <= ((__main___basesoc_sdram_bankmachine3_auto_precharge <<< 4'd10) | {__main___basesoc_sdram_bankmachine3_source_source_payload_addr[7:0], {0{1'd0}}});
    end
end
assign __main___basesoc_sdram_bankmachine3_twtpcon_valid = ((__main___basesoc_sdram_bankmachine3_cmd_valid & __main___basesoc_sdram_bankmachine3_cmd_ready) & __main___basesoc_sdram_bankmachine3_cmd_payload_is_write);
assign __main___basesoc_sdram_bankmachine3_trccon_valid = ((__main___basesoc_sdram_bankmachine3_cmd_valid & __main___basesoc_sdram_bankmachine3_cmd_ready) & __main___basesoc_sdram_bankmachine3_row_open);
assign __main___basesoc_sdram_bankmachine3_trascon_valid = ((__main___basesoc_sdram_bankmachine3_cmd_valid & __main___basesoc_sdram_bankmachine3_cmd_ready) & __main___basesoc_sdram_bankmachine3_row_open);
always @(*) begin
    __main___basesoc_sdram_bankmachine3_auto_precharge <= 1'd0;
    if ((__main___basesoc_sdram_bankmachine3_source_valid & __main___basesoc_sdram_bankmachine3_source_source_valid)) begin
        if ((__main___basesoc_sdram_bankmachine3_source_payload_addr[18:8] != __main___basesoc_sdram_bankmachine3_source_source_payload_addr[18:8])) begin
            __main___basesoc_sdram_bankmachine3_auto_precharge <= (__main___basesoc_sdram_bankmachine3_row_close == 1'd0);
        end
    end
end
assign __main___basesoc_sdram_bankmachine3_syncfifo3_din = {__main___basesoc_sdram_bankmachine3_fifo_in_last, __main___basesoc_sdram_bankmachine3_fifo_in_first, __main___basesoc_sdram_bankmachine3_fifo_in_payload_addr, __main___basesoc_sdram_bankmachine3_fifo_in_payload_we};
assign {__main___basesoc_sdram_bankmachine3_fifo_out_last, __main___basesoc_sdram_bankmachine3_fifo_out_first, __main___basesoc_sdram_bankmachine3_fifo_out_payload_addr, __main___basesoc_sdram_bankmachine3_fifo_out_payload_we} = __main___basesoc_sdram_bankmachine3_syncfifo3_dout;
assign __main___basesoc_sdram_bankmachine3_sink_ready = __main___basesoc_sdram_bankmachine3_syncfifo3_writable;
assign __main___basesoc_sdram_bankmachine3_syncfifo3_we = __main___basesoc_sdram_bankmachine3_sink_valid;
assign __main___basesoc_sdram_bankmachine3_fifo_in_first = __main___basesoc_sdram_bankmachine3_sink_first;
assign __main___basesoc_sdram_bankmachine3_fifo_in_last = __main___basesoc_sdram_bankmachine3_sink_last;
assign __main___basesoc_sdram_bankmachine3_fifo_in_payload_we = __main___basesoc_sdram_bankmachine3_sink_payload_we;
assign __main___basesoc_sdram_bankmachine3_fifo_in_payload_addr = __main___basesoc_sdram_bankmachine3_sink_payload_addr;
assign __main___basesoc_sdram_bankmachine3_source_valid = __main___basesoc_sdram_bankmachine3_syncfifo3_readable;
assign __main___basesoc_sdram_bankmachine3_source_first = __main___basesoc_sdram_bankmachine3_fifo_out_first;
assign __main___basesoc_sdram_bankmachine3_source_last = __main___basesoc_sdram_bankmachine3_fifo_out_last;
assign __main___basesoc_sdram_bankmachine3_source_payload_we = __main___basesoc_sdram_bankmachine3_fifo_out_payload_we;
assign __main___basesoc_sdram_bankmachine3_source_payload_addr = __main___basesoc_sdram_bankmachine3_fifo_out_payload_addr;
assign __main___basesoc_sdram_bankmachine3_syncfifo3_re = __main___basesoc_sdram_bankmachine3_source_ready;
always @(*) begin
    __main___basesoc_sdram_bankmachine3_wrport_adr <= 3'd0;
    if (__main___basesoc_sdram_bankmachine3_replace) begin
        __main___basesoc_sdram_bankmachine3_wrport_adr <= (__main___basesoc_sdram_bankmachine3_produce - 1'd1);
    end else begin
        __main___basesoc_sdram_bankmachine3_wrport_adr <= __main___basesoc_sdram_bankmachine3_produce;
    end
end
assign __main___basesoc_sdram_bankmachine3_wrport_dat_w = __main___basesoc_sdram_bankmachine3_syncfifo3_din;
assign __main___basesoc_sdram_bankmachine3_wrport_we = (__main___basesoc_sdram_bankmachine3_syncfifo3_we & (__main___basesoc_sdram_bankmachine3_syncfifo3_writable | __main___basesoc_sdram_bankmachine3_replace));
assign __main___basesoc_sdram_bankmachine3_do_read = (__main___basesoc_sdram_bankmachine3_syncfifo3_readable & __main___basesoc_sdram_bankmachine3_syncfifo3_re);
assign __main___basesoc_sdram_bankmachine3_rdport_adr = __main___basesoc_sdram_bankmachine3_consume;
assign __main___basesoc_sdram_bankmachine3_syncfifo3_dout = __main___basesoc_sdram_bankmachine3_rdport_dat_r;
assign __main___basesoc_sdram_bankmachine3_syncfifo3_writable = (__main___basesoc_sdram_bankmachine3_level != 4'd8);
assign __main___basesoc_sdram_bankmachine3_syncfifo3_readable = (__main___basesoc_sdram_bankmachine3_level != 1'd0);
assign __main___basesoc_sdram_bankmachine3_pipe_valid_sink_ready = ((~__main___basesoc_sdram_bankmachine3_pipe_valid_source_valid) | __main___basesoc_sdram_bankmachine3_pipe_valid_source_ready);
assign __main___basesoc_sdram_bankmachine3_pipe_valid_sink_valid = __main___basesoc_sdram_bankmachine3_sink_sink_valid;
assign __main___basesoc_sdram_bankmachine3_sink_sink_ready = __main___basesoc_sdram_bankmachine3_pipe_valid_sink_ready;
assign __main___basesoc_sdram_bankmachine3_pipe_valid_sink_first = __main___basesoc_sdram_bankmachine3_sink_sink_first;
assign __main___basesoc_sdram_bankmachine3_pipe_valid_sink_last = __main___basesoc_sdram_bankmachine3_sink_sink_last;
assign __main___basesoc_sdram_bankmachine3_pipe_valid_sink_payload_we = __main___basesoc_sdram_bankmachine3_sink_sink_payload_we;
assign __main___basesoc_sdram_bankmachine3_pipe_valid_sink_payload_addr = __main___basesoc_sdram_bankmachine3_sink_sink_payload_addr;
assign __main___basesoc_sdram_bankmachine3_source_source_valid = __main___basesoc_sdram_bankmachine3_pipe_valid_source_valid;
assign __main___basesoc_sdram_bankmachine3_pipe_valid_source_ready = __main___basesoc_sdram_bankmachine3_source_source_ready;
assign __main___basesoc_sdram_bankmachine3_source_source_first = __main___basesoc_sdram_bankmachine3_pipe_valid_source_first;
assign __main___basesoc_sdram_bankmachine3_source_source_last = __main___basesoc_sdram_bankmachine3_pipe_valid_source_last;
assign __main___basesoc_sdram_bankmachine3_source_source_payload_we = __main___basesoc_sdram_bankmachine3_pipe_valid_source_payload_we;
assign __main___basesoc_sdram_bankmachine3_source_source_payload_addr = __main___basesoc_sdram_bankmachine3_pipe_valid_source_payload_addr;
always @(*) begin
    __main___basesoc_sdram_bankmachine3_row_close <= 1'd0;
    builder_basesoc_litedramcore_bankmachine3_next_state <= 3'd0;
    __main___basesoc_sdram_bankmachine3_row_col_n_addr_sel <= 1'd0;
    __main___basesoc_sdram_bankmachine3_cmd_payload_cas <= 1'd0;
    __main___basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd0;
    __main___basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd0;
    __main___basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd0;
    __main___basesoc_sdram_bankmachine3_cmd_payload_is_read <= 1'd0;
    __main___basesoc_sdram_bankmachine3_cmd_payload_is_write <= 1'd0;
    __main___basesoc_sdram_bankmachine3_req_wdata_ready <= 1'd0;
    __main___basesoc_sdram_bankmachine3_req_rdata_valid <= 1'd0;
    __main___basesoc_sdram_bankmachine3_refresh_gnt <= 1'd0;
    __main___basesoc_sdram_bankmachine3_row_open <= 1'd0;
    __main___basesoc_sdram_bankmachine3_cmd_valid <= 1'd0;
    builder_basesoc_litedramcore_bankmachine3_next_state <= builder_basesoc_litedramcore_bankmachine3_state;
    case (builder_basesoc_litedramcore_bankmachine3_state)
        1'd1: begin
            if ((__main___basesoc_sdram_bankmachine3_twtpcon_ready & __main___basesoc_sdram_bankmachine3_trascon_ready)) begin
                __main___basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
                if (__main___basesoc_sdram_bankmachine3_cmd_ready) begin
                    builder_basesoc_litedramcore_bankmachine3_next_state <= 3'd5;
                end
                __main___basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
                __main___basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd1;
                __main___basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            end
            __main___basesoc_sdram_bankmachine3_row_close <= 1'd1;
        end
        2'd2: begin
            if ((__main___basesoc_sdram_bankmachine3_twtpcon_ready & __main___basesoc_sdram_bankmachine3_trascon_ready)) begin
                builder_basesoc_litedramcore_bankmachine3_next_state <= 3'd5;
            end
            __main___basesoc_sdram_bankmachine3_row_close <= 1'd1;
        end
        2'd3: begin
            if (__main___basesoc_sdram_bankmachine3_trccon_ready) begin
                __main___basesoc_sdram_bankmachine3_row_col_n_addr_sel <= 1'd1;
                __main___basesoc_sdram_bankmachine3_row_open <= 1'd1;
                __main___basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
                __main___basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
                if (__main___basesoc_sdram_bankmachine3_cmd_ready) begin
                    builder_basesoc_litedramcore_bankmachine3_next_state <= 3'd6;
                end
                __main___basesoc_sdram_bankmachine3_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (__main___basesoc_sdram_bankmachine3_twtpcon_ready) begin
                __main___basesoc_sdram_bankmachine3_refresh_gnt <= 1'd1;
            end
            __main___basesoc_sdram_bankmachine3_row_close <= 1'd1;
            __main___basesoc_sdram_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            if ((~__main___basesoc_sdram_bankmachine3_refresh_req)) begin
                builder_basesoc_litedramcore_bankmachine3_next_state <= 1'd0;
            end
        end
        3'd5: begin
            builder_basesoc_litedramcore_bankmachine3_next_state <= 2'd3;
        end
        3'd6: begin
            builder_basesoc_litedramcore_bankmachine3_next_state <= 1'd0;
        end
        default: begin
            if (__main___basesoc_sdram_bankmachine3_refresh_req) begin
                builder_basesoc_litedramcore_bankmachine3_next_state <= 3'd4;
            end else begin
                if (__main___basesoc_sdram_bankmachine3_source_source_valid) begin
                    if (__main___basesoc_sdram_bankmachine3_row_opened) begin
                        if (__main___basesoc_sdram_bankmachine3_row_hit) begin
                            __main___basesoc_sdram_bankmachine3_cmd_valid <= 1'd1;
                            if (__main___basesoc_sdram_bankmachine3_source_source_payload_we) begin
                                __main___basesoc_sdram_bankmachine3_req_wdata_ready <= __main___basesoc_sdram_bankmachine3_cmd_ready;
                                __main___basesoc_sdram_bankmachine3_cmd_payload_is_write <= 1'd1;
                                __main___basesoc_sdram_bankmachine3_cmd_payload_we <= 1'd1;
                            end else begin
                                __main___basesoc_sdram_bankmachine3_req_rdata_valid <= __main___basesoc_sdram_bankmachine3_cmd_ready;
                                __main___basesoc_sdram_bankmachine3_cmd_payload_is_read <= 1'd1;
                            end
                            __main___basesoc_sdram_bankmachine3_cmd_payload_cas <= 1'd1;
                            if ((__main___basesoc_sdram_bankmachine3_cmd_ready & __main___basesoc_sdram_bankmachine3_auto_precharge)) begin
                                builder_basesoc_litedramcore_bankmachine3_next_state <= 2'd2;
                            end
                        end else begin
                            builder_basesoc_litedramcore_bankmachine3_next_state <= 1'd1;
                        end
                    end else begin
                        builder_basesoc_litedramcore_bankmachine3_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign __main___basesoc_sdram_choose_req_want_cmds = 1'd1;
assign __main___basesoc_sdram_trrdcon_valid = ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & ((__main___basesoc_sdram_choose_req_cmd_payload_ras & (~__main___basesoc_sdram_choose_req_cmd_payload_cas)) & (~__main___basesoc_sdram_choose_req_cmd_payload_we)));
assign __main___basesoc_sdram_tfawcon_valid = ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & ((__main___basesoc_sdram_choose_req_cmd_payload_ras & (~__main___basesoc_sdram_choose_req_cmd_payload_cas)) & (~__main___basesoc_sdram_choose_req_cmd_payload_we)));
assign __main___basesoc_sdram_ras_allowed = (__main___basesoc_sdram_trrdcon_ready & __main___basesoc_sdram_tfawcon_ready);
assign __main___basesoc_sdram_tccdcon_valid = ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & (__main___basesoc_sdram_choose_req_cmd_payload_is_write | __main___basesoc_sdram_choose_req_cmd_payload_is_read));
assign __main___basesoc_sdram_cas_allowed = __main___basesoc_sdram_tccdcon_ready;
assign __main___basesoc_sdram_twtrcon_valid = ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & __main___basesoc_sdram_choose_req_cmd_payload_is_write);
assign __main___basesoc_sdram_read_available = ((((__main___basesoc_sdram_bankmachine0_cmd_valid & __main___basesoc_sdram_bankmachine0_cmd_payload_is_read) | (__main___basesoc_sdram_bankmachine1_cmd_valid & __main___basesoc_sdram_bankmachine1_cmd_payload_is_read)) | (__main___basesoc_sdram_bankmachine2_cmd_valid & __main___basesoc_sdram_bankmachine2_cmd_payload_is_read)) | (__main___basesoc_sdram_bankmachine3_cmd_valid & __main___basesoc_sdram_bankmachine3_cmd_payload_is_read));
assign __main___basesoc_sdram_write_available = ((((__main___basesoc_sdram_bankmachine0_cmd_valid & __main___basesoc_sdram_bankmachine0_cmd_payload_is_write) | (__main___basesoc_sdram_bankmachine1_cmd_valid & __main___basesoc_sdram_bankmachine1_cmd_payload_is_write)) | (__main___basesoc_sdram_bankmachine2_cmd_valid & __main___basesoc_sdram_bankmachine2_cmd_payload_is_write)) | (__main___basesoc_sdram_bankmachine3_cmd_valid & __main___basesoc_sdram_bankmachine3_cmd_payload_is_write));
assign __main___basesoc_sdram_max_time0 = (__main___basesoc_sdram_time0 == 1'd0);
assign __main___basesoc_sdram_max_time1 = (__main___basesoc_sdram_time1 == 1'd0);
assign __main___basesoc_sdram_bankmachine0_refresh_req = __main___basesoc_sdram_cmd_valid;
assign __main___basesoc_sdram_bankmachine1_refresh_req = __main___basesoc_sdram_cmd_valid;
assign __main___basesoc_sdram_bankmachine2_refresh_req = __main___basesoc_sdram_cmd_valid;
assign __main___basesoc_sdram_bankmachine3_refresh_req = __main___basesoc_sdram_cmd_valid;
assign __main___basesoc_sdram_go_to_refresh = (((__main___basesoc_sdram_bankmachine0_refresh_gnt & __main___basesoc_sdram_bankmachine1_refresh_gnt) & __main___basesoc_sdram_bankmachine2_refresh_gnt) & __main___basesoc_sdram_bankmachine3_refresh_gnt);
assign __main___basesoc_sdram_interface_rdata = {__main___basesoc_sdram_dfi_p0_rddata};
assign {__main___basesoc_sdram_dfi_p0_wrdata} = __main___basesoc_sdram_interface_wdata;
assign {__main___basesoc_sdram_dfi_p0_wrdata_mask} = (~__main___basesoc_sdram_interface_wdata_we);
always @(*) begin
    __main___basesoc_sdram_choose_cmd_valids <= 4'd0;
    __main___basesoc_sdram_choose_cmd_valids[0] <= (__main___basesoc_sdram_bankmachine0_cmd_valid & (((__main___basesoc_sdram_bankmachine0_cmd_payload_is_cmd & __main___basesoc_sdram_choose_cmd_want_cmds) & ((~((__main___basesoc_sdram_bankmachine0_cmd_payload_ras & (~__main___basesoc_sdram_bankmachine0_cmd_payload_cas)) & (~__main___basesoc_sdram_bankmachine0_cmd_payload_we))) | __main___basesoc_sdram_choose_cmd_want_activates)) | ((__main___basesoc_sdram_bankmachine0_cmd_payload_is_read == __main___basesoc_sdram_choose_cmd_want_reads) & (__main___basesoc_sdram_bankmachine0_cmd_payload_is_write == __main___basesoc_sdram_choose_cmd_want_writes))));
    __main___basesoc_sdram_choose_cmd_valids[1] <= (__main___basesoc_sdram_bankmachine1_cmd_valid & (((__main___basesoc_sdram_bankmachine1_cmd_payload_is_cmd & __main___basesoc_sdram_choose_cmd_want_cmds) & ((~((__main___basesoc_sdram_bankmachine1_cmd_payload_ras & (~__main___basesoc_sdram_bankmachine1_cmd_payload_cas)) & (~__main___basesoc_sdram_bankmachine1_cmd_payload_we))) | __main___basesoc_sdram_choose_cmd_want_activates)) | ((__main___basesoc_sdram_bankmachine1_cmd_payload_is_read == __main___basesoc_sdram_choose_cmd_want_reads) & (__main___basesoc_sdram_bankmachine1_cmd_payload_is_write == __main___basesoc_sdram_choose_cmd_want_writes))));
    __main___basesoc_sdram_choose_cmd_valids[2] <= (__main___basesoc_sdram_bankmachine2_cmd_valid & (((__main___basesoc_sdram_bankmachine2_cmd_payload_is_cmd & __main___basesoc_sdram_choose_cmd_want_cmds) & ((~((__main___basesoc_sdram_bankmachine2_cmd_payload_ras & (~__main___basesoc_sdram_bankmachine2_cmd_payload_cas)) & (~__main___basesoc_sdram_bankmachine2_cmd_payload_we))) | __main___basesoc_sdram_choose_cmd_want_activates)) | ((__main___basesoc_sdram_bankmachine2_cmd_payload_is_read == __main___basesoc_sdram_choose_cmd_want_reads) & (__main___basesoc_sdram_bankmachine2_cmd_payload_is_write == __main___basesoc_sdram_choose_cmd_want_writes))));
    __main___basesoc_sdram_choose_cmd_valids[3] <= (__main___basesoc_sdram_bankmachine3_cmd_valid & (((__main___basesoc_sdram_bankmachine3_cmd_payload_is_cmd & __main___basesoc_sdram_choose_cmd_want_cmds) & ((~((__main___basesoc_sdram_bankmachine3_cmd_payload_ras & (~__main___basesoc_sdram_bankmachine3_cmd_payload_cas)) & (~__main___basesoc_sdram_bankmachine3_cmd_payload_we))) | __main___basesoc_sdram_choose_cmd_want_activates)) | ((__main___basesoc_sdram_bankmachine3_cmd_payload_is_read == __main___basesoc_sdram_choose_cmd_want_reads) & (__main___basesoc_sdram_bankmachine3_cmd_payload_is_write == __main___basesoc_sdram_choose_cmd_want_writes))));
end
assign __main___basesoc_sdram_choose_cmd_request = __main___basesoc_sdram_choose_cmd_valids;
assign __main___basesoc_sdram_choose_cmd_cmd_valid = builder_comb_rhs_array_muxed8;
assign __main___basesoc_sdram_choose_cmd_cmd_payload_a = builder_comb_rhs_array_muxed9;
assign __main___basesoc_sdram_choose_cmd_cmd_payload_ba = builder_comb_rhs_array_muxed10;
assign __main___basesoc_sdram_choose_cmd_cmd_payload_is_read = builder_comb_rhs_array_muxed11;
assign __main___basesoc_sdram_choose_cmd_cmd_payload_is_write = builder_comb_rhs_array_muxed12;
assign __main___basesoc_sdram_choose_cmd_cmd_payload_is_cmd = builder_comb_rhs_array_muxed13;
always @(*) begin
    __main___basesoc_sdram_choose_cmd_cmd_payload_cas <= 1'd0;
    if (__main___basesoc_sdram_choose_cmd_cmd_valid) begin
        __main___basesoc_sdram_choose_cmd_cmd_payload_cas <= builder_comb_t_array_muxed0;
    end
end
always @(*) begin
    __main___basesoc_sdram_choose_cmd_cmd_payload_ras <= 1'd0;
    if (__main___basesoc_sdram_choose_cmd_cmd_valid) begin
        __main___basesoc_sdram_choose_cmd_cmd_payload_ras <= builder_comb_t_array_muxed1;
    end
end
always @(*) begin
    __main___basesoc_sdram_choose_cmd_cmd_payload_we <= 1'd0;
    if (__main___basesoc_sdram_choose_cmd_cmd_valid) begin
        __main___basesoc_sdram_choose_cmd_cmd_payload_we <= builder_comb_t_array_muxed2;
    end
end
assign __main___basesoc_sdram_choose_cmd_ce = (__main___basesoc_sdram_choose_cmd_cmd_ready | (~__main___basesoc_sdram_choose_cmd_cmd_valid));
always @(*) begin
    __main___basesoc_sdram_choose_req_valids <= 4'd0;
    __main___basesoc_sdram_choose_req_valids[0] <= (__main___basesoc_sdram_bankmachine0_cmd_valid & (((__main___basesoc_sdram_bankmachine0_cmd_payload_is_cmd & __main___basesoc_sdram_choose_req_want_cmds) & ((~((__main___basesoc_sdram_bankmachine0_cmd_payload_ras & (~__main___basesoc_sdram_bankmachine0_cmd_payload_cas)) & (~__main___basesoc_sdram_bankmachine0_cmd_payload_we))) | __main___basesoc_sdram_choose_req_want_activates)) | ((__main___basesoc_sdram_bankmachine0_cmd_payload_is_read == __main___basesoc_sdram_choose_req_want_reads) & (__main___basesoc_sdram_bankmachine0_cmd_payload_is_write == __main___basesoc_sdram_choose_req_want_writes))));
    __main___basesoc_sdram_choose_req_valids[1] <= (__main___basesoc_sdram_bankmachine1_cmd_valid & (((__main___basesoc_sdram_bankmachine1_cmd_payload_is_cmd & __main___basesoc_sdram_choose_req_want_cmds) & ((~((__main___basesoc_sdram_bankmachine1_cmd_payload_ras & (~__main___basesoc_sdram_bankmachine1_cmd_payload_cas)) & (~__main___basesoc_sdram_bankmachine1_cmd_payload_we))) | __main___basesoc_sdram_choose_req_want_activates)) | ((__main___basesoc_sdram_bankmachine1_cmd_payload_is_read == __main___basesoc_sdram_choose_req_want_reads) & (__main___basesoc_sdram_bankmachine1_cmd_payload_is_write == __main___basesoc_sdram_choose_req_want_writes))));
    __main___basesoc_sdram_choose_req_valids[2] <= (__main___basesoc_sdram_bankmachine2_cmd_valid & (((__main___basesoc_sdram_bankmachine2_cmd_payload_is_cmd & __main___basesoc_sdram_choose_req_want_cmds) & ((~((__main___basesoc_sdram_bankmachine2_cmd_payload_ras & (~__main___basesoc_sdram_bankmachine2_cmd_payload_cas)) & (~__main___basesoc_sdram_bankmachine2_cmd_payload_we))) | __main___basesoc_sdram_choose_req_want_activates)) | ((__main___basesoc_sdram_bankmachine2_cmd_payload_is_read == __main___basesoc_sdram_choose_req_want_reads) & (__main___basesoc_sdram_bankmachine2_cmd_payload_is_write == __main___basesoc_sdram_choose_req_want_writes))));
    __main___basesoc_sdram_choose_req_valids[3] <= (__main___basesoc_sdram_bankmachine3_cmd_valid & (((__main___basesoc_sdram_bankmachine3_cmd_payload_is_cmd & __main___basesoc_sdram_choose_req_want_cmds) & ((~((__main___basesoc_sdram_bankmachine3_cmd_payload_ras & (~__main___basesoc_sdram_bankmachine3_cmd_payload_cas)) & (~__main___basesoc_sdram_bankmachine3_cmd_payload_we))) | __main___basesoc_sdram_choose_req_want_activates)) | ((__main___basesoc_sdram_bankmachine3_cmd_payload_is_read == __main___basesoc_sdram_choose_req_want_reads) & (__main___basesoc_sdram_bankmachine3_cmd_payload_is_write == __main___basesoc_sdram_choose_req_want_writes))));
end
assign __main___basesoc_sdram_choose_req_request = __main___basesoc_sdram_choose_req_valids;
assign __main___basesoc_sdram_choose_req_cmd_valid = builder_comb_rhs_array_muxed14;
assign __main___basesoc_sdram_choose_req_cmd_payload_a = builder_comb_rhs_array_muxed15;
assign __main___basesoc_sdram_choose_req_cmd_payload_ba = builder_comb_rhs_array_muxed16;
assign __main___basesoc_sdram_choose_req_cmd_payload_is_read = builder_comb_rhs_array_muxed17;
assign __main___basesoc_sdram_choose_req_cmd_payload_is_write = builder_comb_rhs_array_muxed18;
assign __main___basesoc_sdram_choose_req_cmd_payload_is_cmd = builder_comb_rhs_array_muxed19;
always @(*) begin
    __main___basesoc_sdram_choose_req_cmd_payload_cas <= 1'd0;
    if (__main___basesoc_sdram_choose_req_cmd_valid) begin
        __main___basesoc_sdram_choose_req_cmd_payload_cas <= builder_comb_t_array_muxed3;
    end
end
always @(*) begin
    __main___basesoc_sdram_choose_req_cmd_payload_ras <= 1'd0;
    if (__main___basesoc_sdram_choose_req_cmd_valid) begin
        __main___basesoc_sdram_choose_req_cmd_payload_ras <= builder_comb_t_array_muxed4;
    end
end
always @(*) begin
    __main___basesoc_sdram_choose_req_cmd_payload_we <= 1'd0;
    if (__main___basesoc_sdram_choose_req_cmd_valid) begin
        __main___basesoc_sdram_choose_req_cmd_payload_we <= builder_comb_t_array_muxed5;
    end
end
always @(*) begin
    __main___basesoc_sdram_bankmachine0_cmd_ready <= 1'd0;
    if (((__main___basesoc_sdram_choose_cmd_cmd_valid & __main___basesoc_sdram_choose_cmd_cmd_ready) & (__main___basesoc_sdram_choose_cmd_grant == 1'd0))) begin
        __main___basesoc_sdram_bankmachine0_cmd_ready <= 1'd1;
    end
    if (((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & (__main___basesoc_sdram_choose_req_grant == 1'd0))) begin
        __main___basesoc_sdram_bankmachine0_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    __main___basesoc_sdram_bankmachine1_cmd_ready <= 1'd0;
    if (((__main___basesoc_sdram_choose_cmd_cmd_valid & __main___basesoc_sdram_choose_cmd_cmd_ready) & (__main___basesoc_sdram_choose_cmd_grant == 1'd1))) begin
        __main___basesoc_sdram_bankmachine1_cmd_ready <= 1'd1;
    end
    if (((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & (__main___basesoc_sdram_choose_req_grant == 1'd1))) begin
        __main___basesoc_sdram_bankmachine1_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    __main___basesoc_sdram_bankmachine2_cmd_ready <= 1'd0;
    if (((__main___basesoc_sdram_choose_cmd_cmd_valid & __main___basesoc_sdram_choose_cmd_cmd_ready) & (__main___basesoc_sdram_choose_cmd_grant == 2'd2))) begin
        __main___basesoc_sdram_bankmachine2_cmd_ready <= 1'd1;
    end
    if (((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & (__main___basesoc_sdram_choose_req_grant == 2'd2))) begin
        __main___basesoc_sdram_bankmachine2_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    __main___basesoc_sdram_bankmachine3_cmd_ready <= 1'd0;
    if (((__main___basesoc_sdram_choose_cmd_cmd_valid & __main___basesoc_sdram_choose_cmd_cmd_ready) & (__main___basesoc_sdram_choose_cmd_grant == 2'd3))) begin
        __main___basesoc_sdram_bankmachine3_cmd_ready <= 1'd1;
    end
    if (((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & (__main___basesoc_sdram_choose_req_grant == 2'd3))) begin
        __main___basesoc_sdram_bankmachine3_cmd_ready <= 1'd1;
    end
end
assign __main___basesoc_sdram_choose_req_ce = (__main___basesoc_sdram_choose_req_cmd_ready | (~__main___basesoc_sdram_choose_req_cmd_valid));
assign __main___basesoc_sdram_dfi_p0_reset_n = 1'd1;
assign __main___basesoc_sdram_dfi_p0_cke = {1{__main___basesoc_sdram_steerer0}};
assign __main___basesoc_sdram_dfi_p0_odt = {1{__main___basesoc_sdram_steerer1}};
always @(*) begin
    builder_basesoc_litedramcore_multiplexer_next_state <= 3'd0;
    __main___basesoc_sdram_en0 <= 1'd0;
    __main___basesoc_sdram_choose_req_want_reads <= 1'd0;
    __main___basesoc_sdram_choose_req_want_writes <= 1'd0;
    __main___basesoc_sdram_cmd_ready <= 1'd0;
    __main___basesoc_sdram_choose_req_want_activates <= 1'd0;
    __main___basesoc_sdram_choose_req_cmd_ready <= 1'd0;
    __main___basesoc_sdram_steerer_sel <= 2'd0;
    __main___basesoc_sdram_en1 <= 1'd0;
    __main___basesoc_sdram_choose_req_want_activates <= __main___basesoc_sdram_ras_allowed;
    builder_basesoc_litedramcore_multiplexer_next_state <= builder_basesoc_litedramcore_multiplexer_state;
    case (builder_basesoc_litedramcore_multiplexer_state)
        1'd1: begin
            __main___basesoc_sdram_en1 <= 1'd1;
            __main___basesoc_sdram_choose_req_want_writes <= 1'd1;
            if (1'd1) begin
                __main___basesoc_sdram_choose_req_cmd_ready <= (__main___basesoc_sdram_cas_allowed & ((~((__main___basesoc_sdram_choose_req_cmd_payload_ras & (~__main___basesoc_sdram_choose_req_cmd_payload_cas)) & (~__main___basesoc_sdram_choose_req_cmd_payload_we))) | __main___basesoc_sdram_ras_allowed));
            end else begin
                __main___basesoc_sdram_choose_req_want_activates <= __main___basesoc_sdram_ras_allowed;
                __main___basesoc_sdram_choose_req_cmd_ready <= ((~((__main___basesoc_sdram_choose_req_cmd_payload_ras & (~__main___basesoc_sdram_choose_req_cmd_payload_cas)) & (~__main___basesoc_sdram_choose_req_cmd_payload_we))) | __main___basesoc_sdram_ras_allowed);
                __main___basesoc_sdram_choose_req_cmd_ready <= __main___basesoc_sdram_cas_allowed;
            end
            __main___basesoc_sdram_steerer_sel <= 1'd0;
            if (1'd1) begin
                __main___basesoc_sdram_steerer_sel <= 2'd2;
            end
            if (1'd1) begin
                __main___basesoc_sdram_steerer_sel <= 1'd1;
            end
            if (__main___basesoc_sdram_read_available) begin
                if (((~__main___basesoc_sdram_write_available) | __main___basesoc_sdram_max_time1)) begin
                    builder_basesoc_litedramcore_multiplexer_next_state <= 2'd3;
                end
            end
            if (__main___basesoc_sdram_go_to_refresh) begin
                builder_basesoc_litedramcore_multiplexer_next_state <= 2'd2;
            end
        end
        2'd2: begin
            __main___basesoc_sdram_steerer_sel <= 2'd3;
            __main___basesoc_sdram_cmd_ready <= 1'd1;
            if (__main___basesoc_sdram_cmd_last) begin
                builder_basesoc_litedramcore_multiplexer_next_state <= 1'd0;
            end
        end
        2'd3: begin
            if (__main___basesoc_sdram_twtrcon_ready) begin
                builder_basesoc_litedramcore_multiplexer_next_state <= 1'd0;
            end
        end
        3'd4: begin
            builder_basesoc_litedramcore_multiplexer_next_state <= 3'd5;
        end
        3'd5: begin
            builder_basesoc_litedramcore_multiplexer_next_state <= 1'd1;
        end
        default: begin
            __main___basesoc_sdram_en0 <= 1'd1;
            __main___basesoc_sdram_choose_req_want_reads <= 1'd1;
            if (1'd1) begin
                __main___basesoc_sdram_choose_req_cmd_ready <= (__main___basesoc_sdram_cas_allowed & ((~((__main___basesoc_sdram_choose_req_cmd_payload_ras & (~__main___basesoc_sdram_choose_req_cmd_payload_cas)) & (~__main___basesoc_sdram_choose_req_cmd_payload_we))) | __main___basesoc_sdram_ras_allowed));
            end else begin
                __main___basesoc_sdram_choose_req_want_activates <= __main___basesoc_sdram_ras_allowed;
                __main___basesoc_sdram_choose_req_cmd_ready <= ((~((__main___basesoc_sdram_choose_req_cmd_payload_ras & (~__main___basesoc_sdram_choose_req_cmd_payload_cas)) & (~__main___basesoc_sdram_choose_req_cmd_payload_we))) | __main___basesoc_sdram_ras_allowed);
                __main___basesoc_sdram_choose_req_cmd_ready <= __main___basesoc_sdram_cas_allowed;
            end
            __main___basesoc_sdram_steerer_sel <= 1'd0;
            if (1'd1) begin
                __main___basesoc_sdram_steerer_sel <= 2'd2;
            end
            if (1'd1) begin
                __main___basesoc_sdram_steerer_sel <= 1'd1;
            end
            if (__main___basesoc_sdram_write_available) begin
                if (((~__main___basesoc_sdram_read_available) | __main___basesoc_sdram_max_time0)) begin
                    builder_basesoc_litedramcore_multiplexer_next_state <= 3'd4;
                end
            end
            if (__main___basesoc_sdram_go_to_refresh) begin
                builder_basesoc_litedramcore_multiplexer_next_state <= 2'd2;
            end
        end
    endcase
end
assign builder_basesoc_litedramcore_roundrobin0_request = {(((__main___basesoc_port_cmd_payload_addr[9:8] == 1'd0) & (~(((builder_basesoc_litedramcore_locked0 | (__main___basesoc_sdram_interface_bank1_lock & (builder_basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank2_lock & (builder_basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank3_lock & (builder_basesoc_litedramcore_roundrobin3_grant == 1'd0))))) & __main___basesoc_port_cmd_valid)};
assign builder_basesoc_litedramcore_roundrobin0_ce = ((~__main___basesoc_sdram_interface_bank0_valid) & (~__main___basesoc_sdram_interface_bank0_lock));
assign __main___basesoc_sdram_interface_bank0_addr = builder_comb_rhs_array_muxed20;
assign __main___basesoc_sdram_interface_bank0_we = builder_comb_rhs_array_muxed21;
assign __main___basesoc_sdram_interface_bank0_valid = builder_comb_rhs_array_muxed22;
assign builder_basesoc_litedramcore_roundrobin1_request = {(((__main___basesoc_port_cmd_payload_addr[9:8] == 1'd1) & (~(((builder_basesoc_litedramcore_locked1 | (__main___basesoc_sdram_interface_bank0_lock & (builder_basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank2_lock & (builder_basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank3_lock & (builder_basesoc_litedramcore_roundrobin3_grant == 1'd0))))) & __main___basesoc_port_cmd_valid)};
assign builder_basesoc_litedramcore_roundrobin1_ce = ((~__main___basesoc_sdram_interface_bank1_valid) & (~__main___basesoc_sdram_interface_bank1_lock));
assign __main___basesoc_sdram_interface_bank1_addr = builder_comb_rhs_array_muxed23;
assign __main___basesoc_sdram_interface_bank1_we = builder_comb_rhs_array_muxed24;
assign __main___basesoc_sdram_interface_bank1_valid = builder_comb_rhs_array_muxed25;
assign builder_basesoc_litedramcore_roundrobin2_request = {(((__main___basesoc_port_cmd_payload_addr[9:8] == 2'd2) & (~(((builder_basesoc_litedramcore_locked2 | (__main___basesoc_sdram_interface_bank0_lock & (builder_basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank1_lock & (builder_basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank3_lock & (builder_basesoc_litedramcore_roundrobin3_grant == 1'd0))))) & __main___basesoc_port_cmd_valid)};
assign builder_basesoc_litedramcore_roundrobin2_ce = ((~__main___basesoc_sdram_interface_bank2_valid) & (~__main___basesoc_sdram_interface_bank2_lock));
assign __main___basesoc_sdram_interface_bank2_addr = builder_comb_rhs_array_muxed26;
assign __main___basesoc_sdram_interface_bank2_we = builder_comb_rhs_array_muxed27;
assign __main___basesoc_sdram_interface_bank2_valid = builder_comb_rhs_array_muxed28;
assign builder_basesoc_litedramcore_roundrobin3_request = {(((__main___basesoc_port_cmd_payload_addr[9:8] == 2'd3) & (~(((builder_basesoc_litedramcore_locked3 | (__main___basesoc_sdram_interface_bank0_lock & (builder_basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank1_lock & (builder_basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank2_lock & (builder_basesoc_litedramcore_roundrobin2_grant == 1'd0))))) & __main___basesoc_port_cmd_valid)};
assign builder_basesoc_litedramcore_roundrobin3_ce = ((~__main___basesoc_sdram_interface_bank3_valid) & (~__main___basesoc_sdram_interface_bank3_lock));
assign __main___basesoc_sdram_interface_bank3_addr = builder_comb_rhs_array_muxed29;
assign __main___basesoc_sdram_interface_bank3_we = builder_comb_rhs_array_muxed30;
assign __main___basesoc_sdram_interface_bank3_valid = builder_comb_rhs_array_muxed31;
assign __main___basesoc_port_cmd_ready = ((((1'd0 | (((builder_basesoc_litedramcore_roundrobin0_grant == 1'd0) & ((__main___basesoc_port_cmd_payload_addr[9:8] == 1'd0) & (~(((builder_basesoc_litedramcore_locked0 | (__main___basesoc_sdram_interface_bank1_lock & (builder_basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank2_lock & (builder_basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank3_lock & (builder_basesoc_litedramcore_roundrobin3_grant == 1'd0)))))) & __main___basesoc_sdram_interface_bank0_ready)) | (((builder_basesoc_litedramcore_roundrobin1_grant == 1'd0) & ((__main___basesoc_port_cmd_payload_addr[9:8] == 1'd1) & (~(((builder_basesoc_litedramcore_locked1 | (__main___basesoc_sdram_interface_bank0_lock & (builder_basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank2_lock & (builder_basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank3_lock & (builder_basesoc_litedramcore_roundrobin3_grant == 1'd0)))))) & __main___basesoc_sdram_interface_bank1_ready)) | (((builder_basesoc_litedramcore_roundrobin2_grant == 1'd0) & ((__main___basesoc_port_cmd_payload_addr[9:8] == 2'd2) & (~(((builder_basesoc_litedramcore_locked2 | (__main___basesoc_sdram_interface_bank0_lock & (builder_basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank1_lock & (builder_basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank3_lock & (builder_basesoc_litedramcore_roundrobin3_grant == 1'd0)))))) & __main___basesoc_sdram_interface_bank2_ready)) | (((builder_basesoc_litedramcore_roundrobin3_grant == 1'd0) & ((__main___basesoc_port_cmd_payload_addr[9:8] == 2'd3) & (~(((builder_basesoc_litedramcore_locked3 | (__main___basesoc_sdram_interface_bank0_lock & (builder_basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank1_lock & (builder_basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank2_lock & (builder_basesoc_litedramcore_roundrobin2_grant == 1'd0)))))) & __main___basesoc_sdram_interface_bank3_ready));
assign __main___basesoc_port_wdata_ready = builder_basesoc_litedramcore_new_master_wdata_ready;
assign __main___basesoc_port_rdata_valid = builder_basesoc_litedramcore_new_master_rdata_valid3;
always @(*) begin
    __main___basesoc_sdram_interface_wdata <= 32'd0;
    __main___basesoc_sdram_interface_wdata_we <= 4'd0;
    case ({builder_basesoc_litedramcore_new_master_wdata_ready})
        1'd1: begin
            __main___basesoc_sdram_interface_wdata <= __main___basesoc_port_wdata_payload_data;
            __main___basesoc_sdram_interface_wdata_we <= __main___basesoc_port_wdata_payload_we;
        end
        default: begin
            __main___basesoc_sdram_interface_wdata <= 1'd0;
            __main___basesoc_sdram_interface_wdata_we <= 1'd0;
        end
    endcase
end
assign __main___basesoc_port_rdata_payload_data = __main___basesoc_sdram_interface_rdata;
assign builder_basesoc_litedramcore_roundrobin0_grant = 1'd0;
assign builder_basesoc_litedramcore_roundrobin1_grant = 1'd0;
assign builder_basesoc_litedramcore_roundrobin2_grant = 1'd0;
assign builder_basesoc_litedramcore_roundrobin3_grant = 1'd0;
assign __main___basesoc_data_port_adr = __main___basesoc_wb_sdram_adr[10:2];
always @(*) begin
    __main___basesoc_data_port_we <= 16'd0;
    __main___basesoc_data_port_dat_w <= 128'd0;
    if (__main___basesoc_write_from_slave) begin
        __main___basesoc_data_port_dat_w <= __main___basesoc_interface_dat_r;
        __main___basesoc_data_port_we <= {16{1'd1}};
    end else begin
        __main___basesoc_data_port_dat_w <= {4{__main___basesoc_wb_sdram_dat_w}};
        if ((((__main___basesoc_wb_sdram_cyc & __main___basesoc_wb_sdram_stb) & __main___basesoc_wb_sdram_we) & __main___basesoc_wb_sdram_ack)) begin
            __main___basesoc_data_port_we <= {({4{(__main___basesoc_wb_sdram_adr[1:0] == 2'd3)}} & __main___basesoc_wb_sdram_sel), ({4{(__main___basesoc_wb_sdram_adr[1:0] == 2'd2)}} & __main___basesoc_wb_sdram_sel), ({4{(__main___basesoc_wb_sdram_adr[1:0] == 1'd1)}} & __main___basesoc_wb_sdram_sel), ({4{(__main___basesoc_wb_sdram_adr[1:0] == 1'd0)}} & __main___basesoc_wb_sdram_sel)};
        end
    end
end
assign __main___basesoc_interface_dat_w = __main___basesoc_data_port_dat_r;
assign __main___basesoc_interface_sel = 16'd65535;
always @(*) begin
    __main___basesoc_wb_sdram_dat_r <= 32'd0;
    case (__main___basesoc_adr_offset_r)
        1'd0: begin
            __main___basesoc_wb_sdram_dat_r <= __main___basesoc_data_port_dat_r[31:0];
        end
        1'd1: begin
            __main___basesoc_wb_sdram_dat_r <= __main___basesoc_data_port_dat_r[63:32];
        end
        2'd2: begin
            __main___basesoc_wb_sdram_dat_r <= __main___basesoc_data_port_dat_r[95:64];
        end
        default: begin
            __main___basesoc_wb_sdram_dat_r <= __main___basesoc_data_port_dat_r[127:96];
        end
    endcase
end
assign {__main___basesoc_tag_do_dirty, __main___basesoc_tag_do_tag} = __main___basesoc_tag_port_dat_r;
assign __main___basesoc_tag_port_dat_w = {__main___basesoc_tag_di_dirty, __main___basesoc_tag_di_tag};
assign __main___basesoc_tag_port_adr = __main___basesoc_wb_sdram_adr[10:2];
assign __main___basesoc_tag_di_tag = __main___basesoc_wb_sdram_adr[29:11];
assign __main___basesoc_interface_adr = {__main___basesoc_tag_do_tag, __main___basesoc_wb_sdram_adr[10:2]};
always @(*) begin
    __main___basesoc_tag_port_we <= 1'd0;
    __main___basesoc_interface_we <= 1'd0;
    __main___basesoc_wb_sdram_ack <= 1'd0;
    builder_basesoc_fullmemorywe_next_state <= 2'd0;
    __main___basesoc_tag_di_dirty <= 1'd0;
    __main___basesoc_word_clr <= 1'd0;
    __main___basesoc_word_inc <= 1'd0;
    __main___basesoc_write_from_slave <= 1'd0;
    __main___basesoc_interface_cyc <= 1'd0;
    __main___basesoc_interface_stb <= 1'd0;
    builder_basesoc_fullmemorywe_next_state <= builder_basesoc_fullmemorywe_state;
    case (builder_basesoc_fullmemorywe_state)
        1'd1: begin
            __main___basesoc_word_clr <= 1'd1;
            if ((__main___basesoc_tag_do_tag == __main___basesoc_wb_sdram_adr[29:11])) begin
                __main___basesoc_wb_sdram_ack <= 1'd1;
                if (__main___basesoc_wb_sdram_we) begin
                    __main___basesoc_tag_di_dirty <= 1'd1;
                    __main___basesoc_tag_port_we <= 1'd1;
                end
                builder_basesoc_fullmemorywe_next_state <= 1'd0;
            end else begin
                if (__main___basesoc_tag_do_dirty) begin
                    builder_basesoc_fullmemorywe_next_state <= 2'd2;
                end else begin
                    __main___basesoc_tag_port_we <= 1'd1;
                    __main___basesoc_word_clr <= 1'd1;
                    builder_basesoc_fullmemorywe_next_state <= 2'd3;
                end
            end
        end
        2'd2: begin
            __main___basesoc_interface_stb <= 1'd1;
            __main___basesoc_interface_cyc <= 1'd1;
            __main___basesoc_interface_we <= 1'd1;
            if (__main___basesoc_interface_ack) begin
                __main___basesoc_word_inc <= 1'd1;
                if (1'd1) begin
                    __main___basesoc_tag_port_we <= 1'd1;
                    __main___basesoc_word_clr <= 1'd1;
                    builder_basesoc_fullmemorywe_next_state <= 2'd3;
                end
            end
        end
        2'd3: begin
            __main___basesoc_interface_stb <= 1'd1;
            __main___basesoc_interface_cyc <= 1'd1;
            __main___basesoc_interface_we <= 1'd0;
            if (__main___basesoc_interface_ack) begin
                __main___basesoc_write_from_slave <= 1'd1;
                __main___basesoc_word_inc <= 1'd1;
                if (1'd1) begin
                    builder_basesoc_fullmemorywe_next_state <= 1'd1;
                end else begin
                    builder_basesoc_fullmemorywe_next_state <= 2'd3;
                end
            end
        end
        default: begin
            if ((__main___basesoc_wb_sdram_cyc & __main___basesoc_wb_sdram_stb)) begin
                builder_basesoc_fullmemorywe_next_state <= 1'd1;
            end
        end
    endcase
end
assign __main___basesoc_wishbone_bridge_cmd_payload_addr = (__main___basesoc_interface_adr - 27'd67108864);
assign __main___basesoc_wishbone_bridge_cmd_payload_we = __main___basesoc_interface_we;
assign __main___basesoc_wishbone_bridge_cmd_last = (~__main___basesoc_interface_we);
assign __main___basesoc_wishbone_bridge_flush = (~__main___basesoc_interface_cyc);
always @(*) begin
    __main___basesoc_wishbone_bridge_wdata_valid <= 1'd0;
    __main___basesoc_wishbone_bridge_wdata_valid <= (__main___basesoc_interface_stb & __main___basesoc_interface_we);
    if (1'd0) begin
        if ((~__main___basesoc_wishbone_bridge_is_ongoing)) begin
            __main___basesoc_wishbone_bridge_wdata_valid <= 1'd0;
        end
    end
end
assign __main___basesoc_wishbone_bridge_wdata_payload_data = __main___basesoc_interface_dat_w;
assign __main___basesoc_wishbone_bridge_wdata_payload_we = __main___basesoc_interface_sel;
assign __main___basesoc_wishbone_bridge_rdata_ready = 1'd1;
always @(*) begin
    builder_basesoc_litedramnativeportconverter_next_state <= 1'd0;
    __main___basesoc_wishbone_bridge_cmd_ready <= 1'd0;
    __main___basesoc_wishbone_bridge_count_litedramnativeportconverter_next_value <= 2'd0;
    __main___basesoc_wishbone_bridge_count_litedramnativeportconverter_next_value_ce <= 1'd0;
    __main___basesoc_port_cmd_payload_we <= 1'd0;
    __main___basesoc_port_cmd_payload_addr <= 21'd0;
    __main___basesoc_port_cmd_valid <= 1'd0;
    builder_basesoc_litedramnativeportconverter_next_state <= builder_basesoc_litedramnativeportconverter_state;
    case (builder_basesoc_litedramnativeportconverter_state)
        1'd1: begin
            __main___basesoc_port_cmd_valid <= 1'd1;
            __main___basesoc_port_cmd_payload_we <= __main___basesoc_wishbone_bridge_cmd_payload_we;
            __main___basesoc_port_cmd_payload_addr <= ((__main___basesoc_wishbone_bridge_cmd_payload_addr * 3'd4) + __main___basesoc_wishbone_bridge_count);
            if (__main___basesoc_port_cmd_ready) begin
                __main___basesoc_wishbone_bridge_count_litedramnativeportconverter_next_value <= (__main___basesoc_wishbone_bridge_count + 1'd1);
                __main___basesoc_wishbone_bridge_count_litedramnativeportconverter_next_value_ce <= 1'd1;
                if ((__main___basesoc_wishbone_bridge_count == 2'd3)) begin
                    __main___basesoc_wishbone_bridge_cmd_ready <= 1'd1;
                    builder_basesoc_litedramnativeportconverter_next_state <= 1'd0;
                end
            end
        end
        default: begin
            __main___basesoc_wishbone_bridge_count_litedramnativeportconverter_next_value <= 1'd0;
            __main___basesoc_wishbone_bridge_count_litedramnativeportconverter_next_value_ce <= 1'd1;
            if (__main___basesoc_wishbone_bridge_cmd_valid) begin
                builder_basesoc_litedramnativeportconverter_next_state <= 1'd1;
            end
        end
    endcase
end
assign __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_valid = __main___basesoc_wishbone_bridge_wdata_converter_sink_valid;
assign __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_first = __main___basesoc_wishbone_bridge_wdata_converter_sink_first;
assign __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_last = __main___basesoc_wishbone_bridge_wdata_converter_sink_last;
assign __main___basesoc_wishbone_bridge_wdata_converter_sink_ready = __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_ready;
always @(*) begin
    __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data <= 144'd0;
    __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[31:0] <= __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_data[31:0];
    __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[35:32] <= __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_we[3:0];
    __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[67:36] <= __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_data[63:32];
    __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[71:68] <= __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_we[7:4];
    __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[103:72] <= __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_data[95:64];
    __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[107:104] <= __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_we[11:8];
    __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[139:108] <= __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_data[127:96];
    __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[143:140] <= __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_we[15:12];
end
assign __main___basesoc_wishbone_bridge_wdata_converter_source_valid = __main___basesoc_wishbone_bridge_wdata_converter_source_source_valid;
assign __main___basesoc_wishbone_bridge_wdata_converter_source_first = __main___basesoc_wishbone_bridge_wdata_converter_source_source_first;
assign __main___basesoc_wishbone_bridge_wdata_converter_source_last = __main___basesoc_wishbone_bridge_wdata_converter_source_source_last;
assign __main___basesoc_wishbone_bridge_wdata_converter_source_source_ready = __main___basesoc_wishbone_bridge_wdata_converter_source_ready;
assign {__main___basesoc_wishbone_bridge_wdata_converter_source_payload_we, __main___basesoc_wishbone_bridge_wdata_converter_source_payload_data} = __main___basesoc_wishbone_bridge_wdata_converter_source_source_payload_data;
assign __main___basesoc_wishbone_bridge_wdata_converter_source_source_valid = __main___basesoc_wishbone_bridge_wdata_converter_converter_source_valid;
assign __main___basesoc_wishbone_bridge_wdata_converter_converter_source_ready = __main___basesoc_wishbone_bridge_wdata_converter_source_source_ready;
assign __main___basesoc_wishbone_bridge_wdata_converter_source_source_first = __main___basesoc_wishbone_bridge_wdata_converter_converter_source_first;
assign __main___basesoc_wishbone_bridge_wdata_converter_source_source_last = __main___basesoc_wishbone_bridge_wdata_converter_converter_source_last;
assign __main___basesoc_wishbone_bridge_wdata_converter_source_source_payload_data = __main___basesoc_wishbone_bridge_wdata_converter_converter_source_payload_data;
assign __main___basesoc_wishbone_bridge_wdata_converter_converter_first = (__main___basesoc_wishbone_bridge_wdata_converter_converter_mux == 1'd0);
assign __main___basesoc_wishbone_bridge_wdata_converter_converter_last = (__main___basesoc_wishbone_bridge_wdata_converter_converter_mux == 2'd3);
assign __main___basesoc_wishbone_bridge_wdata_converter_converter_source_valid = __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_valid;
assign __main___basesoc_wishbone_bridge_wdata_converter_converter_source_first = (__main___basesoc_wishbone_bridge_wdata_converter_converter_sink_first & __main___basesoc_wishbone_bridge_wdata_converter_converter_first);
assign __main___basesoc_wishbone_bridge_wdata_converter_converter_source_last = (__main___basesoc_wishbone_bridge_wdata_converter_converter_sink_last & __main___basesoc_wishbone_bridge_wdata_converter_converter_last);
assign __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_ready = (__main___basesoc_wishbone_bridge_wdata_converter_converter_last & __main___basesoc_wishbone_bridge_wdata_converter_converter_source_ready);
always @(*) begin
    __main___basesoc_wishbone_bridge_wdata_converter_converter_source_payload_data <= 36'd0;
    case (__main___basesoc_wishbone_bridge_wdata_converter_converter_mux)
        1'd0: begin
            __main___basesoc_wishbone_bridge_wdata_converter_converter_source_payload_data <= __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[35:0];
        end
        1'd1: begin
            __main___basesoc_wishbone_bridge_wdata_converter_converter_source_payload_data <= __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[71:36];
        end
        2'd2: begin
            __main___basesoc_wishbone_bridge_wdata_converter_converter_source_payload_data <= __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[107:72];
        end
        default: begin
            __main___basesoc_wishbone_bridge_wdata_converter_converter_source_payload_data <= __main___basesoc_wishbone_bridge_wdata_converter_converter_sink_payload_data[143:108];
        end
    endcase
end
assign __main___basesoc_wishbone_bridge_wdata_converter_converter_source_payload_valid_token_count = __main___basesoc_wishbone_bridge_wdata_converter_converter_last;
assign __main___basesoc_wishbone_bridge_wdata_converter_sink_valid = __main___basesoc_wishbone_bridge_wdata_valid;
assign __main___basesoc_wishbone_bridge_wdata_ready = __main___basesoc_wishbone_bridge_wdata_converter_sink_ready;
assign __main___basesoc_wishbone_bridge_wdata_converter_sink_first = __main___basesoc_wishbone_bridge_wdata_first;
assign __main___basesoc_wishbone_bridge_wdata_converter_sink_last = __main___basesoc_wishbone_bridge_wdata_last;
assign __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_data = __main___basesoc_wishbone_bridge_wdata_payload_data;
assign __main___basesoc_wishbone_bridge_wdata_converter_sink_payload_we = __main___basesoc_wishbone_bridge_wdata_payload_we;
assign __main___basesoc_port_wdata_valid = __main___basesoc_wishbone_bridge_wdata_converter_source_valid;
assign __main___basesoc_wishbone_bridge_wdata_converter_source_ready = __main___basesoc_port_wdata_ready;
assign __main___basesoc_port_wdata_first = __main___basesoc_wishbone_bridge_wdata_converter_source_first;
assign __main___basesoc_port_wdata_last = __main___basesoc_wishbone_bridge_wdata_converter_source_last;
assign __main___basesoc_port_wdata_payload_data = __main___basesoc_wishbone_bridge_wdata_converter_source_payload_data;
assign __main___basesoc_port_wdata_payload_we = __main___basesoc_wishbone_bridge_wdata_converter_source_payload_we;
assign __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_valid = __main___basesoc_wishbone_bridge_rdata_converter_sink_valid;
assign __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_first = __main___basesoc_wishbone_bridge_rdata_converter_sink_first;
assign __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_last = __main___basesoc_wishbone_bridge_rdata_converter_sink_last;
assign __main___basesoc_wishbone_bridge_rdata_converter_sink_ready = __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_ready;
assign __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_payload_data = {__main___basesoc_wishbone_bridge_rdata_converter_sink_payload_data};
assign __main___basesoc_wishbone_bridge_rdata_converter_source_valid = __main___basesoc_wishbone_bridge_rdata_converter_source_source_valid;
assign __main___basesoc_wishbone_bridge_rdata_converter_source_first = __main___basesoc_wishbone_bridge_rdata_converter_source_source_first;
assign __main___basesoc_wishbone_bridge_rdata_converter_source_last = __main___basesoc_wishbone_bridge_rdata_converter_source_source_last;
assign __main___basesoc_wishbone_bridge_rdata_converter_source_source_ready = __main___basesoc_wishbone_bridge_rdata_converter_source_ready;
always @(*) begin
    __main___basesoc_wishbone_bridge_rdata_converter_source_payload_data <= 128'd0;
    __main___basesoc_wishbone_bridge_rdata_converter_source_payload_data[31:0] <= __main___basesoc_wishbone_bridge_rdata_converter_source_source_payload_data[31:0];
    __main___basesoc_wishbone_bridge_rdata_converter_source_payload_data[63:32] <= __main___basesoc_wishbone_bridge_rdata_converter_source_source_payload_data[63:32];
    __main___basesoc_wishbone_bridge_rdata_converter_source_payload_data[95:64] <= __main___basesoc_wishbone_bridge_rdata_converter_source_source_payload_data[95:64];
    __main___basesoc_wishbone_bridge_rdata_converter_source_payload_data[127:96] <= __main___basesoc_wishbone_bridge_rdata_converter_source_source_payload_data[127:96];
end
assign __main___basesoc_wishbone_bridge_rdata_converter_source_source_valid = __main___basesoc_wishbone_bridge_rdata_converter_converter_source_valid;
assign __main___basesoc_wishbone_bridge_rdata_converter_converter_source_ready = __main___basesoc_wishbone_bridge_rdata_converter_source_source_ready;
assign __main___basesoc_wishbone_bridge_rdata_converter_source_source_first = __main___basesoc_wishbone_bridge_rdata_converter_converter_source_first;
assign __main___basesoc_wishbone_bridge_rdata_converter_source_source_last = __main___basesoc_wishbone_bridge_rdata_converter_converter_source_last;
assign __main___basesoc_wishbone_bridge_rdata_converter_source_source_payload_data = __main___basesoc_wishbone_bridge_rdata_converter_converter_source_payload_data;
assign __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_ready = ((~__main___basesoc_wishbone_bridge_rdata_converter_converter_strobe_all) | __main___basesoc_wishbone_bridge_rdata_converter_converter_source_ready);
assign __main___basesoc_wishbone_bridge_rdata_converter_converter_source_valid = __main___basesoc_wishbone_bridge_rdata_converter_converter_strobe_all;
assign __main___basesoc_wishbone_bridge_rdata_converter_converter_load_part = (__main___basesoc_wishbone_bridge_rdata_converter_converter_sink_valid & __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_ready);
assign __main___basesoc_wishbone_bridge_rdata_converter_sink_valid = __main___basesoc_port_rdata_valid;
assign __main___basesoc_port_rdata_ready = __main___basesoc_wishbone_bridge_rdata_converter_sink_ready;
assign __main___basesoc_wishbone_bridge_rdata_converter_sink_first = __main___basesoc_port_rdata_first;
assign __main___basesoc_wishbone_bridge_rdata_converter_sink_last = __main___basesoc_port_rdata_last;
assign __main___basesoc_wishbone_bridge_rdata_converter_sink_payload_data = __main___basesoc_port_rdata_payload_data;
assign __main___basesoc_wishbone_bridge_rdata_valid = __main___basesoc_wishbone_bridge_rdata_converter_source_valid;
assign __main___basesoc_wishbone_bridge_rdata_converter_source_ready = __main___basesoc_wishbone_bridge_rdata_ready;
assign __main___basesoc_wishbone_bridge_rdata_first = __main___basesoc_wishbone_bridge_rdata_converter_source_first;
assign __main___basesoc_wishbone_bridge_rdata_last = __main___basesoc_wishbone_bridge_rdata_converter_source_last;
assign __main___basesoc_wishbone_bridge_rdata_payload_data = __main___basesoc_wishbone_bridge_rdata_converter_source_payload_data;
always @(*) begin
    __main___basesoc_interface_ack <= 1'd0;
    __main___basesoc_wishbone_bridge_aborted_fsm_next_value_ce <= 1'd0;
    __main___basesoc_wishbone_bridge_aborted_fsm_next_value <= 1'd0;
    builder_basesoc_fsm_next_state <= 2'd0;
    __main___basesoc_interface_dat_r <= 128'd0;
    __main___basesoc_wishbone_bridge_is_ongoing <= 1'd0;
    __main___basesoc_wishbone_bridge_cmd_valid <= 1'd0;
    builder_basesoc_fsm_next_state <= builder_basesoc_fsm_state;
    case (builder_basesoc_fsm_state)
        1'd1: begin
            __main___basesoc_wishbone_bridge_is_ongoing <= 1'd1;
            __main___basesoc_wishbone_bridge_aborted_fsm_next_value <= ((~__main___basesoc_interface_cyc) | __main___basesoc_wishbone_bridge_aborted);
            __main___basesoc_wishbone_bridge_aborted_fsm_next_value_ce <= 1'd1;
            if ((__main___basesoc_wishbone_bridge_wdata_valid & __main___basesoc_wishbone_bridge_wdata_ready)) begin
                __main___basesoc_interface_ack <= (__main___basesoc_interface_cyc & (~__main___basesoc_wishbone_bridge_aborted));
                builder_basesoc_fsm_next_state <= 1'd0;
            end
        end
        2'd2: begin
            __main___basesoc_wishbone_bridge_aborted_fsm_next_value <= ((~__main___basesoc_interface_cyc) | __main___basesoc_wishbone_bridge_aborted);
            __main___basesoc_wishbone_bridge_aborted_fsm_next_value_ce <= 1'd1;
            if (__main___basesoc_wishbone_bridge_rdata_valid) begin
                __main___basesoc_interface_ack <= (__main___basesoc_interface_cyc & (~__main___basesoc_wishbone_bridge_aborted));
                __main___basesoc_interface_dat_r <= __main___basesoc_wishbone_bridge_rdata_payload_data;
                builder_basesoc_fsm_next_state <= 1'd0;
            end
        end
        default: begin
            __main___basesoc_wishbone_bridge_cmd_valid <= (__main___basesoc_interface_cyc & __main___basesoc_interface_stb);
            if (((__main___basesoc_wishbone_bridge_cmd_valid & __main___basesoc_wishbone_bridge_cmd_ready) & __main___basesoc_interface_we)) begin
                builder_basesoc_fsm_next_state <= 1'd1;
            end
            if (((__main___basesoc_wishbone_bridge_cmd_valid & __main___basesoc_wishbone_bridge_cmd_ready) & (~__main___basesoc_interface_we))) begin
                builder_basesoc_fsm_next_state <= 2'd2;
            end
            __main___basesoc_wishbone_bridge_aborted_fsm_next_value <= 1'd0;
            __main___basesoc_wishbone_bridge_aborted_fsm_next_value_ce <= 1'd1;
        end
    endcase
end
assign eth_rx_clk = eth_clocks_ref_clk;
assign eth_tx_clk = eth_clocks_ref_clk;
assign __main___ethphy_reset0 = (__main___ethphy_reset_storage | __main___ethphy_reset1);
assign __main___ethphy_counter_done = (__main___ethphy_counter == 9'd256);
assign __main___ethphy_counter_ce = (~__main___ethphy_counter_done);
assign __main___ethphy_reset1 = (~__main___ethphy_counter_done);
assign __main___ethphy_liteethphyrmiitx_converter_sink_valid = __main___ethphy_liteethphyrmiitx_sink_sink_valid;
assign __main___ethphy_liteethphyrmiitx_converter_sink_payload_data = __main___ethphy_liteethphyrmiitx_sink_sink_payload_data;
assign __main___ethphy_liteethphyrmiitx_sink_sink_ready = __main___ethphy_liteethphyrmiitx_converter_sink_ready;
assign __main___ethphy_liteethphyrmiitx_converter_source_ready = 1'd1;
assign __main___ethphy_liteethphyrmiitx_converter_converter_sink_valid = __main___ethphy_liteethphyrmiitx_converter_sink_valid;
assign __main___ethphy_liteethphyrmiitx_converter_converter_sink_first = __main___ethphy_liteethphyrmiitx_converter_sink_first;
assign __main___ethphy_liteethphyrmiitx_converter_converter_sink_last = __main___ethphy_liteethphyrmiitx_converter_sink_last;
assign __main___ethphy_liteethphyrmiitx_converter_sink_ready = __main___ethphy_liteethphyrmiitx_converter_converter_sink_ready;
always @(*) begin
    __main___ethphy_liteethphyrmiitx_converter_converter_sink_payload_data <= 8'd0;
    __main___ethphy_liteethphyrmiitx_converter_converter_sink_payload_data[1:0] <= __main___ethphy_liteethphyrmiitx_converter_sink_payload_data[1:0];
    __main___ethphy_liteethphyrmiitx_converter_converter_sink_payload_data[3:2] <= __main___ethphy_liteethphyrmiitx_converter_sink_payload_data[3:2];
    __main___ethphy_liteethphyrmiitx_converter_converter_sink_payload_data[5:4] <= __main___ethphy_liteethphyrmiitx_converter_sink_payload_data[5:4];
    __main___ethphy_liteethphyrmiitx_converter_converter_sink_payload_data[7:6] <= __main___ethphy_liteethphyrmiitx_converter_sink_payload_data[7:6];
end
assign __main___ethphy_liteethphyrmiitx_converter_source_valid = __main___ethphy_liteethphyrmiitx_converter_source_source_valid;
assign __main___ethphy_liteethphyrmiitx_converter_source_first = __main___ethphy_liteethphyrmiitx_converter_source_source_first;
assign __main___ethphy_liteethphyrmiitx_converter_source_last = __main___ethphy_liteethphyrmiitx_converter_source_source_last;
assign __main___ethphy_liteethphyrmiitx_converter_source_source_ready = __main___ethphy_liteethphyrmiitx_converter_source_ready;
assign {__main___ethphy_liteethphyrmiitx_converter_source_payload_data} = __main___ethphy_liteethphyrmiitx_converter_source_source_payload_data;
assign __main___ethphy_liteethphyrmiitx_converter_source_source_valid = __main___ethphy_liteethphyrmiitx_converter_converter_source_valid;
assign __main___ethphy_liteethphyrmiitx_converter_converter_source_ready = __main___ethphy_liteethphyrmiitx_converter_source_source_ready;
assign __main___ethphy_liteethphyrmiitx_converter_source_source_first = __main___ethphy_liteethphyrmiitx_converter_converter_source_first;
assign __main___ethphy_liteethphyrmiitx_converter_source_source_last = __main___ethphy_liteethphyrmiitx_converter_converter_source_last;
assign __main___ethphy_liteethphyrmiitx_converter_source_source_payload_data = __main___ethphy_liteethphyrmiitx_converter_converter_source_payload_data;
assign __main___ethphy_liteethphyrmiitx_converter_converter_first = (__main___ethphy_liteethphyrmiitx_converter_converter_mux == 1'd0);
assign __main___ethphy_liteethphyrmiitx_converter_converter_last = (__main___ethphy_liteethphyrmiitx_converter_converter_mux == 2'd3);
assign __main___ethphy_liteethphyrmiitx_converter_converter_source_valid = __main___ethphy_liteethphyrmiitx_converter_converter_sink_valid;
assign __main___ethphy_liteethphyrmiitx_converter_converter_source_first = (__main___ethphy_liteethphyrmiitx_converter_converter_sink_first & __main___ethphy_liteethphyrmiitx_converter_converter_first);
assign __main___ethphy_liteethphyrmiitx_converter_converter_source_last = (__main___ethphy_liteethphyrmiitx_converter_converter_sink_last & __main___ethphy_liteethphyrmiitx_converter_converter_last);
assign __main___ethphy_liteethphyrmiitx_converter_converter_sink_ready = (__main___ethphy_liteethphyrmiitx_converter_converter_last & __main___ethphy_liteethphyrmiitx_converter_converter_source_ready);
always @(*) begin
    __main___ethphy_liteethphyrmiitx_converter_converter_source_payload_data <= 2'd0;
    case (__main___ethphy_liteethphyrmiitx_converter_converter_mux)
        1'd0: begin
            __main___ethphy_liteethphyrmiitx_converter_converter_source_payload_data <= __main___ethphy_liteethphyrmiitx_converter_converter_sink_payload_data[1:0];
        end
        1'd1: begin
            __main___ethphy_liteethphyrmiitx_converter_converter_source_payload_data <= __main___ethphy_liteethphyrmiitx_converter_converter_sink_payload_data[3:2];
        end
        2'd2: begin
            __main___ethphy_liteethphyrmiitx_converter_converter_source_payload_data <= __main___ethphy_liteethphyrmiitx_converter_converter_sink_payload_data[5:4];
        end
        default: begin
            __main___ethphy_liteethphyrmiitx_converter_converter_source_payload_data <= __main___ethphy_liteethphyrmiitx_converter_converter_sink_payload_data[7:6];
        end
    endcase
end
assign __main___ethphy_liteethphyrmiitx_converter_converter_source_payload_valid_token_count = __main___ethphy_liteethphyrmiitx_converter_converter_last;
assign __main___ethphy_liteethphyrmiirx_source_source_valid = __main___ethphy_liteethphyrmiirx_converter_source_valid;
assign __main___ethphy_liteethphyrmiirx_converter_source_ready = __main___ethphy_liteethphyrmiirx_source_source_ready;
assign __main___ethphy_liteethphyrmiirx_source_source_first = __main___ethphy_liteethphyrmiirx_converter_source_first;
assign __main___ethphy_liteethphyrmiirx_source_source_last = __main___ethphy_liteethphyrmiirx_converter_source_last;
assign __main___ethphy_liteethphyrmiirx_source_source_payload_data = __main___ethphy_liteethphyrmiirx_converter_source_payload_data;
assign __main___ethphy_liteethphyrmiirx_converter_converter_sink_valid = __main___ethphy_liteethphyrmiirx_converter_sink_valid0;
assign __main___ethphy_liteethphyrmiirx_converter_converter_sink_first = __main___ethphy_liteethphyrmiirx_converter_sink_first;
assign __main___ethphy_liteethphyrmiirx_converter_converter_sink_last = __main___ethphy_liteethphyrmiirx_converter_sink_last;
assign __main___ethphy_liteethphyrmiirx_converter_sink_ready = __main___ethphy_liteethphyrmiirx_converter_converter_sink_ready;
assign __main___ethphy_liteethphyrmiirx_converter_converter_sink_payload_data = {__main___ethphy_liteethphyrmiirx_converter_sink_payload_data};
assign __main___ethphy_liteethphyrmiirx_converter_source_valid = __main___ethphy_liteethphyrmiirx_converter_source_source_valid;
assign __main___ethphy_liteethphyrmiirx_converter_source_first = __main___ethphy_liteethphyrmiirx_converter_source_source_first;
assign __main___ethphy_liteethphyrmiirx_converter_source_last = __main___ethphy_liteethphyrmiirx_converter_source_source_last;
assign __main___ethphy_liteethphyrmiirx_converter_source_source_ready = __main___ethphy_liteethphyrmiirx_converter_source_ready;
always @(*) begin
    __main___ethphy_liteethphyrmiirx_converter_source_payload_data <= 8'd0;
    __main___ethphy_liteethphyrmiirx_converter_source_payload_data[1:0] <= __main___ethphy_liteethphyrmiirx_converter_source_source_payload_data[1:0];
    __main___ethphy_liteethphyrmiirx_converter_source_payload_data[3:2] <= __main___ethphy_liteethphyrmiirx_converter_source_source_payload_data[3:2];
    __main___ethphy_liteethphyrmiirx_converter_source_payload_data[5:4] <= __main___ethphy_liteethphyrmiirx_converter_source_source_payload_data[5:4];
    __main___ethphy_liteethphyrmiirx_converter_source_payload_data[7:6] <= __main___ethphy_liteethphyrmiirx_converter_source_source_payload_data[7:6];
end
assign __main___ethphy_liteethphyrmiirx_converter_source_source_valid = __main___ethphy_liteethphyrmiirx_converter_converter_source_valid;
assign __main___ethphy_liteethphyrmiirx_converter_converter_source_ready = __main___ethphy_liteethphyrmiirx_converter_source_source_ready;
assign __main___ethphy_liteethphyrmiirx_converter_source_source_first = __main___ethphy_liteethphyrmiirx_converter_converter_source_first;
assign __main___ethphy_liteethphyrmiirx_converter_source_source_last = __main___ethphy_liteethphyrmiirx_converter_converter_source_last;
assign __main___ethphy_liteethphyrmiirx_converter_source_source_payload_data = __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_data;
assign __main___ethphy_liteethphyrmiirx_converter_converter_sink_ready = ((~__main___ethphy_liteethphyrmiirx_converter_converter_strobe_all) | __main___ethphy_liteethphyrmiirx_converter_converter_source_ready);
assign __main___ethphy_liteethphyrmiirx_converter_converter_source_valid = __main___ethphy_liteethphyrmiirx_converter_converter_strobe_all;
assign __main___ethphy_liteethphyrmiirx_converter_converter_load_part = (__main___ethphy_liteethphyrmiirx_converter_converter_sink_valid & __main___ethphy_liteethphyrmiirx_converter_converter_sink_ready);
always @(*) begin
    __main___ethphy_liteethphyrmiirx_converter_sink_valid1 <= 1'd0;
    __main___ethphy_liteethphyrmiirx_converter_sink_data <= 2'd0;
    __main___ethphy_liteethphyrmiirx_converter_sink_last <= 1'd0;
    builder_basesoc_liteethphyrmii_next_state <= 1'd0;
    __main___ethphy_liteethphyrmiirx_converter_reset <= 1'd0;
    builder_basesoc_liteethphyrmii_next_state <= builder_basesoc_liteethphyrmii_state;
    case (builder_basesoc_liteethphyrmii_state)
        1'd1: begin
            __main___ethphy_liteethphyrmiirx_converter_sink_valid1 <= 1'd1;
            __main___ethphy_liteethphyrmiirx_converter_sink_data <= __main___ethphy_liteethphyrmiirx_rx_data;
            if ((~(__main___ethphy_liteethphyrmiirx_crs_dv | __main___ethphy_liteethphyrmiirx_crs_dv_d))) begin
                __main___ethphy_liteethphyrmiirx_converter_sink_last <= 1'd1;
                builder_basesoc_liteethphyrmii_next_state <= 1'd0;
            end
        end
        default: begin
            if ((__main___ethphy_liteethphyrmiirx_crs_dv & (__main___ethphy_liteethphyrmiirx_rx_data != 1'd0))) begin
                __main___ethphy_liteethphyrmiirx_converter_sink_valid1 <= 1'd1;
                __main___ethphy_liteethphyrmiirx_converter_sink_data <= __main___ethphy_liteethphyrmiirx_rx_data;
                builder_basesoc_liteethphyrmii_next_state <= 1'd1;
            end else begin
                __main___ethphy_liteethphyrmiirx_converter_reset <= 1'd1;
            end
        end
    endcase
end
assign __main___basesoc_ethmac_sink_valid = __main___basesoc_ethmac_source_source_valid;
assign __main___basesoc_ethmac_source_source_ready = __main___basesoc_ethmac_sink_ready;
assign __main___basesoc_ethmac_sink_first = __main___basesoc_ethmac_source_source_first;
assign __main___basesoc_ethmac_sink_last = __main___basesoc_ethmac_source_source_last;
assign __main___basesoc_ethmac_sink_payload_data = __main___basesoc_ethmac_source_source_payload_data;
assign __main___basesoc_ethmac_sink_payload_last_be = __main___basesoc_ethmac_source_source_payload_last_be;
assign __main___basesoc_ethmac_sink_payload_error = __main___basesoc_ethmac_source_source_payload_error;
assign __main___basesoc_ethmac_sink_sink_valid = __main___basesoc_ethmac_source_valid;
assign __main___basesoc_ethmac_source_ready = __main___basesoc_ethmac_sink_sink_ready;
assign __main___basesoc_ethmac_sink_sink_first = __main___basesoc_ethmac_source_first;
assign __main___basesoc_ethmac_sink_sink_last = __main___basesoc_ethmac_source_last;
assign __main___basesoc_ethmac_sink_sink_payload_data = __main___basesoc_ethmac_source_payload_data;
assign __main___basesoc_ethmac_sink_sink_payload_last_be = __main___basesoc_ethmac_source_payload_last_be;
assign __main___basesoc_ethmac_sink_sink_payload_error = __main___basesoc_ethmac_source_payload_error;
assign __main___basesoc_ethmac_tx_cdc_cdc_sink_valid = __main___basesoc_ethmac_tx_cdc_sink_sink_valid;
assign __main___basesoc_ethmac_tx_cdc_sink_sink_ready = __main___basesoc_ethmac_tx_cdc_cdc_sink_ready;
assign __main___basesoc_ethmac_tx_cdc_cdc_sink_first = __main___basesoc_ethmac_tx_cdc_sink_sink_first;
assign __main___basesoc_ethmac_tx_cdc_cdc_sink_last = __main___basesoc_ethmac_tx_cdc_sink_sink_last;
assign __main___basesoc_ethmac_tx_cdc_cdc_sink_payload_data = __main___basesoc_ethmac_tx_cdc_sink_sink_payload_data;
assign __main___basesoc_ethmac_tx_cdc_cdc_sink_payload_last_be = __main___basesoc_ethmac_tx_cdc_sink_sink_payload_last_be;
assign __main___basesoc_ethmac_tx_cdc_cdc_sink_payload_error = __main___basesoc_ethmac_tx_cdc_sink_sink_payload_error;
assign __main___basesoc_ethmac_tx_cdc_source_source_valid = __main___basesoc_ethmac_tx_cdc_cdc_source_valid;
assign __main___basesoc_ethmac_tx_cdc_cdc_source_ready = __main___basesoc_ethmac_tx_cdc_source_source_ready;
assign __main___basesoc_ethmac_tx_cdc_source_source_first = __main___basesoc_ethmac_tx_cdc_cdc_source_first;
assign __main___basesoc_ethmac_tx_cdc_source_source_last = __main___basesoc_ethmac_tx_cdc_cdc_source_last;
assign __main___basesoc_ethmac_tx_cdc_source_source_payload_data = __main___basesoc_ethmac_tx_cdc_cdc_source_payload_data;
assign __main___basesoc_ethmac_tx_cdc_source_source_payload_last_be = __main___basesoc_ethmac_tx_cdc_cdc_source_payload_last_be;
assign __main___basesoc_ethmac_tx_cdc_source_source_payload_error = __main___basesoc_ethmac_tx_cdc_cdc_source_payload_error;
assign __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_din = {__main___basesoc_ethmac_tx_cdc_cdc_fifo_in_last, __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_first, __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_error, __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_last_be, __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_data};
assign {__main___basesoc_ethmac_tx_cdc_cdc_fifo_out_last, __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_first, __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_error, __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_last_be, __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_data} = __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_dout;
assign __main___basesoc_ethmac_tx_cdc_cdc_sink_ready = __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_writable;
assign __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_we = __main___basesoc_ethmac_tx_cdc_cdc_sink_valid;
assign __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_first = __main___basesoc_ethmac_tx_cdc_cdc_sink_first;
assign __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_last = __main___basesoc_ethmac_tx_cdc_cdc_sink_last;
assign __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_data = __main___basesoc_ethmac_tx_cdc_cdc_sink_payload_data;
assign __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_last_be = __main___basesoc_ethmac_tx_cdc_cdc_sink_payload_last_be;
assign __main___basesoc_ethmac_tx_cdc_cdc_fifo_in_payload_error = __main___basesoc_ethmac_tx_cdc_cdc_sink_payload_error;
assign __main___basesoc_ethmac_tx_cdc_cdc_source_valid = __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_readable;
assign __main___basesoc_ethmac_tx_cdc_cdc_source_first = __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_first;
assign __main___basesoc_ethmac_tx_cdc_cdc_source_last = __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_last;
assign __main___basesoc_ethmac_tx_cdc_cdc_source_payload_data = __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_data;
assign __main___basesoc_ethmac_tx_cdc_cdc_source_payload_last_be = __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_last_be;
assign __main___basesoc_ethmac_tx_cdc_cdc_source_payload_error = __main___basesoc_ethmac_tx_cdc_cdc_fifo_out_payload_error;
assign __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_re = __main___basesoc_ethmac_tx_cdc_cdc_source_ready;
assign __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_ce = (__main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_writable & __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_we);
assign __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_ce = (__main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_readable & __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_re);
assign __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_writable = (((__main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q[5] == __main___basesoc_ethmac_tx_cdc_cdc_consume_wdomain[5]) | (__main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q[4] == __main___basesoc_ethmac_tx_cdc_cdc_consume_wdomain[4])) | (__main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q[3:0] != __main___basesoc_ethmac_tx_cdc_cdc_consume_wdomain[3:0]));
assign __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_readable = (__main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q != __main___basesoc_ethmac_tx_cdc_cdc_produce_rdomain);
assign __main___basesoc_ethmac_tx_cdc_cdc_wrport_adr = __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary[4:0];
assign __main___basesoc_ethmac_tx_cdc_cdc_wrport_dat_w = __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_din;
assign __main___basesoc_ethmac_tx_cdc_cdc_wrport_we = __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_ce;
assign __main___basesoc_ethmac_tx_cdc_cdc_rdport_adr = __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary[4:0];
assign __main___basesoc_ethmac_tx_cdc_cdc_asyncfifo_dout = __main___basesoc_ethmac_tx_cdc_cdc_rdport_dat_r;
always @(*) begin
    __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary <= 6'd0;
    if (__main___basesoc_ethmac_tx_cdc_cdc_graycounter0_ce) begin
        __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary <= (__main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary + 1'd1);
    end else begin
        __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary <= __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary;
    end
end
assign __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next = (__main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary ^ __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary[5:1]);
always @(*) begin
    __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary <= 6'd0;
    if (__main___basesoc_ethmac_tx_cdc_cdc_graycounter1_ce) begin
        __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary <= (__main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_binary + 1'd1);
    end else begin
        __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary <= __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_binary;
    end
end
assign __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next = (__main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary ^ __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary[5:1]);
assign __main___basesoc_ethmac_tx_converter_converter_sink_valid = __main___basesoc_ethmac_tx_converter_sink_valid;
assign __main___basesoc_ethmac_tx_converter_converter_sink_first = __main___basesoc_ethmac_tx_converter_sink_first;
assign __main___basesoc_ethmac_tx_converter_converter_sink_last = __main___basesoc_ethmac_tx_converter_sink_last;
assign __main___basesoc_ethmac_tx_converter_sink_ready = __main___basesoc_ethmac_tx_converter_converter_sink_ready;
always @(*) begin
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data <= 40'd0;
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[7:0] <= __main___basesoc_ethmac_tx_converter_sink_payload_data[7:0];
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[8] <= __main___basesoc_ethmac_tx_converter_sink_payload_last_be[0];
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[9] <= __main___basesoc_ethmac_tx_converter_sink_payload_error[0];
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[17:10] <= __main___basesoc_ethmac_tx_converter_sink_payload_data[15:8];
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[18] <= __main___basesoc_ethmac_tx_converter_sink_payload_last_be[1];
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[19] <= __main___basesoc_ethmac_tx_converter_sink_payload_error[1];
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[27:20] <= __main___basesoc_ethmac_tx_converter_sink_payload_data[23:16];
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[28] <= __main___basesoc_ethmac_tx_converter_sink_payload_last_be[2];
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[29] <= __main___basesoc_ethmac_tx_converter_sink_payload_error[2];
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[37:30] <= __main___basesoc_ethmac_tx_converter_sink_payload_data[31:24];
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[38] <= __main___basesoc_ethmac_tx_converter_sink_payload_last_be[3];
    __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[39] <= __main___basesoc_ethmac_tx_converter_sink_payload_error[3];
end
assign __main___basesoc_ethmac_tx_converter_source_valid = __main___basesoc_ethmac_tx_converter_source_source_valid;
assign __main___basesoc_ethmac_tx_converter_source_first = __main___basesoc_ethmac_tx_converter_source_source_first;
assign __main___basesoc_ethmac_tx_converter_source_last = __main___basesoc_ethmac_tx_converter_source_source_last;
assign __main___basesoc_ethmac_tx_converter_source_source_ready = __main___basesoc_ethmac_tx_converter_source_ready;
assign {__main___basesoc_ethmac_tx_converter_source_payload_error, __main___basesoc_ethmac_tx_converter_source_payload_last_be, __main___basesoc_ethmac_tx_converter_source_payload_data} = __main___basesoc_ethmac_tx_converter_source_source_payload_data;
assign __main___basesoc_ethmac_tx_converter_source_source_valid = __main___basesoc_ethmac_tx_converter_converter_source_valid;
assign __main___basesoc_ethmac_tx_converter_converter_source_ready = __main___basesoc_ethmac_tx_converter_source_source_ready;
assign __main___basesoc_ethmac_tx_converter_source_source_first = __main___basesoc_ethmac_tx_converter_converter_source_first;
assign __main___basesoc_ethmac_tx_converter_source_source_last = __main___basesoc_ethmac_tx_converter_converter_source_last;
assign __main___basesoc_ethmac_tx_converter_source_source_payload_data = __main___basesoc_ethmac_tx_converter_converter_source_payload_data;
assign __main___basesoc_ethmac_tx_converter_converter_first = (__main___basesoc_ethmac_tx_converter_converter_mux == 1'd0);
assign __main___basesoc_ethmac_tx_converter_converter_last = (__main___basesoc_ethmac_tx_converter_converter_mux == 2'd3);
assign __main___basesoc_ethmac_tx_converter_converter_source_valid = __main___basesoc_ethmac_tx_converter_converter_sink_valid;
assign __main___basesoc_ethmac_tx_converter_converter_source_first = (__main___basesoc_ethmac_tx_converter_converter_sink_first & __main___basesoc_ethmac_tx_converter_converter_first);
assign __main___basesoc_ethmac_tx_converter_converter_source_last = (__main___basesoc_ethmac_tx_converter_converter_sink_last & __main___basesoc_ethmac_tx_converter_converter_last);
assign __main___basesoc_ethmac_tx_converter_converter_sink_ready = (__main___basesoc_ethmac_tx_converter_converter_last & __main___basesoc_ethmac_tx_converter_converter_source_ready);
always @(*) begin
    __main___basesoc_ethmac_tx_converter_converter_source_payload_data <= 10'd0;
    case (__main___basesoc_ethmac_tx_converter_converter_mux)
        1'd0: begin
            __main___basesoc_ethmac_tx_converter_converter_source_payload_data <= __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[9:0];
        end
        1'd1: begin
            __main___basesoc_ethmac_tx_converter_converter_source_payload_data <= __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[19:10];
        end
        2'd2: begin
            __main___basesoc_ethmac_tx_converter_converter_source_payload_data <= __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[29:20];
        end
        default: begin
            __main___basesoc_ethmac_tx_converter_converter_source_payload_data <= __main___basesoc_ethmac_tx_converter_converter_sink_payload_data[39:30];
        end
    endcase
end
assign __main___basesoc_ethmac_tx_converter_converter_source_payload_valid_token_count = __main___basesoc_ethmac_tx_converter_converter_last;
always @(*) begin
    builder_basesoc_txdatapath_liteethmactxlastbe_next_state <= 1'd0;
    __main___basesoc_ethmac_tx_last_be_sink_ready <= 1'd0;
    __main___basesoc_ethmac_tx_last_be_source_valid <= 1'd0;
    __main___basesoc_ethmac_tx_last_be_source_first <= 1'd0;
    __main___basesoc_ethmac_tx_last_be_source_last <= 1'd0;
    __main___basesoc_ethmac_tx_last_be_source_payload_data <= 8'd0;
    __main___basesoc_ethmac_tx_last_be_source_payload_last_be <= 1'd0;
    __main___basesoc_ethmac_tx_last_be_source_payload_error <= 1'd0;
    builder_basesoc_txdatapath_liteethmactxlastbe_next_state <= builder_basesoc_txdatapath_liteethmactxlastbe_state;
    case (builder_basesoc_txdatapath_liteethmactxlastbe_state)
        1'd1: begin
            __main___basesoc_ethmac_tx_last_be_sink_ready <= 1'd1;
            if ((__main___basesoc_ethmac_tx_last_be_sink_valid & __main___basesoc_ethmac_tx_last_be_sink_last)) begin
                builder_basesoc_txdatapath_liteethmactxlastbe_next_state <= 1'd0;
            end
        end
        default: begin
            __main___basesoc_ethmac_tx_last_be_source_valid <= __main___basesoc_ethmac_tx_last_be_sink_valid;
            __main___basesoc_ethmac_tx_last_be_sink_ready <= __main___basesoc_ethmac_tx_last_be_source_ready;
            __main___basesoc_ethmac_tx_last_be_source_first <= __main___basesoc_ethmac_tx_last_be_sink_first;
            __main___basesoc_ethmac_tx_last_be_source_last <= __main___basesoc_ethmac_tx_last_be_sink_last;
            __main___basesoc_ethmac_tx_last_be_source_payload_data <= __main___basesoc_ethmac_tx_last_be_sink_payload_data;
            __main___basesoc_ethmac_tx_last_be_source_payload_last_be <= __main___basesoc_ethmac_tx_last_be_sink_payload_last_be;
            __main___basesoc_ethmac_tx_last_be_source_payload_error <= __main___basesoc_ethmac_tx_last_be_sink_payload_error;
            __main___basesoc_ethmac_tx_last_be_source_last <= (__main___basesoc_ethmac_tx_last_be_sink_payload_last_be != 1'd0);
            if ((__main___basesoc_ethmac_tx_last_be_sink_valid & __main___basesoc_ethmac_tx_last_be_sink_ready)) begin
                if ((__main___basesoc_ethmac_tx_last_be_source_last & (~__main___basesoc_ethmac_tx_last_be_sink_last))) begin
                    builder_basesoc_txdatapath_liteethmactxlastbe_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign __main___basesoc_ethmac_tx_padding_counter_done = (__main___basesoc_ethmac_tx_padding_counter >= 6'd59);
always @(*) begin
    __main___basesoc_ethmac_tx_padding_source_payload_last_be <= 1'd0;
    __main___basesoc_ethmac_tx_padding_source_payload_error <= 1'd0;
    __main___basesoc_ethmac_tx_padding_sink_ready <= 1'd0;
    __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd0;
    builder_basesoc_txdatapath_liteethmacpaddinginserter_next_state <= 1'd0;
    __main___basesoc_ethmac_tx_padding_source_valid <= 1'd0;
    __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= 16'd0;
    __main___basesoc_ethmac_tx_padding_source_first <= 1'd0;
    __main___basesoc_ethmac_tx_padding_source_last <= 1'd0;
    __main___basesoc_ethmac_tx_padding_source_payload_data <= 8'd0;
    builder_basesoc_txdatapath_liteethmacpaddinginserter_next_state <= builder_basesoc_txdatapath_liteethmacpaddinginserter_state;
    case (builder_basesoc_txdatapath_liteethmacpaddinginserter_state)
        1'd1: begin
            __main___basesoc_ethmac_tx_padding_source_valid <= 1'd1;
            if (__main___basesoc_ethmac_tx_padding_counter_done) begin
                __main___basesoc_ethmac_tx_padding_source_payload_last_be <= 1'd1;
                __main___basesoc_ethmac_tx_padding_source_last <= 1'd1;
            end
            __main___basesoc_ethmac_tx_padding_source_payload_data <= 1'd0;
            if ((__main___basesoc_ethmac_tx_padding_source_valid & __main___basesoc_ethmac_tx_padding_source_ready)) begin
                __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= (__main___basesoc_ethmac_tx_padding_counter + 1'd1);
                __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
                if (__main___basesoc_ethmac_tx_padding_counter_done) begin
                    __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= 1'd0;
                    __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
                    builder_basesoc_txdatapath_liteethmacpaddinginserter_next_state <= 1'd0;
                end
            end
        end
        default: begin
            __main___basesoc_ethmac_tx_padding_source_valid <= __main___basesoc_ethmac_tx_padding_sink_valid;
            __main___basesoc_ethmac_tx_padding_sink_ready <= __main___basesoc_ethmac_tx_padding_source_ready;
            __main___basesoc_ethmac_tx_padding_source_first <= __main___basesoc_ethmac_tx_padding_sink_first;
            __main___basesoc_ethmac_tx_padding_source_last <= __main___basesoc_ethmac_tx_padding_sink_last;
            __main___basesoc_ethmac_tx_padding_source_payload_data <= __main___basesoc_ethmac_tx_padding_sink_payload_data;
            __main___basesoc_ethmac_tx_padding_source_payload_last_be <= __main___basesoc_ethmac_tx_padding_sink_payload_last_be;
            __main___basesoc_ethmac_tx_padding_source_payload_error <= __main___basesoc_ethmac_tx_padding_sink_payload_error;
            if ((__main___basesoc_ethmac_tx_padding_source_valid & __main___basesoc_ethmac_tx_padding_source_ready)) begin
                __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= (__main___basesoc_ethmac_tx_padding_counter + 1'd1);
                __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
                if (__main___basesoc_ethmac_tx_padding_sink_last) begin
                    if ((~__main___basesoc_ethmac_tx_padding_counter_done)) begin
                        __main___basesoc_ethmac_tx_padding_source_last <= 1'd0;
                        __main___basesoc_ethmac_tx_padding_source_payload_last_be <= 1'd0;
                        builder_basesoc_txdatapath_liteethmacpaddinginserter_next_state <= 1'd1;
                    end else begin
                        if (((__main___basesoc_ethmac_tx_padding_counter == 6'd59) & (__main___basesoc_ethmac_tx_padding_sink_payload_last_be < 1'd1))) begin
                            __main___basesoc_ethmac_tx_padding_source_payload_last_be <= 1'd1;
                        end else begin
                            __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value <= 1'd0;
                            __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce <= 1'd1;
                        end
                    end
                end
            end
        end
    endcase
end
assign __main___basesoc_ethmac_tx_crc_cnt_done = (__main___basesoc_ethmac_tx_crc_cnt == 1'd0);
assign __main___basesoc_ethmac_tx_crc_sink_valid = __main___basesoc_ethmac_tx_crc_source_source_valid;
assign __main___basesoc_ethmac_tx_crc_source_source_ready = __main___basesoc_ethmac_tx_crc_sink_ready;
assign __main___basesoc_ethmac_tx_crc_sink_first = __main___basesoc_ethmac_tx_crc_source_source_first;
assign __main___basesoc_ethmac_tx_crc_sink_last = __main___basesoc_ethmac_tx_crc_source_source_last;
assign __main___basesoc_ethmac_tx_crc_sink_payload_data = __main___basesoc_ethmac_tx_crc_source_source_payload_data;
assign __main___basesoc_ethmac_tx_crc_sink_payload_last_be = __main___basesoc_ethmac_tx_crc_source_source_payload_last_be;
assign __main___basesoc_ethmac_tx_crc_sink_payload_error = __main___basesoc_ethmac_tx_crc_source_source_payload_error;
always @(*) begin
    __main___basesoc_ethmac_tx_crc_last_be1 <= 1'd0;
    if ((__main___basesoc_ethmac_tx_crc_last_be0 != 1'd0)) begin
        __main___basesoc_ethmac_tx_crc_last_be1 <= __main___basesoc_ethmac_tx_crc_last_be0;
    end else begin
        __main___basesoc_ethmac_tx_crc_last_be1 <= 1'd1;
    end
end
assign __main___basesoc_ethmac_tx_crc_data1 = __main___basesoc_ethmac_tx_crc_data0[7:0];
assign __main___basesoc_ethmac_tx_crc_last = __main___basesoc_ethmac_tx_crc_reg;
always @(*) begin
    __main___basesoc_ethmac_tx_crc_value <= 32'd0;
    __main___basesoc_ethmac_tx_crc_error <= 1'd0;
    if (__main___basesoc_ethmac_tx_crc_last_be1) begin
        __main___basesoc_ethmac_tx_crc_value <= {builder_t_slice_proxy31[0], builder_t_slice_proxy30[1], builder_t_slice_proxy29[2], builder_t_slice_proxy28[3], builder_t_slice_proxy27[4], builder_t_slice_proxy26[5], builder_t_slice_proxy25[6], builder_t_slice_proxy24[7], builder_t_slice_proxy23[8], builder_t_slice_proxy22[9], builder_t_slice_proxy21[10], builder_t_slice_proxy20[11], builder_t_slice_proxy19[12], builder_t_slice_proxy18[13], builder_t_slice_proxy17[14], builder_t_slice_proxy16[15], builder_t_slice_proxy15[16], builder_t_slice_proxy14[17], builder_t_slice_proxy13[18], builder_t_slice_proxy12[19], builder_t_slice_proxy11[20], builder_t_slice_proxy10[21], builder_t_slice_proxy9[22], builder_t_slice_proxy8[23], builder_t_slice_proxy7[24], builder_t_slice_proxy6[25], builder_t_slice_proxy5[26], builder_t_slice_proxy4[27], builder_t_slice_proxy3[28], builder_t_slice_proxy2[29], builder_t_slice_proxy1[30], builder_t_slice_proxy0[31]};
        __main___basesoc_ethmac_tx_crc_error <= (__main___basesoc_ethmac_tx_crc_next != 32'd3338984827);
    end
end
always @(*) begin
    __main___basesoc_ethmac_tx_crc_next <= 32'd0;
    __main___basesoc_ethmac_tx_crc_next[0] <= (((__main___basesoc_ethmac_tx_crc_last[24] ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[1] <= (((((((__main___basesoc_ethmac_tx_crc_last[25] ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_data1[6]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[2] <= (((((((((__main___basesoc_ethmac_tx_crc_last[26] ^ __main___basesoc_ethmac_tx_crc_data1[5]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_data1[6]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[3] <= (((((((__main___basesoc_ethmac_tx_crc_last[27] ^ __main___basesoc_ethmac_tx_crc_data1[4]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_data1[6]);
    __main___basesoc_ethmac_tx_crc_next[4] <= (((((((((__main___basesoc_ethmac_tx_crc_last[28] ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[5] <= (((((((((((((__main___basesoc_ethmac_tx_crc_last[29] ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_data1[6]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[6] <= (((((((((((__main___basesoc_ethmac_tx_crc_last[30] ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_data1[6]);
    __main___basesoc_ethmac_tx_crc_next[7] <= (((((((((__main___basesoc_ethmac_tx_crc_last[31] ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[8] <= ((((((((__main___basesoc_ethmac_tx_crc_last[0] ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_data1[6]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[9] <= ((((((((__main___basesoc_ethmac_tx_crc_last[1] ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_data1[6]);
    __main___basesoc_ethmac_tx_crc_next[10] <= ((((((((__main___basesoc_ethmac_tx_crc_last[2] ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[11] <= ((((((((__main___basesoc_ethmac_tx_crc_last[3] ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_data1[6]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[12] <= ((((((((((((__main___basesoc_ethmac_tx_crc_last[4] ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_data1[6]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[13] <= ((((((((((((__main___basesoc_ethmac_tx_crc_last[5] ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_data1[6]);
    __main___basesoc_ethmac_tx_crc_next[14] <= ((((((((((__main___basesoc_ethmac_tx_crc_last[6] ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]);
    __main___basesoc_ethmac_tx_crc_next[15] <= ((((((((__main___basesoc_ethmac_tx_crc_last[7] ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]);
    __main___basesoc_ethmac_tx_crc_next[16] <= ((((((__main___basesoc_ethmac_tx_crc_last[8] ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[17] <= ((((((__main___basesoc_ethmac_tx_crc_last[9] ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_data1[6]);
    __main___basesoc_ethmac_tx_crc_next[18] <= ((((((__main___basesoc_ethmac_tx_crc_last[10] ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]);
    __main___basesoc_ethmac_tx_crc_next[19] <= ((((__main___basesoc_ethmac_tx_crc_last[11] ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]);
    __main___basesoc_ethmac_tx_crc_next[20] <= ((__main___basesoc_ethmac_tx_crc_last[12] ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]);
    __main___basesoc_ethmac_tx_crc_next[21] <= ((__main___basesoc_ethmac_tx_crc_last[13] ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]);
    __main___basesoc_ethmac_tx_crc_next[22] <= ((__main___basesoc_ethmac_tx_crc_last[14] ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[23] <= ((((((__main___basesoc_ethmac_tx_crc_last[15] ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_data1[6]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[24] <= ((((((__main___basesoc_ethmac_tx_crc_last[16] ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_data1[6]);
    __main___basesoc_ethmac_tx_crc_next[25] <= ((((__main___basesoc_ethmac_tx_crc_last[17] ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]);
    __main___basesoc_ethmac_tx_crc_next[26] <= ((((((((__main___basesoc_ethmac_tx_crc_last[18] ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]) ^ __main___basesoc_ethmac_tx_crc_last[24]) ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_data1[7]);
    __main___basesoc_ethmac_tx_crc_next[27] <= ((((((((__main___basesoc_ethmac_tx_crc_last[19] ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]) ^ __main___basesoc_ethmac_tx_crc_last[25]) ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_data1[6]);
    __main___basesoc_ethmac_tx_crc_next[28] <= ((((((__main___basesoc_ethmac_tx_crc_last[20] ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]) ^ __main___basesoc_ethmac_tx_crc_last[26]) ^ __main___basesoc_ethmac_tx_crc_data1[5]);
    __main___basesoc_ethmac_tx_crc_next[29] <= ((((((__main___basesoc_ethmac_tx_crc_last[21] ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_last[30]) ^ __main___basesoc_ethmac_tx_crc_data1[1]) ^ __main___basesoc_ethmac_tx_crc_last[27]) ^ __main___basesoc_ethmac_tx_crc_data1[4]);
    __main___basesoc_ethmac_tx_crc_next[30] <= ((((__main___basesoc_ethmac_tx_crc_last[22] ^ __main___basesoc_ethmac_tx_crc_last[31]) ^ __main___basesoc_ethmac_tx_crc_data1[0]) ^ __main___basesoc_ethmac_tx_crc_last[28]) ^ __main___basesoc_ethmac_tx_crc_data1[3]);
    __main___basesoc_ethmac_tx_crc_next[31] <= ((__main___basesoc_ethmac_tx_crc_last[23] ^ __main___basesoc_ethmac_tx_crc_last[29]) ^ __main___basesoc_ethmac_tx_crc_data1[2]);
end
always @(*) begin
    __main___basesoc_ethmac_tx_crc_is_ongoing0 <= 1'd0;
    __main___basesoc_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0 <= 32'd0;
    __main___basesoc_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0 <= 1'd0;
    __main___basesoc_ethmac_tx_crc_is_ongoing1 <= 1'd0;
    __main___basesoc_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 <= 1'd0;
    __main___basesoc_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 <= 1'd0;
    __main___basesoc_ethmac_tx_crc_source_valid <= 1'd0;
    __main___basesoc_ethmac_tx_crc_ce <= 1'd0;
    __main___basesoc_ethmac_tx_crc_reset <= 1'd0;
    __main___basesoc_ethmac_tx_crc_source_first <= 1'd0;
    __main___basesoc_ethmac_tx_crc_source_last <= 1'd0;
    __main___basesoc_ethmac_tx_crc_source_payload_data <= 8'd0;
    __main___basesoc_ethmac_tx_crc_source_payload_last_be <= 1'd0;
    __main___basesoc_ethmac_tx_crc_source_payload_error <= 1'd0;
    __main___basesoc_ethmac_tx_crc_data0 <= 8'd0;
    __main___basesoc_ethmac_tx_crc_last_be0 <= 1'd0;
    builder_basesoc_txdatapath_bufferizeendpoints_next_state <= 2'd0;
    __main___basesoc_ethmac_tx_crc_sink_ready <= 1'd0;
    builder_basesoc_txdatapath_bufferizeendpoints_next_state <= builder_basesoc_txdatapath_bufferizeendpoints_state;
    case (builder_basesoc_txdatapath_bufferizeendpoints_state)
        1'd1: begin
            __main___basesoc_ethmac_tx_crc_ce <= (__main___basesoc_ethmac_tx_crc_sink_valid & __main___basesoc_ethmac_tx_crc_source_ready);
            __main___basesoc_ethmac_tx_crc_data0 <= __main___basesoc_ethmac_tx_crc_sink_payload_data;
            __main___basesoc_ethmac_tx_crc_last_be0 <= __main___basesoc_ethmac_tx_crc_sink_payload_last_be;
            __main___basesoc_ethmac_tx_crc_source_valid <= __main___basesoc_ethmac_tx_crc_sink_valid;
            __main___basesoc_ethmac_tx_crc_sink_ready <= __main___basesoc_ethmac_tx_crc_source_ready;
            __main___basesoc_ethmac_tx_crc_source_first <= __main___basesoc_ethmac_tx_crc_sink_first;
            __main___basesoc_ethmac_tx_crc_source_last <= __main___basesoc_ethmac_tx_crc_sink_last;
            __main___basesoc_ethmac_tx_crc_source_payload_data <= __main___basesoc_ethmac_tx_crc_sink_payload_data;
            __main___basesoc_ethmac_tx_crc_source_payload_last_be <= __main___basesoc_ethmac_tx_crc_sink_payload_last_be;
            __main___basesoc_ethmac_tx_crc_source_payload_error <= __main___basesoc_ethmac_tx_crc_sink_payload_error;
            __main___basesoc_ethmac_tx_crc_source_last <= 1'd0;
            __main___basesoc_ethmac_tx_crc_source_payload_last_be <= 1'd0;
            if (__main___basesoc_ethmac_tx_crc_sink_last) begin
                if (__main___basesoc_ethmac_tx_crc_sink_payload_last_be) begin
                    __main___basesoc_ethmac_tx_crc_source_payload_data <= builder_cases_slice_proxy[7:0];
                end
                if ((1'd0 & (__main___basesoc_ethmac_tx_crc_sink_payload_last_be <= 4'd15))) begin
                    __main___basesoc_ethmac_tx_crc_source_last <= 1'd1;
                    __main___basesoc_ethmac_tx_crc_source_payload_last_be <= (__main___basesoc_ethmac_tx_crc_sink_payload_last_be <<< -3'd3);
                end
            end else begin
                __main___basesoc_ethmac_tx_crc_ce <= (__main___basesoc_ethmac_tx_crc_sink_valid & __main___basesoc_ethmac_tx_crc_source_ready);
            end
            if (((__main___basesoc_ethmac_tx_crc_sink_valid & __main___basesoc_ethmac_tx_crc_sink_last) & __main___basesoc_ethmac_tx_crc_source_ready)) begin
                if ((1'd0 & (__main___basesoc_ethmac_tx_crc_sink_payload_last_be <= 4'd15))) begin
                    builder_basesoc_txdatapath_bufferizeendpoints_next_state <= 1'd0;
                end else begin
                    __main___basesoc_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0 <= __main___basesoc_ethmac_tx_crc_value;
                    __main___basesoc_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0 <= 1'd1;
                    if (1'd0) begin
                        __main___basesoc_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 <= (__main___basesoc_ethmac_tx_crc_sink_payload_last_be >>> 3'd4);
                        __main___basesoc_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 <= 1'd1;
                    end else begin
                        __main___basesoc_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1 <= __main___basesoc_ethmac_tx_crc_sink_payload_last_be;
                        __main___basesoc_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1 <= 1'd1;
                    end
                    builder_basesoc_txdatapath_bufferizeendpoints_next_state <= 2'd2;
                end
            end
        end
        2'd2: begin
            __main___basesoc_ethmac_tx_crc_source_valid <= 1'd1;
            case (__main___basesoc_ethmac_tx_crc_cnt)
                1'd0: begin
                    __main___basesoc_ethmac_tx_crc_source_payload_data <= __main___basesoc_ethmac_tx_crc_crc_packet[31:24];
                end
                1'd1: begin
                    __main___basesoc_ethmac_tx_crc_source_payload_data <= __main___basesoc_ethmac_tx_crc_crc_packet[23:16];
                end
                2'd2: begin
                    __main___basesoc_ethmac_tx_crc_source_payload_data <= __main___basesoc_ethmac_tx_crc_crc_packet[15:8];
                end
                default: begin
                    __main___basesoc_ethmac_tx_crc_source_payload_data <= __main___basesoc_ethmac_tx_crc_crc_packet[7:0];
                end
            endcase
            if (__main___basesoc_ethmac_tx_crc_cnt_done) begin
                __main___basesoc_ethmac_tx_crc_source_last <= 1'd1;
                if (__main___basesoc_ethmac_tx_crc_source_ready) begin
                    builder_basesoc_txdatapath_bufferizeendpoints_next_state <= 1'd0;
                end
            end
            __main___basesoc_ethmac_tx_crc_is_ongoing1 <= 1'd1;
        end
        default: begin
            __main___basesoc_ethmac_tx_crc_reset <= 1'd1;
            __main___basesoc_ethmac_tx_crc_sink_ready <= 1'd1;
            if (__main___basesoc_ethmac_tx_crc_sink_valid) begin
                __main___basesoc_ethmac_tx_crc_sink_ready <= 1'd0;
                builder_basesoc_txdatapath_bufferizeendpoints_next_state <= 1'd1;
            end
            __main___basesoc_ethmac_tx_crc_is_ongoing0 <= 1'd1;
        end
    endcase
end
assign __main___basesoc_ethmac_tx_crc_pipe_valid_sink_ready = ((~__main___basesoc_ethmac_tx_crc_pipe_valid_source_valid) | __main___basesoc_ethmac_tx_crc_pipe_valid_source_ready);
assign __main___basesoc_ethmac_tx_crc_pipe_valid_sink_valid = __main___basesoc_ethmac_tx_crc_sink_sink_valid;
assign __main___basesoc_ethmac_tx_crc_sink_sink_ready = __main___basesoc_ethmac_tx_crc_pipe_valid_sink_ready;
assign __main___basesoc_ethmac_tx_crc_pipe_valid_sink_first = __main___basesoc_ethmac_tx_crc_sink_sink_first;
assign __main___basesoc_ethmac_tx_crc_pipe_valid_sink_last = __main___basesoc_ethmac_tx_crc_sink_sink_last;
assign __main___basesoc_ethmac_tx_crc_pipe_valid_sink_payload_data = __main___basesoc_ethmac_tx_crc_sink_sink_payload_data;
assign __main___basesoc_ethmac_tx_crc_pipe_valid_sink_payload_last_be = __main___basesoc_ethmac_tx_crc_sink_sink_payload_last_be;
assign __main___basesoc_ethmac_tx_crc_pipe_valid_sink_payload_error = __main___basesoc_ethmac_tx_crc_sink_sink_payload_error;
assign __main___basesoc_ethmac_tx_crc_source_source_valid = __main___basesoc_ethmac_tx_crc_pipe_valid_source_valid;
assign __main___basesoc_ethmac_tx_crc_pipe_valid_source_ready = __main___basesoc_ethmac_tx_crc_source_source_ready;
assign __main___basesoc_ethmac_tx_crc_source_source_first = __main___basesoc_ethmac_tx_crc_pipe_valid_source_first;
assign __main___basesoc_ethmac_tx_crc_source_source_last = __main___basesoc_ethmac_tx_crc_pipe_valid_source_last;
assign __main___basesoc_ethmac_tx_crc_source_source_payload_data = __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_data;
assign __main___basesoc_ethmac_tx_crc_source_source_payload_last_be = __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_last_be;
assign __main___basesoc_ethmac_tx_crc_source_source_payload_error = __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_error;
assign __main___basesoc_ethmac_tx_preamble_source_payload_last_be = __main___basesoc_ethmac_tx_preamble_sink_payload_last_be;
always @(*) begin
    __main___basesoc_ethmac_tx_preamble_source_payload_error <= 1'd0;
    __main___basesoc_ethmac_tx_preamble_source_last <= 1'd0;
    __main___basesoc_ethmac_tx_preamble_sink_ready <= 1'd0;
    __main___basesoc_ethmac_tx_preamble_source_payload_data <= 8'd0;
    __main___basesoc_ethmac_tx_preamble_source_valid <= 1'd0;
    __main___basesoc_ethmac_tx_preamble_source_first <= 1'd0;
    builder_basesoc_txdatapath_liteethmacpreambleinserter_next_state <= 2'd0;
    __main___basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value <= 3'd0;
    __main___basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce <= 1'd0;
    __main___basesoc_ethmac_tx_preamble_source_payload_data <= __main___basesoc_ethmac_tx_preamble_sink_payload_data;
    builder_basesoc_txdatapath_liteethmacpreambleinserter_next_state <= builder_basesoc_txdatapath_liteethmacpreambleinserter_state;
    case (builder_basesoc_txdatapath_liteethmacpreambleinserter_state)
        1'd1: begin
            __main___basesoc_ethmac_tx_preamble_source_valid <= 1'd1;
            case (__main___basesoc_ethmac_tx_preamble_count)
                1'd0: begin
                    __main___basesoc_ethmac_tx_preamble_source_payload_data <= __main___basesoc_ethmac_tx_preamble_preamble[7:0];
                end
                1'd1: begin
                    __main___basesoc_ethmac_tx_preamble_source_payload_data <= __main___basesoc_ethmac_tx_preamble_preamble[15:8];
                end
                2'd2: begin
                    __main___basesoc_ethmac_tx_preamble_source_payload_data <= __main___basesoc_ethmac_tx_preamble_preamble[23:16];
                end
                2'd3: begin
                    __main___basesoc_ethmac_tx_preamble_source_payload_data <= __main___basesoc_ethmac_tx_preamble_preamble[31:24];
                end
                3'd4: begin
                    __main___basesoc_ethmac_tx_preamble_source_payload_data <= __main___basesoc_ethmac_tx_preamble_preamble[39:32];
                end
                3'd5: begin
                    __main___basesoc_ethmac_tx_preamble_source_payload_data <= __main___basesoc_ethmac_tx_preamble_preamble[47:40];
                end
                3'd6: begin
                    __main___basesoc_ethmac_tx_preamble_source_payload_data <= __main___basesoc_ethmac_tx_preamble_preamble[55:48];
                end
                default: begin
                    __main___basesoc_ethmac_tx_preamble_source_payload_data <= __main___basesoc_ethmac_tx_preamble_preamble[63:56];
                end
            endcase
            if (__main___basesoc_ethmac_tx_preamble_source_ready) begin
                if ((__main___basesoc_ethmac_tx_preamble_count == 3'd7)) begin
                    builder_basesoc_txdatapath_liteethmacpreambleinserter_next_state <= 2'd2;
                end else begin
                    __main___basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value <= (__main___basesoc_ethmac_tx_preamble_count + 1'd1);
                    __main___basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce <= 1'd1;
                end
            end
        end
        2'd2: begin
            __main___basesoc_ethmac_tx_preamble_source_valid <= __main___basesoc_ethmac_tx_preamble_sink_valid;
            __main___basesoc_ethmac_tx_preamble_sink_ready <= __main___basesoc_ethmac_tx_preamble_source_ready;
            __main___basesoc_ethmac_tx_preamble_source_first <= __main___basesoc_ethmac_tx_preamble_sink_first;
            __main___basesoc_ethmac_tx_preamble_source_last <= __main___basesoc_ethmac_tx_preamble_sink_last;
            __main___basesoc_ethmac_tx_preamble_source_payload_error <= __main___basesoc_ethmac_tx_preamble_sink_payload_error;
            if (((__main___basesoc_ethmac_tx_preamble_sink_valid & __main___basesoc_ethmac_tx_preamble_sink_last) & __main___basesoc_ethmac_tx_preamble_source_ready)) begin
                builder_basesoc_txdatapath_liteethmacpreambleinserter_next_state <= 1'd0;
            end
        end
        default: begin
            __main___basesoc_ethmac_tx_preamble_sink_ready <= 1'd1;
            __main___basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value <= 1'd0;
            __main___basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce <= 1'd1;
            if (__main___basesoc_ethmac_tx_preamble_sink_valid) begin
                __main___basesoc_ethmac_tx_preamble_sink_ready <= 1'd0;
                builder_basesoc_txdatapath_liteethmacpreambleinserter_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    __main___basesoc_ethmac_tx_gap_sink_ready <= 1'd0;
    builder_basesoc_txdatapath_liteethmacgap_next_state <= 1'd0;
    __main___basesoc_ethmac_tx_gap_source_valid <= 1'd0;
    __main___basesoc_ethmac_tx_gap_source_first <= 1'd0;
    __main___basesoc_ethmac_tx_gap_source_last <= 1'd0;
    __main___basesoc_ethmac_tx_gap_source_payload_data <= 8'd0;
    __main___basesoc_ethmac_tx_gap_source_payload_last_be <= 1'd0;
    __main___basesoc_ethmac_tx_gap_source_payload_error <= 1'd0;
    __main___basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value <= 4'd0;
    __main___basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce <= 1'd0;
    builder_basesoc_txdatapath_liteethmacgap_next_state <= builder_basesoc_txdatapath_liteethmacgap_state;
    case (builder_basesoc_txdatapath_liteethmacgap_state)
        1'd1: begin
            __main___basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value <= (__main___basesoc_ethmac_tx_gap_counter + 1'd1);
            __main___basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce <= 1'd1;
            if ((__main___basesoc_ethmac_tx_gap_counter == 4'd11)) begin
                builder_basesoc_txdatapath_liteethmacgap_next_state <= 1'd0;
            end
        end
        default: begin
            __main___basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value <= 1'd0;
            __main___basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce <= 1'd1;
            __main___basesoc_ethmac_tx_gap_source_valid <= __main___basesoc_ethmac_tx_gap_sink_valid;
            __main___basesoc_ethmac_tx_gap_sink_ready <= __main___basesoc_ethmac_tx_gap_source_ready;
            __main___basesoc_ethmac_tx_gap_source_first <= __main___basesoc_ethmac_tx_gap_sink_first;
            __main___basesoc_ethmac_tx_gap_source_last <= __main___basesoc_ethmac_tx_gap_sink_last;
            __main___basesoc_ethmac_tx_gap_source_payload_data <= __main___basesoc_ethmac_tx_gap_sink_payload_data;
            __main___basesoc_ethmac_tx_gap_source_payload_last_be <= __main___basesoc_ethmac_tx_gap_sink_payload_last_be;
            __main___basesoc_ethmac_tx_gap_source_payload_error <= __main___basesoc_ethmac_tx_gap_sink_payload_error;
            if (((__main___basesoc_ethmac_tx_gap_sink_valid & __main___basesoc_ethmac_tx_gap_sink_last) & __main___basesoc_ethmac_tx_gap_sink_ready)) begin
                builder_basesoc_txdatapath_liteethmacgap_next_state <= 1'd1;
            end
        end
    endcase
end
assign __main___basesoc_ethmac_tx_cdc_sink_sink_valid = __main___basesoc_ethmac_sink_valid;
assign __main___basesoc_ethmac_sink_ready = __main___basesoc_ethmac_tx_cdc_sink_sink_ready;
assign __main___basesoc_ethmac_tx_cdc_sink_sink_first = __main___basesoc_ethmac_sink_first;
assign __main___basesoc_ethmac_tx_cdc_sink_sink_last = __main___basesoc_ethmac_sink_last;
assign __main___basesoc_ethmac_tx_cdc_sink_sink_payload_data = __main___basesoc_ethmac_sink_payload_data;
assign __main___basesoc_ethmac_tx_cdc_sink_sink_payload_last_be = __main___basesoc_ethmac_sink_payload_last_be;
assign __main___basesoc_ethmac_tx_cdc_sink_sink_payload_error = __main___basesoc_ethmac_sink_payload_error;
assign __main___basesoc_ethmac_tx_converter_sink_valid = __main___basesoc_ethmac_tx_cdc_source_source_valid;
assign __main___basesoc_ethmac_tx_cdc_source_source_ready = __main___basesoc_ethmac_tx_converter_sink_ready;
assign __main___basesoc_ethmac_tx_converter_sink_first = __main___basesoc_ethmac_tx_cdc_source_source_first;
assign __main___basesoc_ethmac_tx_converter_sink_last = __main___basesoc_ethmac_tx_cdc_source_source_last;
assign __main___basesoc_ethmac_tx_converter_sink_payload_data = __main___basesoc_ethmac_tx_cdc_source_source_payload_data;
assign __main___basesoc_ethmac_tx_converter_sink_payload_last_be = __main___basesoc_ethmac_tx_cdc_source_source_payload_last_be;
assign __main___basesoc_ethmac_tx_converter_sink_payload_error = __main___basesoc_ethmac_tx_cdc_source_source_payload_error;
assign __main___basesoc_ethmac_tx_last_be_sink_valid = __main___basesoc_ethmac_tx_converter_source_valid;
assign __main___basesoc_ethmac_tx_converter_source_ready = __main___basesoc_ethmac_tx_last_be_sink_ready;
assign __main___basesoc_ethmac_tx_last_be_sink_first = __main___basesoc_ethmac_tx_converter_source_first;
assign __main___basesoc_ethmac_tx_last_be_sink_last = __main___basesoc_ethmac_tx_converter_source_last;
assign __main___basesoc_ethmac_tx_last_be_sink_payload_data = __main___basesoc_ethmac_tx_converter_source_payload_data;
assign __main___basesoc_ethmac_tx_last_be_sink_payload_last_be = __main___basesoc_ethmac_tx_converter_source_payload_last_be;
assign __main___basesoc_ethmac_tx_last_be_sink_payload_error = __main___basesoc_ethmac_tx_converter_source_payload_error;
assign __main___basesoc_ethmac_tx_padding_sink_valid = __main___basesoc_ethmac_tx_last_be_source_valid;
assign __main___basesoc_ethmac_tx_last_be_source_ready = __main___basesoc_ethmac_tx_padding_sink_ready;
assign __main___basesoc_ethmac_tx_padding_sink_first = __main___basesoc_ethmac_tx_last_be_source_first;
assign __main___basesoc_ethmac_tx_padding_sink_last = __main___basesoc_ethmac_tx_last_be_source_last;
assign __main___basesoc_ethmac_tx_padding_sink_payload_data = __main___basesoc_ethmac_tx_last_be_source_payload_data;
assign __main___basesoc_ethmac_tx_padding_sink_payload_last_be = __main___basesoc_ethmac_tx_last_be_source_payload_last_be;
assign __main___basesoc_ethmac_tx_padding_sink_payload_error = __main___basesoc_ethmac_tx_last_be_source_payload_error;
assign __main___basesoc_ethmac_tx_crc_sink_sink_valid = __main___basesoc_ethmac_tx_padding_source_valid;
assign __main___basesoc_ethmac_tx_padding_source_ready = __main___basesoc_ethmac_tx_crc_sink_sink_ready;
assign __main___basesoc_ethmac_tx_crc_sink_sink_first = __main___basesoc_ethmac_tx_padding_source_first;
assign __main___basesoc_ethmac_tx_crc_sink_sink_last = __main___basesoc_ethmac_tx_padding_source_last;
assign __main___basesoc_ethmac_tx_crc_sink_sink_payload_data = __main___basesoc_ethmac_tx_padding_source_payload_data;
assign __main___basesoc_ethmac_tx_crc_sink_sink_payload_last_be = __main___basesoc_ethmac_tx_padding_source_payload_last_be;
assign __main___basesoc_ethmac_tx_crc_sink_sink_payload_error = __main___basesoc_ethmac_tx_padding_source_payload_error;
assign __main___basesoc_ethmac_tx_preamble_sink_valid = __main___basesoc_ethmac_tx_crc_source_valid;
assign __main___basesoc_ethmac_tx_crc_source_ready = __main___basesoc_ethmac_tx_preamble_sink_ready;
assign __main___basesoc_ethmac_tx_preamble_sink_first = __main___basesoc_ethmac_tx_crc_source_first;
assign __main___basesoc_ethmac_tx_preamble_sink_last = __main___basesoc_ethmac_tx_crc_source_last;
assign __main___basesoc_ethmac_tx_preamble_sink_payload_data = __main___basesoc_ethmac_tx_crc_source_payload_data;
assign __main___basesoc_ethmac_tx_preamble_sink_payload_last_be = __main___basesoc_ethmac_tx_crc_source_payload_last_be;
assign __main___basesoc_ethmac_tx_preamble_sink_payload_error = __main___basesoc_ethmac_tx_crc_source_payload_error;
assign __main___basesoc_ethmac_tx_gap_sink_valid = __main___basesoc_ethmac_tx_preamble_source_valid;
assign __main___basesoc_ethmac_tx_preamble_source_ready = __main___basesoc_ethmac_tx_gap_sink_ready;
assign __main___basesoc_ethmac_tx_gap_sink_first = __main___basesoc_ethmac_tx_preamble_source_first;
assign __main___basesoc_ethmac_tx_gap_sink_last = __main___basesoc_ethmac_tx_preamble_source_last;
assign __main___basesoc_ethmac_tx_gap_sink_payload_data = __main___basesoc_ethmac_tx_preamble_source_payload_data;
assign __main___basesoc_ethmac_tx_gap_sink_payload_last_be = __main___basesoc_ethmac_tx_preamble_source_payload_last_be;
assign __main___basesoc_ethmac_tx_gap_sink_payload_error = __main___basesoc_ethmac_tx_preamble_source_payload_error;
assign __main___ethphy_liteethphyrmiitx_sink_sink_valid = __main___basesoc_ethmac_tx_gap_source_valid;
assign __main___basesoc_ethmac_tx_gap_source_ready = __main___ethphy_liteethphyrmiitx_sink_sink_ready;
assign __main___ethphy_liteethphyrmiitx_sink_sink_first = __main___basesoc_ethmac_tx_gap_source_first;
assign __main___ethphy_liteethphyrmiitx_sink_sink_last = __main___basesoc_ethmac_tx_gap_source_last;
assign __main___ethphy_liteethphyrmiitx_sink_sink_payload_data = __main___basesoc_ethmac_tx_gap_source_payload_data;
assign __main___ethphy_liteethphyrmiitx_sink_sink_payload_last_be = __main___basesoc_ethmac_tx_gap_source_payload_last_be;
assign __main___ethphy_liteethphyrmiitx_sink_sink_payload_error = __main___basesoc_ethmac_tx_gap_source_payload_error;
assign __main___basesoc_ethmac_pulsesynchronizer0_i = __main___basesoc_ethmac_rx_preamble_error;
assign __main___basesoc_ethmac_pulsesynchronizer1_i = __main___basesoc_ethmac_liteethmaccrc32checker_error;
assign __main___basesoc_ethmac_rx_preamble_source_payload_data = __main___basesoc_ethmac_rx_preamble_sink_payload_data;
assign __main___basesoc_ethmac_rx_preamble_source_payload_last_be = __main___basesoc_ethmac_rx_preamble_sink_payload_last_be;
always @(*) begin
    __main___basesoc_ethmac_rx_preamble_source_first <= 1'd0;
    __main___basesoc_ethmac_rx_preamble_sink_ready <= 1'd0;
    __main___basesoc_ethmac_rx_preamble_source_last <= 1'd0;
    __main___basesoc_ethmac_rx_preamble_source_payload_error <= 1'd0;
    __main___basesoc_ethmac_rx_preamble_error <= 1'd0;
    builder_basesoc_rxdatapath_liteethmacpreamblechecker_next_state <= 1'd0;
    __main___basesoc_ethmac_rx_preamble_source_valid <= 1'd0;
    builder_basesoc_rxdatapath_liteethmacpreamblechecker_next_state <= builder_basesoc_rxdatapath_liteethmacpreamblechecker_state;
    case (builder_basesoc_rxdatapath_liteethmacpreamblechecker_state)
        1'd1: begin
            __main___basesoc_ethmac_rx_preamble_source_valid <= __main___basesoc_ethmac_rx_preamble_sink_valid;
            __main___basesoc_ethmac_rx_preamble_sink_ready <= __main___basesoc_ethmac_rx_preamble_source_ready;
            __main___basesoc_ethmac_rx_preamble_source_first <= __main___basesoc_ethmac_rx_preamble_sink_first;
            __main___basesoc_ethmac_rx_preamble_source_last <= __main___basesoc_ethmac_rx_preamble_sink_last;
            __main___basesoc_ethmac_rx_preamble_source_payload_error <= __main___basesoc_ethmac_rx_preamble_sink_payload_error;
            if (((__main___basesoc_ethmac_rx_preamble_source_valid & __main___basesoc_ethmac_rx_preamble_source_last) & __main___basesoc_ethmac_rx_preamble_source_ready)) begin
                builder_basesoc_rxdatapath_liteethmacpreamblechecker_next_state <= 1'd0;
            end
        end
        default: begin
            __main___basesoc_ethmac_rx_preamble_sink_ready <= 1'd1;
            if (((__main___basesoc_ethmac_rx_preamble_sink_valid & (~__main___basesoc_ethmac_rx_preamble_sink_last)) & (__main___basesoc_ethmac_rx_preamble_sink_payload_data == __main___basesoc_ethmac_rx_preamble_preamble[63:56]))) begin
                builder_basesoc_rxdatapath_liteethmacpreamblechecker_next_state <= 1'd1;
            end
            if ((__main___basesoc_ethmac_rx_preamble_sink_valid & __main___basesoc_ethmac_rx_preamble_sink_last)) begin
                __main___basesoc_ethmac_rx_preamble_error <= 1'd1;
            end
        end
    endcase
end
assign __main___basesoc_ethmac_pulsesynchronizer0_o = (__main___basesoc_ethmac_pulsesynchronizer0_toggle_o ^ __main___basesoc_ethmac_pulsesynchronizer0_toggle_o_r);
assign __main___basesoc_ethmac_liteethmaccrc32checker_fifo_full = (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_level == 3'd4);
assign __main___basesoc_ethmac_liteethmaccrc32checker_fifo_in = (__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_valid & ((~__main___basesoc_ethmac_liteethmaccrc32checker_fifo_full) | __main___basesoc_ethmac_liteethmaccrc32checker_fifo_out));
assign __main___basesoc_ethmac_liteethmaccrc32checker_fifo_out = (__main___basesoc_ethmac_liteethmaccrc32checker_source_source_valid & __main___basesoc_ethmac_liteethmaccrc32checker_source_source_ready);
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_first = __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_first;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_last = __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_last;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_data = __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_data;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_last_be = __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_error = __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_error;
always @(*) begin
    __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_valid <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_valid <= __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_valid;
    __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_valid <= __main___basesoc_ethmac_liteethmaccrc32checker_fifo_in;
end
always @(*) begin
    __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_ready <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_ready <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_ready;
    __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_ready <= __main___basesoc_ethmac_liteethmaccrc32checker_fifo_in;
end
assign __main___basesoc_ethmac_liteethmaccrc32checker_crc_data0 = __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_data;
assign __main___basesoc_ethmac_liteethmaccrc32checker_crc_last_be0 = __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be;
assign __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_valid = __main___basesoc_ethmac_bufferizeendpoints_source_source_valid;
assign __main___basesoc_ethmac_bufferizeendpoints_source_source_ready = __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_ready;
assign __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_first = __main___basesoc_ethmac_bufferizeendpoints_source_source_first;
assign __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_last = __main___basesoc_ethmac_bufferizeendpoints_source_source_last;
assign __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_data = __main___basesoc_ethmac_bufferizeendpoints_source_source_payload_data;
assign __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be = __main___basesoc_ethmac_bufferizeendpoints_source_source_payload_last_be;
assign __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_error = __main___basesoc_ethmac_bufferizeendpoints_source_source_payload_error;
always @(*) begin
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_last_be1 <= 1'd0;
    if ((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last_be0 != 1'd0)) begin
        __main___basesoc_ethmac_liteethmaccrc32checker_crc_last_be1 <= __main___basesoc_ethmac_liteethmaccrc32checker_crc_last_be0;
    end else begin
        __main___basesoc_ethmac_liteethmaccrc32checker_crc_last_be1 <= 1'd1;
    end
end
assign __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1 = __main___basesoc_ethmac_liteethmaccrc32checker_crc_data0[7:0];
assign __main___basesoc_ethmac_liteethmaccrc32checker_crc_last = __main___basesoc_ethmac_liteethmaccrc32checker_crc_reg;
always @(*) begin
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_value <= 32'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_error0 <= 1'd0;
    if (__main___basesoc_ethmac_liteethmaccrc32checker_crc_last_be1) begin
        __main___basesoc_ethmac_liteethmaccrc32checker_crc_value <= {builder_t_slice_proxy63[0], builder_t_slice_proxy62[1], builder_t_slice_proxy61[2], builder_t_slice_proxy60[3], builder_t_slice_proxy59[4], builder_t_slice_proxy58[5], builder_t_slice_proxy57[6], builder_t_slice_proxy56[7], builder_t_slice_proxy55[8], builder_t_slice_proxy54[9], builder_t_slice_proxy53[10], builder_t_slice_proxy52[11], builder_t_slice_proxy51[12], builder_t_slice_proxy50[13], builder_t_slice_proxy49[14], builder_t_slice_proxy48[15], builder_t_slice_proxy47[16], builder_t_slice_proxy46[17], builder_t_slice_proxy45[18], builder_t_slice_proxy44[19], builder_t_slice_proxy43[20], builder_t_slice_proxy42[21], builder_t_slice_proxy41[22], builder_t_slice_proxy40[23], builder_t_slice_proxy39[24], builder_t_slice_proxy38[25], builder_t_slice_proxy37[26], builder_t_slice_proxy36[27], builder_t_slice_proxy35[28], builder_t_slice_proxy34[29], builder_t_slice_proxy33[30], builder_t_slice_proxy32[31]};
        __main___basesoc_ethmac_liteethmaccrc32checker_crc_error0 <= (__main___basesoc_ethmac_liteethmaccrc32checker_crc_next != 32'd3338984827);
    end
end
always @(*) begin
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next <= 32'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[0] <= (((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[1] <= (((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[2] <= (((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[3] <= (((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[4] <= (((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[5] <= (((((((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[6] <= (((((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[7] <= (((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[8] <= ((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[0] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[9] <= ((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[1] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[10] <= ((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[2] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[11] <= ((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[3] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[12] <= ((((((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[4] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[13] <= ((((((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[5] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[14] <= ((((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[6] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[15] <= ((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[7] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[16] <= ((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[8] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[17] <= ((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[9] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[18] <= ((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[10] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[19] <= ((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[11] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[20] <= ((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[12] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[21] <= ((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[13] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[22] <= ((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[14] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[23] <= ((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[15] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[24] <= ((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[16] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[25] <= ((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[17] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[26] <= ((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[18] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[24]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[7]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[27] <= ((((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[19] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[25]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[6]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[28] <= ((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[20] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[26]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[5]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[29] <= ((((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[21] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[30]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[1]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[27]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[4]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[30] <= ((((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[22] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[31]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[0]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[28]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[3]);
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_next[31] <= ((__main___basesoc_ethmac_liteethmaccrc32checker_crc_last[23] ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_last[29]) ^ __main___basesoc_ethmac_liteethmaccrc32checker_crc_data1[2]);
end
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_din = {__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_last, __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_first, __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_error, __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_last_be, __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_data};
assign {__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_last, __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_first, __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_error, __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_last_be, __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_data} = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_dout;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_ready = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_we = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_valid;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_first = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_first;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_last = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_last;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_data = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_data;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_last_be = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_last_be;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_in_payload_error = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_sink_payload_error;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_valid = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_readable;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_first = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_first;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_last = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_last;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_data = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_data;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_last_be = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_last_be;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_error = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_fifo_out_payload_error;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_re = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_ready;
always @(*) begin
    __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr <= 3'd0;
    if (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_replace) begin
        __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr <= (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_produce - 1'd1);
    end else begin
        __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_produce;
    end
end
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_dat_w = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_din;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_we = (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_we & (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable | __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_replace));
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_do_read = (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_readable & __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_re);
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_rdport_adr = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_consume;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_dout = __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_rdport_dat_r;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable = (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_level != 3'd5);
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_readable = (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_level != 1'd0);
always @(*) begin
    __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_data <= 8'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_error <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_error <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_ready <= 1'd0;
    builder_basesoc_rxdatapath_bufferizeendpoints_next_state <= 2'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value0 <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value_ce0 <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value1 <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value_ce1 <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_fifo_reset <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_source_source_valid <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_ce <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_source_source_first <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_crc_reset <= 1'd0;
    __main___basesoc_ethmac_liteethmaccrc32checker_source_source_last <= 1'd0;
    builder_basesoc_rxdatapath_bufferizeendpoints_next_state <= builder_basesoc_rxdatapath_bufferizeendpoints_state;
    case (builder_basesoc_rxdatapath_bufferizeendpoints_state)
        1'd1: begin
            if ((__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_valid & __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_ready)) begin
                __main___basesoc_ethmac_liteethmaccrc32checker_crc_ce <= 1'd1;
                builder_basesoc_rxdatapath_bufferizeendpoints_next_state <= 2'd2;
            end
        end
        2'd2: begin
            __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_ready <= __main___basesoc_ethmac_liteethmaccrc32checker_fifo_out;
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_valid <= (__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_valid & __main___basesoc_ethmac_liteethmaccrc32checker_fifo_full);
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_data <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_data;
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_last_be;
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_error <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_error;
            if (1'd1) begin
                __main___basesoc_ethmac_liteethmaccrc32checker_source_source_last <= __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_last;
                __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be;
            end else begin
                if ((__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be & 4'd15)) begin
                    __main___basesoc_ethmac_liteethmaccrc32checker_source_source_last <= __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_last;
                    __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= (__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be <<< -3'd3);
                end else begin
                    __main___basesoc_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value0 <= (__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be >>> 3'd4);
                    __main___basesoc_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value_ce0 <= 1'd1;
                    __main___basesoc_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value1 <= __main___basesoc_ethmac_liteethmaccrc32checker_crc_error0;
                    __main___basesoc_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value_ce1 <= 1'd1;
                end
            end
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_error <= (__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_error | {1{(__main___basesoc_ethmac_liteethmaccrc32checker_crc_error0 & __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_last)}});
            __main___basesoc_ethmac_liteethmaccrc32checker_error <= ((__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_valid & __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_last) & __main___basesoc_ethmac_liteethmaccrc32checker_crc_error0);
            if ((__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_valid & __main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_ready)) begin
                __main___basesoc_ethmac_liteethmaccrc32checker_crc_ce <= 1'd1;
                if ((__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_last & (__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_payload_last_be > 4'd15))) begin
                    builder_basesoc_rxdatapath_bufferizeendpoints_next_state <= 2'd3;
                end else begin
                    if (__main___basesoc_ethmac_liteethmaccrc32checker_sink_sink_last) begin
                        builder_basesoc_rxdatapath_bufferizeendpoints_next_state <= 1'd0;
                    end
                end
            end
        end
        2'd3: begin
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_valid <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_valid;
            __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_ready <= __main___basesoc_ethmac_liteethmaccrc32checker_source_source_ready;
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_first <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_first;
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_last <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_last;
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_data <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_data;
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_last_be;
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_error <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_error;
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_error <= (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_source_payload_error | {1{__main___basesoc_ethmac_liteethmaccrc32checker_crc_error1}});
            __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_last_be <= __main___basesoc_ethmac_liteethmaccrc32checker_last_be;
            if ((__main___basesoc_ethmac_liteethmaccrc32checker_source_source_valid & __main___basesoc_ethmac_liteethmaccrc32checker_source_source_ready)) begin
                builder_basesoc_rxdatapath_bufferizeendpoints_next_state <= 1'd0;
            end
        end
        default: begin
            __main___basesoc_ethmac_liteethmaccrc32checker_crc_reset <= 1'd1;
            __main___basesoc_ethmac_liteethmaccrc32checker_fifo_reset <= 1'd1;
            builder_basesoc_rxdatapath_bufferizeendpoints_next_state <= 1'd1;
        end
    endcase
end
assign __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_ready = ((~__main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_valid) | __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_ready);
assign __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_valid = __main___basesoc_ethmac_bufferizeendpoints_sink_sink_valid;
assign __main___basesoc_ethmac_bufferizeendpoints_sink_sink_ready = __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_ready;
assign __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_first = __main___basesoc_ethmac_bufferizeendpoints_sink_sink_first;
assign __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_last = __main___basesoc_ethmac_bufferizeendpoints_sink_sink_last;
assign __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_payload_data = __main___basesoc_ethmac_bufferizeendpoints_sink_sink_payload_data;
assign __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_payload_last_be = __main___basesoc_ethmac_bufferizeendpoints_sink_sink_payload_last_be;
assign __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_payload_error = __main___basesoc_ethmac_bufferizeendpoints_sink_sink_payload_error;
assign __main___basesoc_ethmac_bufferizeendpoints_source_source_valid = __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_valid;
assign __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_ready = __main___basesoc_ethmac_bufferizeendpoints_source_source_ready;
assign __main___basesoc_ethmac_bufferizeendpoints_source_source_first = __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_first;
assign __main___basesoc_ethmac_bufferizeendpoints_source_source_last = __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_last;
assign __main___basesoc_ethmac_bufferizeendpoints_source_source_payload_data = __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_data;
assign __main___basesoc_ethmac_bufferizeendpoints_source_source_payload_last_be = __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_last_be;
assign __main___basesoc_ethmac_bufferizeendpoints_source_source_payload_error = __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_error;
assign __main___basesoc_ethmac_pulsesynchronizer1_o = (__main___basesoc_ethmac_pulsesynchronizer1_toggle_o ^ __main___basesoc_ethmac_pulsesynchronizer1_toggle_o_r);
assign __main___basesoc_ethmac_rx_padding_source_valid = __main___basesoc_ethmac_rx_padding_sink_valid;
assign __main___basesoc_ethmac_rx_padding_sink_ready = __main___basesoc_ethmac_rx_padding_source_ready;
assign __main___basesoc_ethmac_rx_padding_source_first = __main___basesoc_ethmac_rx_padding_sink_first;
assign __main___basesoc_ethmac_rx_padding_source_last = __main___basesoc_ethmac_rx_padding_sink_last;
assign __main___basesoc_ethmac_rx_padding_source_payload_data = __main___basesoc_ethmac_rx_padding_sink_payload_data;
assign __main___basesoc_ethmac_rx_padding_source_payload_last_be = __main___basesoc_ethmac_rx_padding_sink_payload_last_be;
assign __main___basesoc_ethmac_rx_padding_source_payload_error = __main___basesoc_ethmac_rx_padding_sink_payload_error;
assign __main___basesoc_ethmac_rx_last_be_source_valid = __main___basesoc_ethmac_rx_last_be_sink_valid;
assign __main___basesoc_ethmac_rx_last_be_sink_ready = __main___basesoc_ethmac_rx_last_be_source_ready;
assign __main___basesoc_ethmac_rx_last_be_source_first = __main___basesoc_ethmac_rx_last_be_sink_first;
assign __main___basesoc_ethmac_rx_last_be_source_last = __main___basesoc_ethmac_rx_last_be_sink_last;
assign __main___basesoc_ethmac_rx_last_be_source_payload_data = __main___basesoc_ethmac_rx_last_be_sink_payload_data;
assign __main___basesoc_ethmac_rx_last_be_source_payload_error = __main___basesoc_ethmac_rx_last_be_sink_payload_error;
always @(*) begin
    __main___basesoc_ethmac_rx_last_be_source_payload_last_be <= 1'd0;
    __main___basesoc_ethmac_rx_last_be_source_payload_last_be <= __main___basesoc_ethmac_rx_last_be_sink_payload_last_be;
    if (1'd1) begin
        __main___basesoc_ethmac_rx_last_be_source_payload_last_be <= __main___basesoc_ethmac_rx_last_be_sink_last;
    end
end
assign __main___basesoc_ethmac_rx_converter_converter_sink_valid = __main___basesoc_ethmac_rx_converter_sink_valid;
assign __main___basesoc_ethmac_rx_converter_converter_sink_first = __main___basesoc_ethmac_rx_converter_sink_first;
assign __main___basesoc_ethmac_rx_converter_converter_sink_last = __main___basesoc_ethmac_rx_converter_sink_last;
assign __main___basesoc_ethmac_rx_converter_sink_ready = __main___basesoc_ethmac_rx_converter_converter_sink_ready;
assign __main___basesoc_ethmac_rx_converter_converter_sink_payload_data = {__main___basesoc_ethmac_rx_converter_sink_payload_error, __main___basesoc_ethmac_rx_converter_sink_payload_last_be, __main___basesoc_ethmac_rx_converter_sink_payload_data};
assign __main___basesoc_ethmac_rx_converter_source_valid = __main___basesoc_ethmac_rx_converter_source_source_valid;
assign __main___basesoc_ethmac_rx_converter_source_first = __main___basesoc_ethmac_rx_converter_source_source_first;
assign __main___basesoc_ethmac_rx_converter_source_last = __main___basesoc_ethmac_rx_converter_source_source_last;
assign __main___basesoc_ethmac_rx_converter_source_source_ready = __main___basesoc_ethmac_rx_converter_source_ready;
always @(*) begin
    __main___basesoc_ethmac_rx_converter_source_payload_data <= 32'd0;
    __main___basesoc_ethmac_rx_converter_source_payload_data[7:0] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[7:0];
    __main___basesoc_ethmac_rx_converter_source_payload_data[15:8] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[17:10];
    __main___basesoc_ethmac_rx_converter_source_payload_data[23:16] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[27:20];
    __main___basesoc_ethmac_rx_converter_source_payload_data[31:24] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[37:30];
end
always @(*) begin
    __main___basesoc_ethmac_rx_converter_source_payload_last_be <= 4'd0;
    __main___basesoc_ethmac_rx_converter_source_payload_last_be[0] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[8];
    __main___basesoc_ethmac_rx_converter_source_payload_last_be[1] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[18];
    __main___basesoc_ethmac_rx_converter_source_payload_last_be[2] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[28];
    __main___basesoc_ethmac_rx_converter_source_payload_last_be[3] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[38];
end
always @(*) begin
    __main___basesoc_ethmac_rx_converter_source_payload_error <= 4'd0;
    __main___basesoc_ethmac_rx_converter_source_payload_error[0] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[9];
    __main___basesoc_ethmac_rx_converter_source_payload_error[1] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[19];
    __main___basesoc_ethmac_rx_converter_source_payload_error[2] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[29];
    __main___basesoc_ethmac_rx_converter_source_payload_error[3] <= __main___basesoc_ethmac_rx_converter_source_source_payload_data[39];
end
assign __main___basesoc_ethmac_rx_converter_source_source_valid = __main___basesoc_ethmac_rx_converter_converter_source_valid;
assign __main___basesoc_ethmac_rx_converter_converter_source_ready = __main___basesoc_ethmac_rx_converter_source_source_ready;
assign __main___basesoc_ethmac_rx_converter_source_source_first = __main___basesoc_ethmac_rx_converter_converter_source_first;
assign __main___basesoc_ethmac_rx_converter_source_source_last = __main___basesoc_ethmac_rx_converter_converter_source_last;
assign __main___basesoc_ethmac_rx_converter_source_source_payload_data = __main___basesoc_ethmac_rx_converter_converter_source_payload_data;
assign __main___basesoc_ethmac_rx_converter_converter_sink_ready = ((~__main___basesoc_ethmac_rx_converter_converter_strobe_all) | __main___basesoc_ethmac_rx_converter_converter_source_ready);
assign __main___basesoc_ethmac_rx_converter_converter_source_valid = __main___basesoc_ethmac_rx_converter_converter_strobe_all;
assign __main___basesoc_ethmac_rx_converter_converter_load_part = (__main___basesoc_ethmac_rx_converter_converter_sink_valid & __main___basesoc_ethmac_rx_converter_converter_sink_ready);
assign __main___basesoc_ethmac_rx_cdc_cdc_sink_valid = __main___basesoc_ethmac_rx_cdc_sink_sink_valid;
assign __main___basesoc_ethmac_rx_cdc_sink_sink_ready = __main___basesoc_ethmac_rx_cdc_cdc_sink_ready;
assign __main___basesoc_ethmac_rx_cdc_cdc_sink_first = __main___basesoc_ethmac_rx_cdc_sink_sink_first;
assign __main___basesoc_ethmac_rx_cdc_cdc_sink_last = __main___basesoc_ethmac_rx_cdc_sink_sink_last;
assign __main___basesoc_ethmac_rx_cdc_cdc_sink_payload_data = __main___basesoc_ethmac_rx_cdc_sink_sink_payload_data;
assign __main___basesoc_ethmac_rx_cdc_cdc_sink_payload_last_be = __main___basesoc_ethmac_rx_cdc_sink_sink_payload_last_be;
assign __main___basesoc_ethmac_rx_cdc_cdc_sink_payload_error = __main___basesoc_ethmac_rx_cdc_sink_sink_payload_error;
assign __main___basesoc_ethmac_rx_cdc_source_source_valid = __main___basesoc_ethmac_rx_cdc_cdc_source_valid;
assign __main___basesoc_ethmac_rx_cdc_cdc_source_ready = __main___basesoc_ethmac_rx_cdc_source_source_ready;
assign __main___basesoc_ethmac_rx_cdc_source_source_first = __main___basesoc_ethmac_rx_cdc_cdc_source_first;
assign __main___basesoc_ethmac_rx_cdc_source_source_last = __main___basesoc_ethmac_rx_cdc_cdc_source_last;
assign __main___basesoc_ethmac_rx_cdc_source_source_payload_data = __main___basesoc_ethmac_rx_cdc_cdc_source_payload_data;
assign __main___basesoc_ethmac_rx_cdc_source_source_payload_last_be = __main___basesoc_ethmac_rx_cdc_cdc_source_payload_last_be;
assign __main___basesoc_ethmac_rx_cdc_source_source_payload_error = __main___basesoc_ethmac_rx_cdc_cdc_source_payload_error;
assign __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_din = {__main___basesoc_ethmac_rx_cdc_cdc_fifo_in_last, __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_first, __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_error, __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_last_be, __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_data};
assign {__main___basesoc_ethmac_rx_cdc_cdc_fifo_out_last, __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_first, __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_error, __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_last_be, __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_data} = __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_dout;
assign __main___basesoc_ethmac_rx_cdc_cdc_sink_ready = __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_writable;
assign __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_we = __main___basesoc_ethmac_rx_cdc_cdc_sink_valid;
assign __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_first = __main___basesoc_ethmac_rx_cdc_cdc_sink_first;
assign __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_last = __main___basesoc_ethmac_rx_cdc_cdc_sink_last;
assign __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_data = __main___basesoc_ethmac_rx_cdc_cdc_sink_payload_data;
assign __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_last_be = __main___basesoc_ethmac_rx_cdc_cdc_sink_payload_last_be;
assign __main___basesoc_ethmac_rx_cdc_cdc_fifo_in_payload_error = __main___basesoc_ethmac_rx_cdc_cdc_sink_payload_error;
assign __main___basesoc_ethmac_rx_cdc_cdc_source_valid = __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_readable;
assign __main___basesoc_ethmac_rx_cdc_cdc_source_first = __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_first;
assign __main___basesoc_ethmac_rx_cdc_cdc_source_last = __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_last;
assign __main___basesoc_ethmac_rx_cdc_cdc_source_payload_data = __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_data;
assign __main___basesoc_ethmac_rx_cdc_cdc_source_payload_last_be = __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_last_be;
assign __main___basesoc_ethmac_rx_cdc_cdc_source_payload_error = __main___basesoc_ethmac_rx_cdc_cdc_fifo_out_payload_error;
assign __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_re = __main___basesoc_ethmac_rx_cdc_cdc_source_ready;
assign __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_ce = (__main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_writable & __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_we);
assign __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_ce = (__main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_readable & __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_re);
assign __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_writable = (((__main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q[5] == __main___basesoc_ethmac_rx_cdc_cdc_consume_wdomain[5]) | (__main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q[4] == __main___basesoc_ethmac_rx_cdc_cdc_consume_wdomain[4])) | (__main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q[3:0] != __main___basesoc_ethmac_rx_cdc_cdc_consume_wdomain[3:0]));
assign __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_readable = (__main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q != __main___basesoc_ethmac_rx_cdc_cdc_produce_rdomain);
assign __main___basesoc_ethmac_rx_cdc_cdc_wrport_adr = __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary[4:0];
assign __main___basesoc_ethmac_rx_cdc_cdc_wrport_dat_w = __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_din;
assign __main___basesoc_ethmac_rx_cdc_cdc_wrport_we = __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_ce;
assign __main___basesoc_ethmac_rx_cdc_cdc_rdport_adr = __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary[4:0];
assign __main___basesoc_ethmac_rx_cdc_cdc_asyncfifo_dout = __main___basesoc_ethmac_rx_cdc_cdc_rdport_dat_r;
always @(*) begin
    __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary <= 6'd0;
    if (__main___basesoc_ethmac_rx_cdc_cdc_graycounter0_ce) begin
        __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary <= (__main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary + 1'd1);
    end else begin
        __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary <= __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary;
    end
end
assign __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next = (__main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary ^ __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary[5:1]);
always @(*) begin
    __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary <= 6'd0;
    if (__main___basesoc_ethmac_rx_cdc_cdc_graycounter1_ce) begin
        __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary <= (__main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_binary + 1'd1);
    end else begin
        __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary <= __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_binary;
    end
end
assign __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next = (__main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary ^ __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary[5:1]);
assign __main___basesoc_ethmac_rx_preamble_sink_valid = __main___ethphy_liteethphyrmiirx_source_source_valid;
assign __main___ethphy_liteethphyrmiirx_source_source_ready = __main___basesoc_ethmac_rx_preamble_sink_ready;
assign __main___basesoc_ethmac_rx_preamble_sink_first = __main___ethphy_liteethphyrmiirx_source_source_first;
assign __main___basesoc_ethmac_rx_preamble_sink_last = __main___ethphy_liteethphyrmiirx_source_source_last;
assign __main___basesoc_ethmac_rx_preamble_sink_payload_data = __main___ethphy_liteethphyrmiirx_source_source_payload_data;
assign __main___basesoc_ethmac_rx_preamble_sink_payload_last_be = __main___ethphy_liteethphyrmiirx_source_source_payload_last_be;
assign __main___basesoc_ethmac_rx_preamble_sink_payload_error = __main___ethphy_liteethphyrmiirx_source_source_payload_error;
assign __main___basesoc_ethmac_bufferizeendpoints_sink_sink_valid = __main___basesoc_ethmac_rx_preamble_source_valid;
assign __main___basesoc_ethmac_rx_preamble_source_ready = __main___basesoc_ethmac_bufferizeendpoints_sink_sink_ready;
assign __main___basesoc_ethmac_bufferizeendpoints_sink_sink_first = __main___basesoc_ethmac_rx_preamble_source_first;
assign __main___basesoc_ethmac_bufferizeendpoints_sink_sink_last = __main___basesoc_ethmac_rx_preamble_source_last;
assign __main___basesoc_ethmac_bufferizeendpoints_sink_sink_payload_data = __main___basesoc_ethmac_rx_preamble_source_payload_data;
assign __main___basesoc_ethmac_bufferizeendpoints_sink_sink_payload_last_be = __main___basesoc_ethmac_rx_preamble_source_payload_last_be;
assign __main___basesoc_ethmac_bufferizeendpoints_sink_sink_payload_error = __main___basesoc_ethmac_rx_preamble_source_payload_error;
assign __main___basesoc_ethmac_rx_padding_sink_valid = __main___basesoc_ethmac_liteethmaccrc32checker_source_source_valid;
assign __main___basesoc_ethmac_liteethmaccrc32checker_source_source_ready = __main___basesoc_ethmac_rx_padding_sink_ready;
assign __main___basesoc_ethmac_rx_padding_sink_first = __main___basesoc_ethmac_liteethmaccrc32checker_source_source_first;
assign __main___basesoc_ethmac_rx_padding_sink_last = __main___basesoc_ethmac_liteethmaccrc32checker_source_source_last;
assign __main___basesoc_ethmac_rx_padding_sink_payload_data = __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_data;
assign __main___basesoc_ethmac_rx_padding_sink_payload_last_be = __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_last_be;
assign __main___basesoc_ethmac_rx_padding_sink_payload_error = __main___basesoc_ethmac_liteethmaccrc32checker_source_source_payload_error;
assign __main___basesoc_ethmac_rx_last_be_sink_valid = __main___basesoc_ethmac_rx_padding_source_valid;
assign __main___basesoc_ethmac_rx_padding_source_ready = __main___basesoc_ethmac_rx_last_be_sink_ready;
assign __main___basesoc_ethmac_rx_last_be_sink_first = __main___basesoc_ethmac_rx_padding_source_first;
assign __main___basesoc_ethmac_rx_last_be_sink_last = __main___basesoc_ethmac_rx_padding_source_last;
assign __main___basesoc_ethmac_rx_last_be_sink_payload_data = __main___basesoc_ethmac_rx_padding_source_payload_data;
assign __main___basesoc_ethmac_rx_last_be_sink_payload_last_be = __main___basesoc_ethmac_rx_padding_source_payload_last_be;
assign __main___basesoc_ethmac_rx_last_be_sink_payload_error = __main___basesoc_ethmac_rx_padding_source_payload_error;
assign __main___basesoc_ethmac_rx_converter_sink_valid = __main___basesoc_ethmac_rx_last_be_source_valid;
assign __main___basesoc_ethmac_rx_last_be_source_ready = __main___basesoc_ethmac_rx_converter_sink_ready;
assign __main___basesoc_ethmac_rx_converter_sink_first = __main___basesoc_ethmac_rx_last_be_source_first;
assign __main___basesoc_ethmac_rx_converter_sink_last = __main___basesoc_ethmac_rx_last_be_source_last;
assign __main___basesoc_ethmac_rx_converter_sink_payload_data = __main___basesoc_ethmac_rx_last_be_source_payload_data;
assign __main___basesoc_ethmac_rx_converter_sink_payload_last_be = __main___basesoc_ethmac_rx_last_be_source_payload_last_be;
assign __main___basesoc_ethmac_rx_converter_sink_payload_error = __main___basesoc_ethmac_rx_last_be_source_payload_error;
assign __main___basesoc_ethmac_rx_cdc_sink_sink_valid = __main___basesoc_ethmac_rx_converter_source_valid;
assign __main___basesoc_ethmac_rx_converter_source_ready = __main___basesoc_ethmac_rx_cdc_sink_sink_ready;
assign __main___basesoc_ethmac_rx_cdc_sink_sink_first = __main___basesoc_ethmac_rx_converter_source_first;
assign __main___basesoc_ethmac_rx_cdc_sink_sink_last = __main___basesoc_ethmac_rx_converter_source_last;
assign __main___basesoc_ethmac_rx_cdc_sink_sink_payload_data = __main___basesoc_ethmac_rx_converter_source_payload_data;
assign __main___basesoc_ethmac_rx_cdc_sink_sink_payload_last_be = __main___basesoc_ethmac_rx_converter_source_payload_last_be;
assign __main___basesoc_ethmac_rx_cdc_sink_sink_payload_error = __main___basesoc_ethmac_rx_converter_source_payload_error;
assign __main___basesoc_ethmac_source_valid = __main___basesoc_ethmac_rx_cdc_source_source_valid;
assign __main___basesoc_ethmac_rx_cdc_source_source_ready = __main___basesoc_ethmac_source_ready;
assign __main___basesoc_ethmac_source_first = __main___basesoc_ethmac_rx_cdc_source_source_first;
assign __main___basesoc_ethmac_source_last = __main___basesoc_ethmac_rx_cdc_source_source_last;
assign __main___basesoc_ethmac_source_payload_data = __main___basesoc_ethmac_rx_cdc_source_source_payload_data;
assign __main___basesoc_ethmac_source_payload_last_be = __main___basesoc_ethmac_rx_cdc_source_source_payload_last_be;
assign __main___basesoc_ethmac_source_payload_error = __main___basesoc_ethmac_rx_cdc_source_source_payload_error;
assign __main___basesoc_ethmac_sram0_sink_valid = __main___basesoc_ethmac_sink_sink_valid;
assign __main___basesoc_ethmac_sink_sink_ready = __main___basesoc_ethmac_sram1_sink_ready;
assign __main___basesoc_ethmac_sram2_sink_first = __main___basesoc_ethmac_sink_sink_first;
assign __main___basesoc_ethmac_sram3_sink_last = __main___basesoc_ethmac_sink_sink_last;
assign __main___basesoc_ethmac_sram4_sink_payload_data = __main___basesoc_ethmac_sink_sink_payload_data;
assign __main___basesoc_ethmac_sram5_sink_payload_last_be = __main___basesoc_ethmac_sink_sink_payload_last_be;
assign __main___basesoc_ethmac_sram6_sink_payload_error = __main___basesoc_ethmac_sink_sink_payload_error;
assign __main___basesoc_ethmac_source_source_valid = __main___basesoc_ethmac_sram83_source_valid;
assign __main___basesoc_ethmac_sram84_source_ready = __main___basesoc_ethmac_source_source_ready;
assign __main___basesoc_ethmac_source_source_first = __main___basesoc_ethmac_sram85_source_first;
assign __main___basesoc_ethmac_source_source_last = __main___basesoc_ethmac_sram86_source_last;
assign __main___basesoc_ethmac_source_source_payload_data = __main___basesoc_ethmac_sram87_source_payload_data;
assign __main___basesoc_ethmac_source_source_payload_last_be = __main___basesoc_ethmac_sram88_source_payload_last_be;
assign __main___basesoc_ethmac_source_source_payload_error = __main___basesoc_ethmac_sram89_source_payload_error;
always @(*) begin
    __main___basesoc_ethmac_length_inc <= 4'd0;
    case (__main___basesoc_ethmac_sram5_sink_payload_last_be)
        1'd1: begin
            __main___basesoc_ethmac_length_inc <= 1'd1;
        end
        2'd2: begin
            __main___basesoc_ethmac_length_inc <= 2'd2;
        end
        3'd4: begin
            __main___basesoc_ethmac_length_inc <= 2'd3;
        end
        4'd8: begin
            __main___basesoc_ethmac_length_inc <= 3'd4;
        end
        5'd16: begin
            __main___basesoc_ethmac_length_inc <= 3'd5;
        end
        6'd32: begin
            __main___basesoc_ethmac_length_inc <= 3'd6;
        end
        7'd64: begin
            __main___basesoc_ethmac_length_inc <= 3'd7;
        end
        default: begin
            __main___basesoc_ethmac_length_inc <= 3'd4;
        end
    endcase
end
assign __main___basesoc_ethmac_sram44_source_ready = __main___basesoc_ethmac_sram20_clear;
assign __main___basesoc_ethmac_sram19_trigger = __main___basesoc_ethmac_sram43_source_valid;
assign __main___basesoc_ethmac_sram7_status = __main___basesoc_ethmac_sram47_source_payload_slot;
assign __main___basesoc_ethmac_sram10_status = __main___basesoc_ethmac_sram48_source_payload_length;
assign __main___basesoc_ethmac_wr_data = __main___basesoc_ethmac_sram4_sink_payload_data;
always @(*) begin
    __main___basesoc_ethmac_sram81_we <= 1'd0;
    __main___basesoc_ethmac_sram75_adr <= 9'd0;
    __main___basesoc_ethmac_sram82_dat_w <= 32'd0;
    __main___basesoc_ethmac_sram77_we <= 1'd0;
    __main___basesoc_ethmac_sram78_dat_w <= 32'd0;
    __main___basesoc_ethmac_sram79_adr <= 9'd0;
    case (__main___basesoc_ethmac_slot)
        1'd0: begin
            __main___basesoc_ethmac_sram75_adr <= __main___basesoc_ethmac_sram35_length[10:2];
            __main___basesoc_ethmac_sram78_dat_w <= __main___basesoc_ethmac_wr_data;
            if ((__main___basesoc_ethmac_sram0_sink_valid & __main___basesoc_ethmac_write)) begin
                __main___basesoc_ethmac_sram77_we <= 1'd1;
            end
        end
        1'd1: begin
            __main___basesoc_ethmac_sram79_adr <= __main___basesoc_ethmac_sram35_length[10:2];
            __main___basesoc_ethmac_sram82_dat_w <= __main___basesoc_ethmac_wr_data;
            if ((__main___basesoc_ethmac_sram0_sink_valid & __main___basesoc_ethmac_write)) begin
                __main___basesoc_ethmac_sram81_we <= 1'd1;
            end
        end
    endcase
end
assign __main___basesoc_ethmac_sram21_available = __main___basesoc_ethmac_sram17_status;
assign __main___basesoc_ethmac_sram25_available = __main___basesoc_ethmac_sram18_pending;
always @(*) begin
    __main___basesoc_ethmac_sram20_clear <= 1'd0;
    if ((__main___basesoc_ethmac_sram28_re & __main___basesoc_ethmac_sram29_r)) begin
        __main___basesoc_ethmac_sram20_clear <= 1'd1;
    end
end
assign __main___basesoc_ethmac_sram16_irq = (__main___basesoc_ethmac_sram26_status & __main___basesoc_ethmac_sram31_storage);
assign __main___basesoc_ethmac_sram17_status = __main___basesoc_ethmac_sram19_trigger;
assign __main___basesoc_ethmac_sram18_pending = __main___basesoc_ethmac_sram19_trigger;
assign __main___basesoc_ethmac_sram53_din = {__main___basesoc_ethmac_sram69_fifo_in_last, __main___basesoc_ethmac_sram68_fifo_in_first, __main___basesoc_ethmac_sram67_fifo_in_payload_length, __main___basesoc_ethmac_sram66_fifo_in_payload_slot};
assign {__main___basesoc_ethmac_sram73_fifo_out_last, __main___basesoc_ethmac_sram72_fifo_out_first, __main___basesoc_ethmac_sram71_fifo_out_payload_length, __main___basesoc_ethmac_sram70_fifo_out_payload_slot} = __main___basesoc_ethmac_sram54_dout;
assign __main___basesoc_ethmac_sram38_sink_ready = __main___basesoc_ethmac_sram50_writable;
assign __main___basesoc_ethmac_sram49_we = __main___basesoc_ethmac_sram37_sink_valid;
assign __main___basesoc_ethmac_sram68_fifo_in_first = __main___basesoc_ethmac_sram39_sink_first;
assign __main___basesoc_ethmac_sram69_fifo_in_last = __main___basesoc_ethmac_sram40_sink_last;
assign __main___basesoc_ethmac_sram66_fifo_in_payload_slot = __main___basesoc_ethmac_sram41_sink_payload_slot;
assign __main___basesoc_ethmac_sram67_fifo_in_payload_length = __main___basesoc_ethmac_sram42_sink_payload_length;
assign __main___basesoc_ethmac_sram43_source_valid = __main___basesoc_ethmac_sram52_readable;
assign __main___basesoc_ethmac_sram45_source_first = __main___basesoc_ethmac_sram72_fifo_out_first;
assign __main___basesoc_ethmac_sram46_source_last = __main___basesoc_ethmac_sram73_fifo_out_last;
assign __main___basesoc_ethmac_sram47_source_payload_slot = __main___basesoc_ethmac_sram70_fifo_out_payload_slot;
assign __main___basesoc_ethmac_sram48_source_payload_length = __main___basesoc_ethmac_sram71_fifo_out_payload_length;
assign __main___basesoc_ethmac_sram51_re = __main___basesoc_ethmac_sram44_source_ready;
always @(*) begin
    __main___basesoc_ethmac_sram59_adr <= 1'd0;
    if (__main___basesoc_ethmac_sram56_replace) begin
        __main___basesoc_ethmac_sram59_adr <= (__main___basesoc_ethmac_sram57_produce - 1'd1);
    end else begin
        __main___basesoc_ethmac_sram59_adr <= __main___basesoc_ethmac_sram57_produce;
    end
end
assign __main___basesoc_ethmac_sram62_dat_w = __main___basesoc_ethmac_sram53_din;
assign __main___basesoc_ethmac_sram61_we = (__main___basesoc_ethmac_sram49_we & (__main___basesoc_ethmac_sram50_writable | __main___basesoc_ethmac_sram56_replace));
assign __main___basesoc_ethmac_sram63_do_read = (__main___basesoc_ethmac_sram52_readable & __main___basesoc_ethmac_sram51_re);
assign __main___basesoc_ethmac_sram64_adr = __main___basesoc_ethmac_sram58_consume;
assign __main___basesoc_ethmac_sram54_dout = __main___basesoc_ethmac_sram65_dat_r;
assign __main___basesoc_ethmac_sram50_writable = (__main___basesoc_ethmac_sram55_level != 2'd2);
assign __main___basesoc_ethmac_sram52_readable = (__main___basesoc_ethmac_sram55_level != 1'd0);
always @(*) begin
    __main___basesoc_ethmac_sram37_sink_valid <= 1'd0;
    __main___basesoc_ethmac_write <= 1'd0;
    builder_basesoc_liteethmacsramwriter_next_state <= 3'd0;
    __main___basesoc_ethmac_sram41_sink_payload_slot <= 1'd0;
    __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= 11'd0;
    __main___basesoc_ethmac_sram42_sink_payload_length <= 11'd0;
    __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd0;
    __main___basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value <= 1'd0;
    __main___basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce <= 1'd0;
    __main___basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value <= 32'd0;
    __main___basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce <= 1'd0;
    builder_basesoc_liteethmacsramwriter_next_state <= builder_basesoc_liteethmacsramwriter_state;
    case (builder_basesoc_liteethmacsramwriter_state)
        1'd1: begin
            if ((__main___basesoc_ethmac_sram0_sink_valid & __main___basesoc_ethmac_sram3_sink_last)) begin
                if (((__main___basesoc_ethmac_sram6_sink_payload_error & __main___basesoc_ethmac_sram5_sink_payload_last_be) != 1'd0)) begin
                    builder_basesoc_liteethmacsramwriter_next_state <= 2'd3;
                end else begin
                    builder_basesoc_liteethmacsramwriter_next_state <= 3'd4;
                end
            end
        end
        2'd2: begin
            if ((__main___basesoc_ethmac_sram0_sink_valid & __main___basesoc_ethmac_sram3_sink_last)) begin
                if ((__main___basesoc_ethmac_sram5_sink_payload_last_be != 1'd0)) begin
                    builder_basesoc_liteethmacsramwriter_next_state <= 2'd3;
                end else begin
                    __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= 1'd0;
                    __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd1;
                    builder_basesoc_liteethmacsramwriter_next_state <= 1'd0;
                end
            end
        end
        2'd3: begin
            __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= 1'd0;
            __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd1;
            builder_basesoc_liteethmacsramwriter_next_state <= 1'd0;
        end
        3'd4: begin
            __main___basesoc_ethmac_sram37_sink_valid <= 1'd1;
            __main___basesoc_ethmac_sram41_sink_payload_slot <= __main___basesoc_ethmac_slot;
            __main___basesoc_ethmac_sram42_sink_payload_length <= __main___basesoc_ethmac_sram35_length;
            __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= 1'd0;
            __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd1;
            __main___basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value <= (__main___basesoc_ethmac_slot + 1'd1);
            __main___basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce <= 1'd1;
            builder_basesoc_liteethmacsramwriter_next_state <= 1'd0;
        end
        default: begin
            if (__main___basesoc_ethmac_sram0_sink_valid) begin
                if (__main___basesoc_ethmac_sram38_sink_ready) begin
                    __main___basesoc_ethmac_write <= 1'd1;
                    __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value <= (__main___basesoc_ethmac_sram35_length + __main___basesoc_ethmac_length_inc);
                    __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce <= 1'd1;
                    if ((__main___basesoc_ethmac_sram35_length >= 11'd1530)) begin
                        builder_basesoc_liteethmacsramwriter_next_state <= 1'd1;
                    end
                    if (__main___basesoc_ethmac_sram3_sink_last) begin
                        if (((__main___basesoc_ethmac_sram6_sink_payload_error & __main___basesoc_ethmac_sram5_sink_payload_last_be) != 1'd0)) begin
                            builder_basesoc_liteethmacsramwriter_next_state <= 2'd3;
                        end else begin
                            builder_basesoc_liteethmacsramwriter_next_state <= 3'd4;
                        end
                    end
                end else begin
                    __main___basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value <= (__main___basesoc_ethmac_sram13_status + 1'd1);
                    __main___basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce <= 1'd1;
                    builder_basesoc_liteethmacsramwriter_next_state <= 2'd2;
                end
            end
        end
    endcase
end
assign __main___basesoc_ethmac_sram123_sink_valid = __main___basesoc_ethmac_start_re;
assign __main___basesoc_ethmac_sram127_sink_payload_slot = __main___basesoc_ethmac_sram100_storage;
assign __main___basesoc_ethmac_sram128_sink_payload_length = __main___basesoc_ethmac_sram102_storage;
assign __main___basesoc_ethmac_sram94_status = __main___basesoc_ethmac_sram124_sink_ready;
assign __main___basesoc_ethmac_sram97_status = __main___basesoc_ethmac_sram141_level;
always @(*) begin
    __main___basesoc_ethmac_sram88_source_payload_last_be <= 4'd0;
    if (__main___basesoc_ethmac_sram86_source_last) begin
        case (__main___basesoc_ethmac_sram134_source_payload_length[1:0])
            1'd1: begin
                __main___basesoc_ethmac_sram88_source_payload_last_be <= 1'd1;
            end
            2'd2: begin
                __main___basesoc_ethmac_sram88_source_payload_last_be <= 2'd2;
            end
            2'd3: begin
                __main___basesoc_ethmac_sram88_source_payload_last_be <= 3'd4;
            end
            3'd4: begin
                __main___basesoc_ethmac_sram88_source_payload_last_be <= 4'd8;
            end
            3'd5: begin
                __main___basesoc_ethmac_sram88_source_payload_last_be <= 5'd16;
            end
            3'd6: begin
                __main___basesoc_ethmac_sram88_source_payload_last_be <= 6'd32;
            end
            3'd7: begin
                __main___basesoc_ethmac_sram88_source_payload_last_be <= 7'd64;
            end
            default: begin
                __main___basesoc_ethmac_sram88_source_payload_last_be <= 4'd8;
            end
        endcase
    end
end
assign __main___basesoc_ethmac_sram163_re = __main___basesoc_ethmac_read;
assign __main___basesoc_ethmac_sram161_adr = __main___basesoc_ethmac_sram122_length[10:2];
assign __main___basesoc_ethmac_sram166_re = __main___basesoc_ethmac_read;
assign __main___basesoc_ethmac_sram164_adr = __main___basesoc_ethmac_sram122_length[10:2];
always @(*) begin
    __main___basesoc_ethmac_rd_data <= 32'd0;
    case (__main___basesoc_ethmac_sram133_source_payload_slot)
        1'd0: begin
            __main___basesoc_ethmac_rd_data <= __main___basesoc_ethmac_sram162_dat_r;
        end
        1'd1: begin
            __main___basesoc_ethmac_rd_data <= __main___basesoc_ethmac_sram165_dat_r;
        end
    endcase
end
assign __main___basesoc_ethmac_sram87_source_payload_data = __main___basesoc_ethmac_rd_data;
assign __main___basesoc_ethmac_sram109_event0 = __main___basesoc_ethmac_sram105_status;
assign __main___basesoc_ethmac_sram113_event0 = __main___basesoc_ethmac_sram106_pending;
always @(*) begin
    __main___basesoc_ethmac_sram108_clear <= 1'd0;
    if ((__main___basesoc_ethmac_sram116_re & __main___basesoc_ethmac_sram117_r)) begin
        __main___basesoc_ethmac_sram108_clear <= 1'd1;
    end
end
assign __main___basesoc_ethmac_sram104_irq = (__main___basesoc_ethmac_sram114_status & __main___basesoc_ethmac_sram119_storage);
assign __main___basesoc_ethmac_sram105_status = 1'd0;
assign __main___basesoc_ethmac_sram139_din = {__main___basesoc_ethmac_sram155_fifo_in_last, __main___basesoc_ethmac_sram154_fifo_in_first, __main___basesoc_ethmac_sram153_fifo_in_payload_length, __main___basesoc_ethmac_sram152_fifo_in_payload_slot};
assign {__main___basesoc_ethmac_sram159_fifo_out_last, __main___basesoc_ethmac_sram158_fifo_out_first, __main___basesoc_ethmac_sram157_fifo_out_payload_length, __main___basesoc_ethmac_sram156_fifo_out_payload_slot} = __main___basesoc_ethmac_sram140_dout;
assign __main___basesoc_ethmac_sram124_sink_ready = __main___basesoc_ethmac_sram136_writable;
assign __main___basesoc_ethmac_sram135_we = __main___basesoc_ethmac_sram123_sink_valid;
assign __main___basesoc_ethmac_sram154_fifo_in_first = __main___basesoc_ethmac_sram125_sink_first;
assign __main___basesoc_ethmac_sram155_fifo_in_last = __main___basesoc_ethmac_sram126_sink_last;
assign __main___basesoc_ethmac_sram152_fifo_in_payload_slot = __main___basesoc_ethmac_sram127_sink_payload_slot;
assign __main___basesoc_ethmac_sram153_fifo_in_payload_length = __main___basesoc_ethmac_sram128_sink_payload_length;
assign __main___basesoc_ethmac_sram129_source_valid = __main___basesoc_ethmac_sram138_readable;
assign __main___basesoc_ethmac_sram131_source_first = __main___basesoc_ethmac_sram158_fifo_out_first;
assign __main___basesoc_ethmac_sram132_source_last = __main___basesoc_ethmac_sram159_fifo_out_last;
assign __main___basesoc_ethmac_sram133_source_payload_slot = __main___basesoc_ethmac_sram156_fifo_out_payload_slot;
assign __main___basesoc_ethmac_sram134_source_payload_length = __main___basesoc_ethmac_sram157_fifo_out_payload_length;
assign __main___basesoc_ethmac_sram137_re = __main___basesoc_ethmac_sram130_source_ready;
always @(*) begin
    __main___basesoc_ethmac_sram145_adr <= 1'd0;
    if (__main___basesoc_ethmac_sram142_replace) begin
        __main___basesoc_ethmac_sram145_adr <= (__main___basesoc_ethmac_sram143_produce - 1'd1);
    end else begin
        __main___basesoc_ethmac_sram145_adr <= __main___basesoc_ethmac_sram143_produce;
    end
end
assign __main___basesoc_ethmac_sram148_dat_w = __main___basesoc_ethmac_sram139_din;
assign __main___basesoc_ethmac_sram147_we = (__main___basesoc_ethmac_sram135_we & (__main___basesoc_ethmac_sram136_writable | __main___basesoc_ethmac_sram142_replace));
assign __main___basesoc_ethmac_sram149_do_read = (__main___basesoc_ethmac_sram138_readable & __main___basesoc_ethmac_sram137_re);
assign __main___basesoc_ethmac_sram150_adr = __main___basesoc_ethmac_sram144_consume;
assign __main___basesoc_ethmac_sram140_dout = __main___basesoc_ethmac_sram151_dat_r;
assign __main___basesoc_ethmac_sram136_writable = (__main___basesoc_ethmac_sram141_level != 2'd2);
assign __main___basesoc_ethmac_sram138_readable = (__main___basesoc_ethmac_sram141_level != 1'd0);
always @(*) begin
    __main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd0;
    __main___basesoc_ethmac_read <= 1'd0;
    __main___basesoc_ethmac_sram83_source_valid <= 1'd0;
    __main___basesoc_ethmac_sram86_source_last <= 1'd0;
    __main___basesoc_ethmac_sram130_source_ready <= 1'd0;
    __main___basesoc_ethmac_sram107_trigger <= 1'd0;
    builder_basesoc_liteethmacsramreader_next_state <= 2'd0;
    __main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= 11'd0;
    builder_basesoc_liteethmacsramreader_next_state <= builder_basesoc_liteethmacsramreader_state;
    case (builder_basesoc_liteethmacsramreader_state)
        1'd1: begin
            __main___basesoc_ethmac_sram83_source_valid <= 1'd1;
            __main___basesoc_ethmac_sram86_source_last <= (__main___basesoc_ethmac_sram122_length >= __main___basesoc_ethmac_sram134_source_payload_length);
            if (__main___basesoc_ethmac_sram84_source_ready) begin
                __main___basesoc_ethmac_read <= 1'd1;
                __main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= (__main___basesoc_ethmac_sram122_length + 3'd4);
                __main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd1;
                if (__main___basesoc_ethmac_sram86_source_last) begin
                    builder_basesoc_liteethmacsramreader_next_state <= 2'd2;
                end
            end
        end
        2'd2: begin
            __main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= 1'd0;
            __main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd1;
            __main___basesoc_ethmac_sram107_trigger <= 1'd1;
            __main___basesoc_ethmac_sram130_source_ready <= 1'd1;
            builder_basesoc_liteethmacsramreader_next_state <= 1'd0;
        end
        default: begin
            if (__main___basesoc_ethmac_sram129_source_valid) begin
                __main___basesoc_ethmac_read <= 1'd1;
                __main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value <= 3'd4;
                __main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce <= 1'd1;
                builder_basesoc_liteethmacsramreader_next_state <= 1'd1;
            end
        end
    endcase
end
assign __main___basesoc_ethmac_sram167_irq = (__main___basesoc_ethmac_sram16_irq | __main___basesoc_ethmac_sram104_irq);
assign __main___basesoc_ethmac_sram2_adr = __main___basesoc_ethmac_interface0_adr[8:0];
assign __main___basesoc_ethmac_interface0_dat_r = __main___basesoc_ethmac_sram2_dat_r;
assign __main___basesoc_ethmac_sram3_adr = __main___basesoc_ethmac_interface1_adr[8:0];
assign __main___basesoc_ethmac_interface1_dat_r = __main___basesoc_ethmac_sram3_dat_r;
always @(*) begin
    __main___basesoc_ethmac_sram4_we <= 4'd0;
    __main___basesoc_ethmac_sram4_we[0] <= (((__main___basesoc_ethmac_interface2_cyc & __main___basesoc_ethmac_interface2_stb) & __main___basesoc_ethmac_interface2_we) & __main___basesoc_ethmac_interface2_sel[0]);
    __main___basesoc_ethmac_sram4_we[1] <= (((__main___basesoc_ethmac_interface2_cyc & __main___basesoc_ethmac_interface2_stb) & __main___basesoc_ethmac_interface2_we) & __main___basesoc_ethmac_interface2_sel[1]);
    __main___basesoc_ethmac_sram4_we[2] <= (((__main___basesoc_ethmac_interface2_cyc & __main___basesoc_ethmac_interface2_stb) & __main___basesoc_ethmac_interface2_we) & __main___basesoc_ethmac_interface2_sel[2]);
    __main___basesoc_ethmac_sram4_we[3] <= (((__main___basesoc_ethmac_interface2_cyc & __main___basesoc_ethmac_interface2_stb) & __main___basesoc_ethmac_interface2_we) & __main___basesoc_ethmac_interface2_sel[3]);
end
assign __main___basesoc_ethmac_sram4_adr = __main___basesoc_ethmac_interface2_adr[8:0];
assign __main___basesoc_ethmac_interface2_dat_r = __main___basesoc_ethmac_sram4_dat_r;
assign __main___basesoc_ethmac_sram4_dat_w = __main___basesoc_ethmac_interface2_dat_w;
always @(*) begin
    __main___basesoc_ethmac_sram5_we <= 4'd0;
    __main___basesoc_ethmac_sram5_we[0] <= (((__main___basesoc_ethmac_interface3_cyc & __main___basesoc_ethmac_interface3_stb) & __main___basesoc_ethmac_interface3_we) & __main___basesoc_ethmac_interface3_sel[0]);
    __main___basesoc_ethmac_sram5_we[1] <= (((__main___basesoc_ethmac_interface3_cyc & __main___basesoc_ethmac_interface3_stb) & __main___basesoc_ethmac_interface3_we) & __main___basesoc_ethmac_interface3_sel[1]);
    __main___basesoc_ethmac_sram5_we[2] <= (((__main___basesoc_ethmac_interface3_cyc & __main___basesoc_ethmac_interface3_stb) & __main___basesoc_ethmac_interface3_we) & __main___basesoc_ethmac_interface3_sel[2]);
    __main___basesoc_ethmac_sram5_we[3] <= (((__main___basesoc_ethmac_interface3_cyc & __main___basesoc_ethmac_interface3_stb) & __main___basesoc_ethmac_interface3_we) & __main___basesoc_ethmac_interface3_sel[3]);
end
assign __main___basesoc_ethmac_sram5_adr = __main___basesoc_ethmac_interface3_adr[8:0];
assign __main___basesoc_ethmac_interface3_dat_r = __main___basesoc_ethmac_sram5_dat_r;
assign __main___basesoc_ethmac_sram5_dat_w = __main___basesoc_ethmac_interface3_dat_w;
always @(*) begin
    __main___basesoc_ethmac_slave_sel <= 4'd0;
    __main___basesoc_ethmac_slave_sel[0] <= (__main___basesoc_ethmac_bus_adr[10:9] == 1'd0);
    __main___basesoc_ethmac_slave_sel[1] <= (__main___basesoc_ethmac_bus_adr[10:9] == 1'd1);
    __main___basesoc_ethmac_slave_sel[2] <= (__main___basesoc_ethmac_bus_adr[10:9] == 2'd2);
    __main___basesoc_ethmac_slave_sel[3] <= (__main___basesoc_ethmac_bus_adr[10:9] == 2'd3);
end
assign __main___basesoc_ethmac_interface0_adr = __main___basesoc_ethmac_bus_adr;
assign __main___basesoc_ethmac_interface0_dat_w = __main___basesoc_ethmac_bus_dat_w;
assign __main___basesoc_ethmac_interface0_sel = __main___basesoc_ethmac_bus_sel;
assign __main___basesoc_ethmac_interface0_stb = __main___basesoc_ethmac_bus_stb;
assign __main___basesoc_ethmac_interface0_we = __main___basesoc_ethmac_bus_we;
assign __main___basesoc_ethmac_interface0_cti = __main___basesoc_ethmac_bus_cti;
assign __main___basesoc_ethmac_interface0_bte = __main___basesoc_ethmac_bus_bte;
assign __main___basesoc_ethmac_interface1_adr = __main___basesoc_ethmac_bus_adr;
assign __main___basesoc_ethmac_interface1_dat_w = __main___basesoc_ethmac_bus_dat_w;
assign __main___basesoc_ethmac_interface1_sel = __main___basesoc_ethmac_bus_sel;
assign __main___basesoc_ethmac_interface1_stb = __main___basesoc_ethmac_bus_stb;
assign __main___basesoc_ethmac_interface1_we = __main___basesoc_ethmac_bus_we;
assign __main___basesoc_ethmac_interface1_cti = __main___basesoc_ethmac_bus_cti;
assign __main___basesoc_ethmac_interface1_bte = __main___basesoc_ethmac_bus_bte;
assign __main___basesoc_ethmac_interface2_adr = __main___basesoc_ethmac_bus_adr;
assign __main___basesoc_ethmac_interface2_dat_w = __main___basesoc_ethmac_bus_dat_w;
assign __main___basesoc_ethmac_interface2_sel = __main___basesoc_ethmac_bus_sel;
assign __main___basesoc_ethmac_interface2_stb = __main___basesoc_ethmac_bus_stb;
assign __main___basesoc_ethmac_interface2_we = __main___basesoc_ethmac_bus_we;
assign __main___basesoc_ethmac_interface2_cti = __main___basesoc_ethmac_bus_cti;
assign __main___basesoc_ethmac_interface2_bte = __main___basesoc_ethmac_bus_bte;
assign __main___basesoc_ethmac_interface3_adr = __main___basesoc_ethmac_bus_adr;
assign __main___basesoc_ethmac_interface3_dat_w = __main___basesoc_ethmac_bus_dat_w;
assign __main___basesoc_ethmac_interface3_sel = __main___basesoc_ethmac_bus_sel;
assign __main___basesoc_ethmac_interface3_stb = __main___basesoc_ethmac_bus_stb;
assign __main___basesoc_ethmac_interface3_we = __main___basesoc_ethmac_bus_we;
assign __main___basesoc_ethmac_interface3_cti = __main___basesoc_ethmac_bus_cti;
assign __main___basesoc_ethmac_interface3_bte = __main___basesoc_ethmac_bus_bte;
assign __main___basesoc_ethmac_interface0_cyc = (__main___basesoc_ethmac_bus_cyc & __main___basesoc_ethmac_slave_sel[0]);
assign __main___basesoc_ethmac_interface1_cyc = (__main___basesoc_ethmac_bus_cyc & __main___basesoc_ethmac_slave_sel[1]);
assign __main___basesoc_ethmac_interface2_cyc = (__main___basesoc_ethmac_bus_cyc & __main___basesoc_ethmac_slave_sel[2]);
assign __main___basesoc_ethmac_interface3_cyc = (__main___basesoc_ethmac_bus_cyc & __main___basesoc_ethmac_slave_sel[3]);
assign __main___basesoc_ethmac_bus_ack = (((__main___basesoc_ethmac_interface0_ack | __main___basesoc_ethmac_interface1_ack) | __main___basesoc_ethmac_interface2_ack) | __main___basesoc_ethmac_interface3_ack);
assign __main___basesoc_ethmac_bus_err = (((__main___basesoc_ethmac_interface0_err | __main___basesoc_ethmac_interface1_err) | __main___basesoc_ethmac_interface2_err) | __main___basesoc_ethmac_interface3_err);
assign __main___basesoc_ethmac_bus_dat_r = (((({32{__main___basesoc_ethmac_slave_sel_r[0]}} & __main___basesoc_ethmac_interface0_dat_r) | ({32{__main___basesoc_ethmac_slave_sel_r[1]}} & __main___basesoc_ethmac_interface1_dat_r)) | ({32{__main___basesoc_ethmac_slave_sel_r[2]}} & __main___basesoc_ethmac_interface2_dat_r)) | ({32{__main___basesoc_ethmac_slave_sel_r[3]}} & __main___basesoc_ethmac_interface3_dat_r));
assign __main___start0 = __main___start1;
assign __main___length0 = __main___length1;
assign __main___done1 = __main___done0;
assign __main___mode0 = 1'd0;
assign __main___mosi = __main___mosi_storage;
assign __main___miso_status = __main___miso;
assign __main___cs = __main___sel;
assign __main___cs_mode = __main___mode1;
assign __main___loopback = __main___mode2;
assign __main___clk_rise = (__main___clk_divider1 == (__main___clk_divider0[15:1] - 1'd1));
assign __main___clk_fall = (__main___clk_divider1 == (__main___clk_divider0 - 1'd1));
assign __main___clk_divider0 = __main___spimaster_storage;
always @(*) begin
    __main___done0 <= 1'd0;
    __main___irq <= 1'd0;
    __main___miso_latch <= 1'd0;
    builder_basesoc_spimaster_next_state <= 2'd0;
    __main___clk_enable <= 1'd0;
    __main___count_spimaster_next_value <= 3'd0;
    __main___count_spimaster_next_value_ce <= 1'd0;
    __main___mosi_latch <= 1'd0;
    __main___xfer_enable <= 1'd0;
    builder_basesoc_spimaster_next_state <= builder_basesoc_spimaster_state;
    case (builder_basesoc_spimaster_state)
        1'd1: begin
            __main___count_spimaster_next_value <= 1'd0;
            __main___count_spimaster_next_value_ce <= 1'd1;
            if (__main___clk_fall) begin
                __main___xfer_enable <= 1'd1;
                builder_basesoc_spimaster_next_state <= 2'd2;
            end
        end
        2'd2: begin
            __main___clk_enable <= 1'd1;
            __main___xfer_enable <= 1'd1;
            if (__main___clk_fall) begin
                __main___count_spimaster_next_value <= (__main___count + 1'd1);
                __main___count_spimaster_next_value_ce <= 1'd1;
                if ((__main___count == (__main___length0 - 1'd1))) begin
                    builder_basesoc_spimaster_next_state <= 2'd3;
                end
            end
        end
        2'd3: begin
            __main___xfer_enable <= 1'd1;
            if (__main___clk_rise) begin
                __main___miso_latch <= 1'd1;
                __main___irq <= 1'd1;
                builder_basesoc_spimaster_next_state <= 1'd0;
            end
        end
        default: begin
            __main___done0 <= 1'd1;
            if (__main___start0) begin
                __main___done0 <= 1'd0;
                __main___mosi_latch <= 1'd1;
                builder_basesoc_spimaster_next_state <= 1'd1;
            end
        end
    endcase
end
assign {user_led0} = __main___leds_storage;
always @(*) begin
    builder_basesoc_wishbone2csr_next_state <= 2'd0;
    builder_basesoc_dat_w_wishbone2csr_next_value0 <= 32'd0;
    builder_basesoc_dat_w_wishbone2csr_next_value_ce0 <= 1'd0;
    builder_basesoc_adr_wishbone2csr_next_value1 <= 14'd0;
    builder_basesoc_wishbone_dat_r <= 32'd0;
    builder_basesoc_adr_wishbone2csr_next_value_ce1 <= 1'd0;
    builder_basesoc_we_wishbone2csr_next_value2 <= 1'd0;
    builder_basesoc_we_wishbone2csr_next_value_ce2 <= 1'd0;
    builder_basesoc_wishbone_ack <= 1'd0;
    builder_basesoc_wishbone2csr_next_state <= builder_basesoc_wishbone2csr_state;
    case (builder_basesoc_wishbone2csr_state)
        1'd1: begin
            builder_basesoc_adr_wishbone2csr_next_value1 <= 1'd0;
            builder_basesoc_adr_wishbone2csr_next_value_ce1 <= 1'd1;
            builder_basesoc_we_wishbone2csr_next_value2 <= 1'd0;
            builder_basesoc_we_wishbone2csr_next_value_ce2 <= 1'd1;
            builder_basesoc_wishbone2csr_next_state <= 2'd2;
        end
        2'd2: begin
            builder_basesoc_wishbone_ack <= 1'd1;
            builder_basesoc_wishbone_dat_r <= builder_basesoc_dat_r;
            builder_basesoc_wishbone2csr_next_state <= 1'd0;
        end
        default: begin
            builder_basesoc_dat_w_wishbone2csr_next_value0 <= builder_basesoc_wishbone_dat_w;
            builder_basesoc_dat_w_wishbone2csr_next_value_ce0 <= 1'd1;
            if ((builder_basesoc_wishbone_cyc & builder_basesoc_wishbone_stb)) begin
                builder_basesoc_adr_wishbone2csr_next_value1 <= builder_basesoc_wishbone_adr;
                builder_basesoc_adr_wishbone2csr_next_value_ce1 <= 1'd1;
                builder_basesoc_we_wishbone2csr_next_value2 <= (builder_basesoc_wishbone_we & (builder_basesoc_wishbone_sel != 1'd0));
                builder_basesoc_we_wishbone2csr_next_value_ce2 <= 1'd1;
                builder_basesoc_wishbone2csr_next_state <= 1'd1;
            end
        end
    endcase
end
assign builder_csr_bankarray_csrbank0_sel = (builder_csr_bankarray_interface0_bank_bus_adr[13:9] == 2'd2);
assign builder_csr_bankarray_csrbank0_reset0_r = builder_csr_bankarray_interface0_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank0_reset0_we <= 1'd0;
    builder_csr_bankarray_csrbank0_reset0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank0_reset0_re <= builder_csr_bankarray_interface0_bank_bus_we;
        builder_csr_bankarray_csrbank0_reset0_we <= (~builder_csr_bankarray_interface0_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank0_scratch0_r = builder_csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank0_scratch0_re <= 1'd0;
    builder_csr_bankarray_csrbank0_scratch0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank0_scratch0_re <= builder_csr_bankarray_interface0_bank_bus_we;
        builder_csr_bankarray_csrbank0_scratch0_we <= (~builder_csr_bankarray_interface0_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank0_bus_errors_r = builder_csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank0_bus_errors_re <= 1'd0;
    builder_csr_bankarray_csrbank0_bus_errors_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank0_sel & (builder_csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
        builder_csr_bankarray_csrbank0_bus_errors_re <= builder_csr_bankarray_interface0_bank_bus_we;
        builder_csr_bankarray_csrbank0_bus_errors_we <= (~builder_csr_bankarray_interface0_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sel = (builder_csr_bankarray_interface1_bank_bus_adr[13:9] == 2'd3);
assign builder_csr_bankarray_csrbank1_sram_writer_slot_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_writer_slot_re <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_writer_slot_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank1_sram_writer_slot_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_writer_slot_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_writer_length_r = builder_csr_bankarray_interface1_bank_bus_dat_w[10:0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_writer_length_re <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_writer_length_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank1_sram_writer_length_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_writer_length_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_writer_errors_r = builder_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_writer_errors_we <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_writer_errors_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
        builder_csr_bankarray_csrbank1_sram_writer_errors_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_writer_errors_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_writer_ev_status_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_writer_ev_status_we <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_writer_ev_status_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csr_bankarray_csrbank1_sram_writer_ev_status_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_writer_ev_status_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_writer_ev_pending_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_writer_ev_pending_re <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_writer_ev_pending_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd4))) begin
        builder_csr_bankarray_csrbank1_sram_writer_ev_pending_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_writer_ev_pending_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_we <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd5))) begin
        builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign __main___basesoc_ethmac_start_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    __main___basesoc_ethmac_start_re <= 1'd0;
    __main___basesoc_ethmac_start_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd6))) begin
        __main___basesoc_ethmac_start_re <= builder_csr_bankarray_interface1_bank_bus_we;
        __main___basesoc_ethmac_start_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_reader_ready_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_reader_ready_we <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_reader_ready_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 3'd7))) begin
        builder_csr_bankarray_csrbank1_sram_reader_ready_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_reader_ready_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_reader_level_r = builder_csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_reader_level_re <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_reader_level_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd8))) begin
        builder_csr_bankarray_csrbank1_sram_reader_level_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_reader_level_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_reader_slot0_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_reader_slot0_re <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_reader_slot0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd9))) begin
        builder_csr_bankarray_csrbank1_sram_reader_slot0_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_reader_slot0_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_reader_length0_r = builder_csr_bankarray_interface1_bank_bus_dat_w[10:0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_reader_length0_we <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_reader_length0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd10))) begin
        builder_csr_bankarray_csrbank1_sram_reader_length0_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_reader_length0_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_reader_ev_status_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_reader_ev_status_re <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_reader_ev_status_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd11))) begin
        builder_csr_bankarray_csrbank1_sram_reader_ev_status_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_reader_ev_status_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_reader_ev_pending_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_reader_ev_pending_re <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_reader_ev_pending_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd12))) begin
        builder_csr_bankarray_csrbank1_sram_reader_ev_pending_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_reader_ev_pending_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_we <= 1'd0;
    builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd13))) begin
        builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_preamble_crc_r = builder_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank1_preamble_crc_re <= 1'd0;
    builder_csr_bankarray_csrbank1_preamble_crc_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd14))) begin
        builder_csr_bankarray_csrbank1_preamble_crc_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_preamble_crc_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_r = builder_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_re <= 1'd0;
    builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 4'd15))) begin
        builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_r = builder_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_we <= 1'd0;
    builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank1_sel & (builder_csr_bankarray_interface1_bank_bus_adr[8:0] == 5'd16))) begin
        builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_re <= builder_csr_bankarray_interface1_bank_bus_we;
        builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_we <= (~builder_csr_bankarray_interface1_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank1_sram_writer_slot_w = __main___basesoc_ethmac_sram7_status;
assign __main___basesoc_ethmac_sram8_we = builder_csr_bankarray_csrbank1_sram_writer_slot_we;
assign builder_csr_bankarray_csrbank1_sram_writer_length_w = __main___basesoc_ethmac_sram10_status[10:0];
assign __main___basesoc_ethmac_sram11_we = builder_csr_bankarray_csrbank1_sram_writer_length_we;
assign builder_csr_bankarray_csrbank1_sram_writer_errors_w = __main___basesoc_ethmac_sram13_status[31:0];
assign __main___basesoc_ethmac_sram14_we = builder_csr_bankarray_csrbank1_sram_writer_errors_we;
assign __main___basesoc_ethmac_sram22_status = __main___basesoc_ethmac_sram21_available;
assign builder_csr_bankarray_csrbank1_sram_writer_ev_status_w = __main___basesoc_ethmac_sram22_status;
assign __main___basesoc_ethmac_sram23_we = builder_csr_bankarray_csrbank1_sram_writer_ev_status_we;
assign __main___basesoc_ethmac_sram26_status = __main___basesoc_ethmac_sram25_available;
assign builder_csr_bankarray_csrbank1_sram_writer_ev_pending_w = __main___basesoc_ethmac_sram26_status;
assign __main___basesoc_ethmac_sram27_we = builder_csr_bankarray_csrbank1_sram_writer_ev_pending_we;
assign __main___basesoc_ethmac_sram30_available = __main___basesoc_ethmac_sram31_storage;
assign builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_w = __main___basesoc_ethmac_sram31_storage;
assign builder_csr_bankarray_csrbank1_sram_reader_ready_w = __main___basesoc_ethmac_sram94_status;
assign __main___basesoc_ethmac_sram95_we = builder_csr_bankarray_csrbank1_sram_reader_ready_we;
assign builder_csr_bankarray_csrbank1_sram_reader_level_w = __main___basesoc_ethmac_sram97_status[1:0];
assign __main___basesoc_ethmac_sram98_we = builder_csr_bankarray_csrbank1_sram_reader_level_we;
assign builder_csr_bankarray_csrbank1_sram_reader_slot0_w = __main___basesoc_ethmac_sram100_storage;
assign builder_csr_bankarray_csrbank1_sram_reader_length0_w = __main___basesoc_ethmac_sram102_storage[10:0];
assign __main___basesoc_ethmac_sram110_status = __main___basesoc_ethmac_sram109_event0;
assign builder_csr_bankarray_csrbank1_sram_reader_ev_status_w = __main___basesoc_ethmac_sram110_status;
assign __main___basesoc_ethmac_sram111_we = builder_csr_bankarray_csrbank1_sram_reader_ev_status_we;
assign __main___basesoc_ethmac_sram114_status = __main___basesoc_ethmac_sram113_event0;
assign builder_csr_bankarray_csrbank1_sram_reader_ev_pending_w = __main___basesoc_ethmac_sram114_status;
assign __main___basesoc_ethmac_sram115_we = builder_csr_bankarray_csrbank1_sram_reader_ev_pending_we;
assign __main___basesoc_ethmac_sram118_event0 = __main___basesoc_ethmac_sram119_storage;
assign builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_w = __main___basesoc_ethmac_sram119_storage;
assign builder_csr_bankarray_csrbank1_preamble_crc_w = __main___basesoc_ethmac_status;
assign __main___basesoc_ethmac_we = builder_csr_bankarray_csrbank1_preamble_crc_we;
assign builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_w = __main___basesoc_ethmac_preamble_errors_status[31:0];
assign __main___basesoc_ethmac_preamble_errors_we = builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_we;
assign builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_w = __main___basesoc_ethmac_crc_errors_status[31:0];
assign __main___basesoc_ethmac_crc_errors_we = builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_we;
assign builder_csr_bankarray_csrbank2_sel = (builder_csr_bankarray_interface2_bank_bus_adr[13:9] == 3'd4);
assign builder_csr_bankarray_csrbank2_crg_reset0_r = builder_csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank2_crg_reset0_we <= 1'd0;
    builder_csr_bankarray_csrbank2_crg_reset0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank2_sel & (builder_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank2_crg_reset0_re <= builder_csr_bankarray_interface2_bank_bus_we;
        builder_csr_bankarray_csrbank2_crg_reset0_we <= (~builder_csr_bankarray_interface2_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank2_crg_reset0_w = __main___ethphy_reset_storage;
assign builder_csr_bankarray_csrbank3_sel = (builder_csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd5);
assign builder_csr_bankarray_csrbank3_w0_r = builder_csr_bankarray_interface3_bank_bus_dat_w[2:0];
always @(*) begin
    builder_csr_bankarray_csrbank3_w0_we <= 1'd0;
    builder_csr_bankarray_csrbank3_w0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank3_w0_re <= builder_csr_bankarray_interface3_bank_bus_we;
        builder_csr_bankarray_csrbank3_w0_we <= (~builder_csr_bankarray_interface3_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank3_r_r = builder_csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank3_r_re <= 1'd0;
    builder_csr_bankarray_csrbank3_r_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank3_sel & (builder_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank3_r_re <= builder_csr_bankarray_interface3_bank_bus_we;
        builder_csr_bankarray_csrbank3_r_we <= (~builder_csr_bankarray_interface3_bank_bus_we);
    end
end
assign __main___scl = __main____w_storage[0];
assign __main___oe = __main____w_storage[1];
assign __main___sda0 = __main____w_storage[2];
assign builder_csr_bankarray_csrbank3_w0_w = __main____w_storage[2:0];
assign __main____r_status = __main___sda1;
assign builder_csr_bankarray_csrbank3_r_w = __main____r_status;
assign __main____r_we = builder_csr_bankarray_csrbank3_r_we;
assign builder_csr_bankarray_sel = (builder_csr_bankarray_sram_bus_adr[13:9] == 3'd6);
always @(*) begin
    builder_csr_bankarray_sram_bus_dat_r <= 32'd0;
    if (builder_csr_bankarray_sel_r) begin
        builder_csr_bankarray_sram_bus_dat_r <= builder_csr_bankarray_dat_r;
    end
end
assign builder_csr_bankarray_adr = builder_csr_bankarray_sram_bus_adr[5:0];
assign builder_csr_bankarray_csrbank4_sel = (builder_csr_bankarray_interface4_bank_bus_adr[13:9] == 1'd1);
assign builder_csr_bankarray_csrbank4_out0_r = builder_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank4_out0_we <= 1'd0;
    builder_csr_bankarray_csrbank4_out0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank4_sel & (builder_csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank4_out0_re <= builder_csr_bankarray_interface4_bank_bus_we;
        builder_csr_bankarray_csrbank4_out0_we <= (~builder_csr_bankarray_interface4_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank4_out0_w = __main___leds_storage;
assign builder_csr_bankarray_csrbank5_sel = (builder_csr_bankarray_interface5_bank_bus_adr[13:9] == 3'd7);
assign builder_csr_bankarray_csrbank5_dfii_control0_r = builder_csr_bankarray_interface5_bank_bus_dat_w[3:0];
always @(*) begin
    builder_csr_bankarray_csrbank5_dfii_control0_we <= 1'd0;
    builder_csr_bankarray_csrbank5_dfii_control0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank5_dfii_control0_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_dfii_control0_we <= (~builder_csr_bankarray_interface5_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank5_dfii_pi0_command0_r = builder_csr_bankarray_interface5_bank_bus_dat_w[5:0];
always @(*) begin
    builder_csr_bankarray_csrbank5_dfii_pi0_command0_re <= 1'd0;
    builder_csr_bankarray_csrbank5_dfii_pi0_command0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank5_dfii_pi0_command0_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_dfii_pi0_command0_we <= (~builder_csr_bankarray_interface5_bank_bus_we);
    end
end
assign __main___basesoc_sdram_command_issue_r = builder_csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    __main___basesoc_sdram_command_issue_re <= 1'd0;
    __main___basesoc_sdram_command_issue_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd2))) begin
        __main___basesoc_sdram_command_issue_re <= builder_csr_bankarray_interface5_bank_bus_we;
        __main___basesoc_sdram_command_issue_we <= (~builder_csr_bankarray_interface5_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank5_dfii_pi0_address0_r = builder_csr_bankarray_interface5_bank_bus_dat_w[10:0];
always @(*) begin
    builder_csr_bankarray_csrbank5_dfii_pi0_address0_we <= 1'd0;
    builder_csr_bankarray_csrbank5_dfii_pi0_address0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csr_bankarray_csrbank5_dfii_pi0_address0_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_dfii_pi0_address0_we <= (~builder_csr_bankarray_interface5_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_r = builder_csr_bankarray_interface5_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_re <= 1'd0;
    builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd4))) begin
        builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_we <= (~builder_csr_bankarray_interface5_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_r = builder_csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_re <= 1'd0;
    builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd5))) begin
        builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_we <= (~builder_csr_bankarray_interface5_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank5_dfii_pi0_rddata_r = builder_csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank5_dfii_pi0_rddata_we <= 1'd0;
    builder_csr_bankarray_csrbank5_dfii_pi0_rddata_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank5_sel & (builder_csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd6))) begin
        builder_csr_bankarray_csrbank5_dfii_pi0_rddata_re <= builder_csr_bankarray_interface5_bank_bus_we;
        builder_csr_bankarray_csrbank5_dfii_pi0_rddata_we <= (~builder_csr_bankarray_interface5_bank_bus_we);
    end
end
assign __main___basesoc_sdram_sel = __main___basesoc_sdram_storage[0];
assign __main___basesoc_sdram_cke = __main___basesoc_sdram_storage[1];
assign __main___basesoc_sdram_odt = __main___basesoc_sdram_storage[2];
assign __main___basesoc_sdram_reset_n = __main___basesoc_sdram_storage[3];
assign builder_csr_bankarray_csrbank5_dfii_control0_w = __main___basesoc_sdram_storage[3:0];
assign __main___basesoc_sdram_csrfield_cs = __main___basesoc_sdram_command_storage[0];
assign __main___basesoc_sdram_csrfield_we = __main___basesoc_sdram_command_storage[1];
assign __main___basesoc_sdram_csrfield_cas = __main___basesoc_sdram_command_storage[2];
assign __main___basesoc_sdram_csrfield_ras = __main___basesoc_sdram_command_storage[3];
assign __main___basesoc_sdram_csrfield_wren = __main___basesoc_sdram_command_storage[4];
assign __main___basesoc_sdram_csrfield_rden = __main___basesoc_sdram_command_storage[5];
assign builder_csr_bankarray_csrbank5_dfii_pi0_command0_w = __main___basesoc_sdram_command_storage[5:0];
assign builder_csr_bankarray_csrbank5_dfii_pi0_address0_w = __main___basesoc_sdram_address_storage[10:0];
assign builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_w = __main___basesoc_sdram_baddress_storage[1:0];
assign builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_w = __main___basesoc_sdram_wrdata_storage[31:0];
assign builder_csr_bankarray_csrbank5_dfii_pi0_rddata_w = __main___basesoc_sdram_rddata_status[31:0];
assign __main___basesoc_sdram_rddata_we = builder_csr_bankarray_csrbank5_dfii_pi0_rddata_we;
assign builder_csr_bankarray_csrbank6_sel = (builder_csr_bankarray_interface6_bank_bus_adr[13:9] == 1'd0);
assign builder_csr_bankarray_csrbank6_control0_r = builder_csr_bankarray_interface6_bank_bus_dat_w[15:0];
always @(*) begin
    builder_csr_bankarray_csrbank6_control0_re <= 1'd0;
    builder_csr_bankarray_csrbank6_control0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank6_sel & (builder_csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank6_control0_re <= builder_csr_bankarray_interface6_bank_bus_we;
        builder_csr_bankarray_csrbank6_control0_we <= (~builder_csr_bankarray_interface6_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank6_status_r = builder_csr_bankarray_interface6_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank6_status_re <= 1'd0;
    builder_csr_bankarray_csrbank6_status_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank6_sel & (builder_csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank6_status_re <= builder_csr_bankarray_interface6_bank_bus_we;
        builder_csr_bankarray_csrbank6_status_we <= (~builder_csr_bankarray_interface6_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank6_mosi0_r = builder_csr_bankarray_interface6_bank_bus_dat_w[7:0];
always @(*) begin
    builder_csr_bankarray_csrbank6_mosi0_we <= 1'd0;
    builder_csr_bankarray_csrbank6_mosi0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank6_sel & (builder_csr_bankarray_interface6_bank_bus_adr[8:0] == 2'd2))) begin
        builder_csr_bankarray_csrbank6_mosi0_re <= builder_csr_bankarray_interface6_bank_bus_we;
        builder_csr_bankarray_csrbank6_mosi0_we <= (~builder_csr_bankarray_interface6_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank6_miso_r = builder_csr_bankarray_interface6_bank_bus_dat_w[7:0];
always @(*) begin
    builder_csr_bankarray_csrbank6_miso_re <= 1'd0;
    builder_csr_bankarray_csrbank6_miso_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank6_sel & (builder_csr_bankarray_interface6_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csr_bankarray_csrbank6_miso_re <= builder_csr_bankarray_interface6_bank_bus_we;
        builder_csr_bankarray_csrbank6_miso_we <= (~builder_csr_bankarray_interface6_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank6_cs0_r = builder_csr_bankarray_interface6_bank_bus_dat_w[16:0];
always @(*) begin
    builder_csr_bankarray_csrbank6_cs0_re <= 1'd0;
    builder_csr_bankarray_csrbank6_cs0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank6_sel & (builder_csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd4))) begin
        builder_csr_bankarray_csrbank6_cs0_re <= builder_csr_bankarray_interface6_bank_bus_we;
        builder_csr_bankarray_csrbank6_cs0_we <= (~builder_csr_bankarray_interface6_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank6_loopback0_r = builder_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank6_loopback0_we <= 1'd0;
    builder_csr_bankarray_csrbank6_loopback0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank6_sel & (builder_csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd5))) begin
        builder_csr_bankarray_csrbank6_loopback0_re <= builder_csr_bankarray_interface6_bank_bus_we;
        builder_csr_bankarray_csrbank6_loopback0_we <= (~builder_csr_bankarray_interface6_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank6_clk_divider0_r = builder_csr_bankarray_interface6_bank_bus_dat_w[15:0];
always @(*) begin
    builder_csr_bankarray_csrbank6_clk_divider0_re <= 1'd0;
    builder_csr_bankarray_csrbank6_clk_divider0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank6_sel & (builder_csr_bankarray_interface6_bank_bus_adr[8:0] == 3'd6))) begin
        builder_csr_bankarray_csrbank6_clk_divider0_re <= builder_csr_bankarray_interface6_bank_bus_we;
        builder_csr_bankarray_csrbank6_clk_divider0_we <= (~builder_csr_bankarray_interface6_bank_bus_we);
    end
end
always @(*) begin
    __main___start1 <= 1'd0;
    if (__main___control_re) begin
        __main___start1 <= __main___control_storage[0];
    end
end
assign __main___length1 = __main___control_storage[15:8];
assign builder_csr_bankarray_csrbank6_control0_w = __main___control_storage[15:0];
always @(*) begin
    __main___status_status <= 2'd0;
    __main___status_status[0] <= __main___done1;
    __main___status_status[1] <= __main___mode0;
end
assign builder_csr_bankarray_csrbank6_status_w = __main___status_status[1:0];
assign __main___status_we = builder_csr_bankarray_csrbank6_status_we;
assign builder_csr_bankarray_csrbank6_mosi0_w = __main___mosi_storage[7:0];
assign builder_csr_bankarray_csrbank6_miso_w = __main___miso_status[7:0];
assign __main___miso_we = builder_csr_bankarray_csrbank6_miso_we;
assign __main___sel = __main___cs_storage[0];
assign __main___mode1 = __main___cs_storage[16];
assign builder_csr_bankarray_csrbank6_cs0_w = __main___cs_storage[16:0];
assign __main___mode2 = __main___loopback_storage;
assign builder_csr_bankarray_csrbank6_loopback0_w = __main___loopback_storage;
assign builder_csr_bankarray_csrbank6_clk_divider0_w = __main___spimaster_storage[15:0];
assign builder_csr_bankarray_csrbank7_sel = (builder_csr_bankarray_interface7_bank_bus_adr[13:9] == 4'd8);
assign builder_csr_bankarray_csrbank7_load0_r = builder_csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank7_load0_re <= 1'd0;
    builder_csr_bankarray_csrbank7_load0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank7_sel & (builder_csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd0))) begin
        builder_csr_bankarray_csrbank7_load0_re <= builder_csr_bankarray_interface7_bank_bus_we;
        builder_csr_bankarray_csrbank7_load0_we <= (~builder_csr_bankarray_interface7_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank7_reload0_r = builder_csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank7_reload0_we <= 1'd0;
    builder_csr_bankarray_csrbank7_reload0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank7_sel & (builder_csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank7_reload0_re <= builder_csr_bankarray_interface7_bank_bus_we;
        builder_csr_bankarray_csrbank7_reload0_we <= (~builder_csr_bankarray_interface7_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank7_en0_r = builder_csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank7_en0_re <= 1'd0;
    builder_csr_bankarray_csrbank7_en0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank7_sel & (builder_csr_bankarray_interface7_bank_bus_adr[8:0] == 2'd2))) begin
        builder_csr_bankarray_csrbank7_en0_re <= builder_csr_bankarray_interface7_bank_bus_we;
        builder_csr_bankarray_csrbank7_en0_we <= (~builder_csr_bankarray_interface7_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank7_update_value0_r = builder_csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank7_update_value0_we <= 1'd0;
    builder_csr_bankarray_csrbank7_update_value0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank7_sel & (builder_csr_bankarray_interface7_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csr_bankarray_csrbank7_update_value0_re <= builder_csr_bankarray_interface7_bank_bus_we;
        builder_csr_bankarray_csrbank7_update_value0_we <= (~builder_csr_bankarray_interface7_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank7_value_r = builder_csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank7_value_we <= 1'd0;
    builder_csr_bankarray_csrbank7_value_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank7_sel & (builder_csr_bankarray_interface7_bank_bus_adr[8:0] == 3'd4))) begin
        builder_csr_bankarray_csrbank7_value_re <= builder_csr_bankarray_interface7_bank_bus_we;
        builder_csr_bankarray_csrbank7_value_we <= (~builder_csr_bankarray_interface7_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank7_ev_status_r = builder_csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank7_ev_status_re <= 1'd0;
    builder_csr_bankarray_csrbank7_ev_status_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank7_sel & (builder_csr_bankarray_interface7_bank_bus_adr[8:0] == 3'd5))) begin
        builder_csr_bankarray_csrbank7_ev_status_re <= builder_csr_bankarray_interface7_bank_bus_we;
        builder_csr_bankarray_csrbank7_ev_status_we <= (~builder_csr_bankarray_interface7_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank7_ev_pending_r = builder_csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank7_ev_pending_re <= 1'd0;
    builder_csr_bankarray_csrbank7_ev_pending_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank7_sel & (builder_csr_bankarray_interface7_bank_bus_adr[8:0] == 3'd6))) begin
        builder_csr_bankarray_csrbank7_ev_pending_re <= builder_csr_bankarray_interface7_bank_bus_we;
        builder_csr_bankarray_csrbank7_ev_pending_we <= (~builder_csr_bankarray_interface7_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank7_ev_enable0_r = builder_csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank7_ev_enable0_we <= 1'd0;
    builder_csr_bankarray_csrbank7_ev_enable0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank7_sel & (builder_csr_bankarray_interface7_bank_bus_adr[8:0] == 3'd7))) begin
        builder_csr_bankarray_csrbank7_ev_enable0_re <= builder_csr_bankarray_interface7_bank_bus_we;
        builder_csr_bankarray_csrbank7_ev_enable0_we <= (~builder_csr_bankarray_interface7_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank7_uptime_latch0_r = builder_csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank7_uptime_latch0_re <= 1'd0;
    builder_csr_bankarray_csrbank7_uptime_latch0_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank7_sel & (builder_csr_bankarray_interface7_bank_bus_adr[8:0] == 4'd8))) begin
        builder_csr_bankarray_csrbank7_uptime_latch0_re <= builder_csr_bankarray_interface7_bank_bus_we;
        builder_csr_bankarray_csrbank7_uptime_latch0_we <= (~builder_csr_bankarray_interface7_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank7_uptime_cycles1_r = builder_csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank7_uptime_cycles1_we <= 1'd0;
    builder_csr_bankarray_csrbank7_uptime_cycles1_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank7_sel & (builder_csr_bankarray_interface7_bank_bus_adr[8:0] == 4'd9))) begin
        builder_csr_bankarray_csrbank7_uptime_cycles1_re <= builder_csr_bankarray_interface7_bank_bus_we;
        builder_csr_bankarray_csrbank7_uptime_cycles1_we <= (~builder_csr_bankarray_interface7_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank7_uptime_cycles0_r = builder_csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
    builder_csr_bankarray_csrbank7_uptime_cycles0_we <= 1'd0;
    builder_csr_bankarray_csrbank7_uptime_cycles0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank7_sel & (builder_csr_bankarray_interface7_bank_bus_adr[8:0] == 4'd10))) begin
        builder_csr_bankarray_csrbank7_uptime_cycles0_re <= builder_csr_bankarray_interface7_bank_bus_we;
        builder_csr_bankarray_csrbank7_uptime_cycles0_we <= (~builder_csr_bankarray_interface7_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank7_load0_w = __main___basesoc_timer_load_storage[31:0];
assign builder_csr_bankarray_csrbank7_reload0_w = __main___basesoc_timer_reload_storage[31:0];
assign builder_csr_bankarray_csrbank7_en0_w = __main___basesoc_timer_en_storage;
assign builder_csr_bankarray_csrbank7_update_value0_w = __main___basesoc_timer_update_value_storage;
assign builder_csr_bankarray_csrbank7_value_w = __main___basesoc_timer_value_status[31:0];
assign __main___basesoc_timer_value_we = builder_csr_bankarray_csrbank7_value_we;
assign __main___basesoc_timer_status_status = __main___basesoc_timer_zero0;
assign builder_csr_bankarray_csrbank7_ev_status_w = __main___basesoc_timer_status_status;
assign __main___basesoc_timer_status_we = builder_csr_bankarray_csrbank7_ev_status_we;
assign __main___basesoc_timer_pending_status = __main___basesoc_timer_zero1;
assign builder_csr_bankarray_csrbank7_ev_pending_w = __main___basesoc_timer_pending_status;
assign __main___basesoc_timer_pending_we = builder_csr_bankarray_csrbank7_ev_pending_we;
assign __main___basesoc_timer_zero2 = __main___basesoc_timer_enable_storage;
assign builder_csr_bankarray_csrbank7_ev_enable0_w = __main___basesoc_timer_enable_storage;
assign builder_csr_bankarray_csrbank7_uptime_latch0_w = __main___basesoc_uptime_latch_storage;
assign builder_csr_bankarray_csrbank7_uptime_cycles1_w = __main___basesoc_uptime_cycles_status[63:32];
assign builder_csr_bankarray_csrbank7_uptime_cycles0_w = __main___basesoc_uptime_cycles_status[31:0];
assign __main___basesoc_uptime_cycles_we = builder_csr_bankarray_csrbank7_uptime_cycles0_we;
assign builder_csr_bankarray_csrbank8_sel = (builder_csr_bankarray_interface8_bank_bus_adr[13:9] == 4'd9);
assign __main___basesoc_uart_rxtx_r = builder_csr_bankarray_interface8_bank_bus_dat_w[7:0];
always @(*) begin
    __main___basesoc_uart_rxtx_re <= 1'd0;
    __main___basesoc_uart_rxtx_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank8_sel & (builder_csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd0))) begin
        __main___basesoc_uart_rxtx_re <= builder_csr_bankarray_interface8_bank_bus_we;
        __main___basesoc_uart_rxtx_we <= (~builder_csr_bankarray_interface8_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank8_txfull_r = builder_csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank8_txfull_we <= 1'd0;
    builder_csr_bankarray_csrbank8_txfull_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank8_sel & (builder_csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd1))) begin
        builder_csr_bankarray_csrbank8_txfull_re <= builder_csr_bankarray_interface8_bank_bus_we;
        builder_csr_bankarray_csrbank8_txfull_we <= (~builder_csr_bankarray_interface8_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank8_rxempty_r = builder_csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank8_rxempty_we <= 1'd0;
    builder_csr_bankarray_csrbank8_rxempty_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank8_sel & (builder_csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd2))) begin
        builder_csr_bankarray_csrbank8_rxempty_re <= builder_csr_bankarray_interface8_bank_bus_we;
        builder_csr_bankarray_csrbank8_rxempty_we <= (~builder_csr_bankarray_interface8_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank8_ev_status_r = builder_csr_bankarray_interface8_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank8_ev_status_re <= 1'd0;
    builder_csr_bankarray_csrbank8_ev_status_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank8_sel & (builder_csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd3))) begin
        builder_csr_bankarray_csrbank8_ev_status_re <= builder_csr_bankarray_interface8_bank_bus_we;
        builder_csr_bankarray_csrbank8_ev_status_we <= (~builder_csr_bankarray_interface8_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank8_ev_pending_r = builder_csr_bankarray_interface8_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank8_ev_pending_re <= 1'd0;
    builder_csr_bankarray_csrbank8_ev_pending_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank8_sel & (builder_csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd4))) begin
        builder_csr_bankarray_csrbank8_ev_pending_re <= builder_csr_bankarray_interface8_bank_bus_we;
        builder_csr_bankarray_csrbank8_ev_pending_we <= (~builder_csr_bankarray_interface8_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank8_ev_enable0_r = builder_csr_bankarray_interface8_bank_bus_dat_w[1:0];
always @(*) begin
    builder_csr_bankarray_csrbank8_ev_enable0_we <= 1'd0;
    builder_csr_bankarray_csrbank8_ev_enable0_re <= 1'd0;
    if ((builder_csr_bankarray_csrbank8_sel & (builder_csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd5))) begin
        builder_csr_bankarray_csrbank8_ev_enable0_re <= builder_csr_bankarray_interface8_bank_bus_we;
        builder_csr_bankarray_csrbank8_ev_enable0_we <= (~builder_csr_bankarray_interface8_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank8_txempty_r = builder_csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank8_txempty_re <= 1'd0;
    builder_csr_bankarray_csrbank8_txempty_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank8_sel & (builder_csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd6))) begin
        builder_csr_bankarray_csrbank8_txempty_re <= builder_csr_bankarray_interface8_bank_bus_we;
        builder_csr_bankarray_csrbank8_txempty_we <= (~builder_csr_bankarray_interface8_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank8_rxfull_r = builder_csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
    builder_csr_bankarray_csrbank8_rxfull_re <= 1'd0;
    builder_csr_bankarray_csrbank8_rxfull_we <= 1'd0;
    if ((builder_csr_bankarray_csrbank8_sel & (builder_csr_bankarray_interface8_bank_bus_adr[8:0] == 3'd7))) begin
        builder_csr_bankarray_csrbank8_rxfull_re <= builder_csr_bankarray_interface8_bank_bus_we;
        builder_csr_bankarray_csrbank8_rxfull_we <= (~builder_csr_bankarray_interface8_bank_bus_we);
    end
end
assign builder_csr_bankarray_csrbank8_txfull_w = __main___basesoc_uart_txfull_status;
assign __main___basesoc_uart_txfull_we = builder_csr_bankarray_csrbank8_txfull_we;
assign builder_csr_bankarray_csrbank8_rxempty_w = __main___basesoc_uart_rxempty_status;
assign __main___basesoc_uart_rxempty_we = builder_csr_bankarray_csrbank8_rxempty_we;
always @(*) begin
    __main___basesoc_uart_status_status <= 2'd0;
    __main___basesoc_uart_status_status[0] <= __main___basesoc_uart_tx0;
    __main___basesoc_uart_status_status[1] <= __main___basesoc_uart_rx0;
end
assign builder_csr_bankarray_csrbank8_ev_status_w = __main___basesoc_uart_status_status[1:0];
assign __main___basesoc_uart_status_we = builder_csr_bankarray_csrbank8_ev_status_we;
always @(*) begin
    __main___basesoc_uart_pending_status <= 2'd0;
    __main___basesoc_uart_pending_status[0] <= __main___basesoc_uart_tx1;
    __main___basesoc_uart_pending_status[1] <= __main___basesoc_uart_rx1;
end
assign builder_csr_bankarray_csrbank8_ev_pending_w = __main___basesoc_uart_pending_status[1:0];
assign __main___basesoc_uart_pending_we = builder_csr_bankarray_csrbank8_ev_pending_we;
assign __main___basesoc_uart_tx2 = __main___basesoc_uart_enable_storage[0];
assign __main___basesoc_uart_rx2 = __main___basesoc_uart_enable_storage[1];
assign builder_csr_bankarray_csrbank8_ev_enable0_w = __main___basesoc_uart_enable_storage[1:0];
assign builder_csr_bankarray_csrbank8_txempty_w = __main___basesoc_uart_txempty_status;
assign __main___basesoc_uart_txempty_we = builder_csr_bankarray_csrbank8_txempty_we;
assign builder_csr_bankarray_csrbank8_rxfull_w = __main___basesoc_uart_rxfull_status;
assign __main___basesoc_uart_rxfull_we = builder_csr_bankarray_csrbank8_rxfull_we;
assign builder_csr_interconnect_adr = builder_basesoc_adr;
assign builder_csr_interconnect_we = builder_basesoc_we;
assign builder_csr_interconnect_dat_w = builder_basesoc_dat_w;
assign builder_basesoc_dat_r = builder_csr_interconnect_dat_r;
assign builder_csr_bankarray_interface0_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface1_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface2_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface3_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface4_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface5_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface6_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface7_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface8_bank_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_sram_bus_adr = builder_csr_interconnect_adr;
assign builder_csr_bankarray_interface0_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface1_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface2_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface3_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface4_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface5_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface6_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface7_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface8_bank_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_sram_bus_we = builder_csr_interconnect_we;
assign builder_csr_bankarray_interface0_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface1_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface2_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface3_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface4_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface5_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface6_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface7_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_interface8_bank_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_bankarray_sram_bus_dat_w = builder_csr_interconnect_dat_w;
assign builder_csr_interconnect_dat_r = (((((((((builder_csr_bankarray_interface0_bank_bus_dat_r | builder_csr_bankarray_interface1_bank_bus_dat_r) | builder_csr_bankarray_interface2_bank_bus_dat_r) | builder_csr_bankarray_interface3_bank_bus_dat_r) | builder_csr_bankarray_interface4_bank_bus_dat_r) | builder_csr_bankarray_interface5_bank_bus_dat_r) | builder_csr_bankarray_interface6_bank_bus_dat_r) | builder_csr_bankarray_interface7_bank_bus_dat_r) | builder_csr_bankarray_interface8_bank_bus_dat_r) | builder_csr_bankarray_sram_bus_dat_r);
assign builder_t_slice_proxy0 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy1 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy2 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy3 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy4 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy5 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy6 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy7 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy8 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy9 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy10 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy11 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy12 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy13 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy14 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy15 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy16 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy17 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy18 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy19 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy20 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy21 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy22 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy23 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy24 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy25 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy26 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy27 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy28 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy29 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy30 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_t_slice_proxy31 = (~__main___basesoc_ethmac_tx_crc_next);
assign builder_cases_slice_proxy = {__main___basesoc_ethmac_tx_crc_value, __main___basesoc_ethmac_tx_crc_sink_payload_data[7:0]};
assign builder_t_slice_proxy32 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy33 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy34 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy35 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy36 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy37 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy38 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy39 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy40 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy41 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy42 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy43 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy44 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy45 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy46 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy47 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy48 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy49 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy50 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy51 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy52 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy53 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy54 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy55 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy56 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy57 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy58 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy59 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy60 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy61 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy62 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
assign builder_t_slice_proxy63 = (~__main___basesoc_ethmac_liteethmaccrc32checker_crc_next);
always @(*) begin
    builder_comb_rhs_array_muxed0 <= 30'd0;
    case (builder_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed0 <= __main___basesoc_ibus_adr;
        end
        default: begin
            builder_comb_rhs_array_muxed0 <= __main___basesoc_dbus_adr;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed1 <= 32'd0;
    case (builder_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed1 <= __main___basesoc_ibus_dat_w;
        end
        default: begin
            builder_comb_rhs_array_muxed1 <= __main___basesoc_dbus_dat_w;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed2 <= 4'd0;
    case (builder_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed2 <= __main___basesoc_ibus_sel;
        end
        default: begin
            builder_comb_rhs_array_muxed2 <= __main___basesoc_dbus_sel;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed3 <= 1'd0;
    case (builder_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed3 <= __main___basesoc_ibus_cyc;
        end
        default: begin
            builder_comb_rhs_array_muxed3 <= __main___basesoc_dbus_cyc;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed4 <= 1'd0;
    case (builder_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed4 <= __main___basesoc_ibus_stb;
        end
        default: begin
            builder_comb_rhs_array_muxed4 <= __main___basesoc_dbus_stb;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed5 <= 1'd0;
    case (builder_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed5 <= __main___basesoc_ibus_we;
        end
        default: begin
            builder_comb_rhs_array_muxed5 <= __main___basesoc_dbus_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed6 <= 3'd0;
    case (builder_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed6 <= __main___basesoc_ibus_cti;
        end
        default: begin
            builder_comb_rhs_array_muxed6 <= __main___basesoc_dbus_cti;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed7 <= 2'd0;
    case (builder_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed7 <= __main___basesoc_ibus_bte;
        end
        default: begin
            builder_comb_rhs_array_muxed7 <= __main___basesoc_dbus_bte;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed8 <= 1'd0;
    case (__main___basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed8 <= __main___basesoc_sdram_choose_cmd_valids[0];
        end
        1'd1: begin
            builder_comb_rhs_array_muxed8 <= __main___basesoc_sdram_choose_cmd_valids[1];
        end
        2'd2: begin
            builder_comb_rhs_array_muxed8 <= __main___basesoc_sdram_choose_cmd_valids[2];
        end
        default: begin
            builder_comb_rhs_array_muxed8 <= __main___basesoc_sdram_choose_cmd_valids[3];
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed9 <= 11'd0;
    case (__main___basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed9 <= __main___basesoc_sdram_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            builder_comb_rhs_array_muxed9 <= __main___basesoc_sdram_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            builder_comb_rhs_array_muxed9 <= __main___basesoc_sdram_bankmachine2_cmd_payload_a;
        end
        default: begin
            builder_comb_rhs_array_muxed9 <= __main___basesoc_sdram_bankmachine3_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed10 <= 2'd0;
    case (__main___basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed10 <= __main___basesoc_sdram_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            builder_comb_rhs_array_muxed10 <= __main___basesoc_sdram_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            builder_comb_rhs_array_muxed10 <= __main___basesoc_sdram_bankmachine2_cmd_payload_ba;
        end
        default: begin
            builder_comb_rhs_array_muxed10 <= __main___basesoc_sdram_bankmachine3_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed11 <= 1'd0;
    case (__main___basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed11 <= __main___basesoc_sdram_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            builder_comb_rhs_array_muxed11 <= __main___basesoc_sdram_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            builder_comb_rhs_array_muxed11 <= __main___basesoc_sdram_bankmachine2_cmd_payload_is_read;
        end
        default: begin
            builder_comb_rhs_array_muxed11 <= __main___basesoc_sdram_bankmachine3_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed12 <= 1'd0;
    case (__main___basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed12 <= __main___basesoc_sdram_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            builder_comb_rhs_array_muxed12 <= __main___basesoc_sdram_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            builder_comb_rhs_array_muxed12 <= __main___basesoc_sdram_bankmachine2_cmd_payload_is_write;
        end
        default: begin
            builder_comb_rhs_array_muxed12 <= __main___basesoc_sdram_bankmachine3_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed13 <= 1'd0;
    case (__main___basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed13 <= __main___basesoc_sdram_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            builder_comb_rhs_array_muxed13 <= __main___basesoc_sdram_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            builder_comb_rhs_array_muxed13 <= __main___basesoc_sdram_bankmachine2_cmd_payload_is_cmd;
        end
        default: begin
            builder_comb_rhs_array_muxed13 <= __main___basesoc_sdram_bankmachine3_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    builder_comb_t_array_muxed0 <= 1'd0;
    case (__main___basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            builder_comb_t_array_muxed0 <= __main___basesoc_sdram_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            builder_comb_t_array_muxed0 <= __main___basesoc_sdram_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            builder_comb_t_array_muxed0 <= __main___basesoc_sdram_bankmachine2_cmd_payload_cas;
        end
        default: begin
            builder_comb_t_array_muxed0 <= __main___basesoc_sdram_bankmachine3_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    builder_comb_t_array_muxed1 <= 1'd0;
    case (__main___basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            builder_comb_t_array_muxed1 <= __main___basesoc_sdram_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            builder_comb_t_array_muxed1 <= __main___basesoc_sdram_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            builder_comb_t_array_muxed1 <= __main___basesoc_sdram_bankmachine2_cmd_payload_ras;
        end
        default: begin
            builder_comb_t_array_muxed1 <= __main___basesoc_sdram_bankmachine3_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    builder_comb_t_array_muxed2 <= 1'd0;
    case (__main___basesoc_sdram_choose_cmd_grant)
        1'd0: begin
            builder_comb_t_array_muxed2 <= __main___basesoc_sdram_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            builder_comb_t_array_muxed2 <= __main___basesoc_sdram_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            builder_comb_t_array_muxed2 <= __main___basesoc_sdram_bankmachine2_cmd_payload_we;
        end
        default: begin
            builder_comb_t_array_muxed2 <= __main___basesoc_sdram_bankmachine3_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed14 <= 1'd0;
    case (__main___basesoc_sdram_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed14 <= __main___basesoc_sdram_choose_req_valids[0];
        end
        1'd1: begin
            builder_comb_rhs_array_muxed14 <= __main___basesoc_sdram_choose_req_valids[1];
        end
        2'd2: begin
            builder_comb_rhs_array_muxed14 <= __main___basesoc_sdram_choose_req_valids[2];
        end
        default: begin
            builder_comb_rhs_array_muxed14 <= __main___basesoc_sdram_choose_req_valids[3];
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed15 <= 11'd0;
    case (__main___basesoc_sdram_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed15 <= __main___basesoc_sdram_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            builder_comb_rhs_array_muxed15 <= __main___basesoc_sdram_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            builder_comb_rhs_array_muxed15 <= __main___basesoc_sdram_bankmachine2_cmd_payload_a;
        end
        default: begin
            builder_comb_rhs_array_muxed15 <= __main___basesoc_sdram_bankmachine3_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed16 <= 2'd0;
    case (__main___basesoc_sdram_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed16 <= __main___basesoc_sdram_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            builder_comb_rhs_array_muxed16 <= __main___basesoc_sdram_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            builder_comb_rhs_array_muxed16 <= __main___basesoc_sdram_bankmachine2_cmd_payload_ba;
        end
        default: begin
            builder_comb_rhs_array_muxed16 <= __main___basesoc_sdram_bankmachine3_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed17 <= 1'd0;
    case (__main___basesoc_sdram_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed17 <= __main___basesoc_sdram_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            builder_comb_rhs_array_muxed17 <= __main___basesoc_sdram_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            builder_comb_rhs_array_muxed17 <= __main___basesoc_sdram_bankmachine2_cmd_payload_is_read;
        end
        default: begin
            builder_comb_rhs_array_muxed17 <= __main___basesoc_sdram_bankmachine3_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed18 <= 1'd0;
    case (__main___basesoc_sdram_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed18 <= __main___basesoc_sdram_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            builder_comb_rhs_array_muxed18 <= __main___basesoc_sdram_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            builder_comb_rhs_array_muxed18 <= __main___basesoc_sdram_bankmachine2_cmd_payload_is_write;
        end
        default: begin
            builder_comb_rhs_array_muxed18 <= __main___basesoc_sdram_bankmachine3_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed19 <= 1'd0;
    case (__main___basesoc_sdram_choose_req_grant)
        1'd0: begin
            builder_comb_rhs_array_muxed19 <= __main___basesoc_sdram_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            builder_comb_rhs_array_muxed19 <= __main___basesoc_sdram_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            builder_comb_rhs_array_muxed19 <= __main___basesoc_sdram_bankmachine2_cmd_payload_is_cmd;
        end
        default: begin
            builder_comb_rhs_array_muxed19 <= __main___basesoc_sdram_bankmachine3_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    builder_comb_t_array_muxed3 <= 1'd0;
    case (__main___basesoc_sdram_choose_req_grant)
        1'd0: begin
            builder_comb_t_array_muxed3 <= __main___basesoc_sdram_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            builder_comb_t_array_muxed3 <= __main___basesoc_sdram_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            builder_comb_t_array_muxed3 <= __main___basesoc_sdram_bankmachine2_cmd_payload_cas;
        end
        default: begin
            builder_comb_t_array_muxed3 <= __main___basesoc_sdram_bankmachine3_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    builder_comb_t_array_muxed4 <= 1'd0;
    case (__main___basesoc_sdram_choose_req_grant)
        1'd0: begin
            builder_comb_t_array_muxed4 <= __main___basesoc_sdram_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            builder_comb_t_array_muxed4 <= __main___basesoc_sdram_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            builder_comb_t_array_muxed4 <= __main___basesoc_sdram_bankmachine2_cmd_payload_ras;
        end
        default: begin
            builder_comb_t_array_muxed4 <= __main___basesoc_sdram_bankmachine3_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    builder_comb_t_array_muxed5 <= 1'd0;
    case (__main___basesoc_sdram_choose_req_grant)
        1'd0: begin
            builder_comb_t_array_muxed5 <= __main___basesoc_sdram_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            builder_comb_t_array_muxed5 <= __main___basesoc_sdram_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            builder_comb_t_array_muxed5 <= __main___basesoc_sdram_bankmachine2_cmd_payload_we;
        end
        default: begin
            builder_comb_t_array_muxed5 <= __main___basesoc_sdram_bankmachine3_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed20 <= 19'd0;
    case (builder_basesoc_litedramcore_roundrobin0_grant)
        default: begin
            builder_comb_rhs_array_muxed20 <= {__main___basesoc_port_cmd_payload_addr[20:10], __main___basesoc_port_cmd_payload_addr[7:0]};
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed21 <= 1'd0;
    case (builder_basesoc_litedramcore_roundrobin0_grant)
        default: begin
            builder_comb_rhs_array_muxed21 <= __main___basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed22 <= 1'd0;
    case (builder_basesoc_litedramcore_roundrobin0_grant)
        default: begin
            builder_comb_rhs_array_muxed22 <= (((__main___basesoc_port_cmd_payload_addr[9:8] == 1'd0) & (~(((builder_basesoc_litedramcore_locked0 | (__main___basesoc_sdram_interface_bank1_lock & (builder_basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank2_lock & (builder_basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank3_lock & (builder_basesoc_litedramcore_roundrobin3_grant == 1'd0))))) & __main___basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed23 <= 19'd0;
    case (builder_basesoc_litedramcore_roundrobin1_grant)
        default: begin
            builder_comb_rhs_array_muxed23 <= {__main___basesoc_port_cmd_payload_addr[20:10], __main___basesoc_port_cmd_payload_addr[7:0]};
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed24 <= 1'd0;
    case (builder_basesoc_litedramcore_roundrobin1_grant)
        default: begin
            builder_comb_rhs_array_muxed24 <= __main___basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed25 <= 1'd0;
    case (builder_basesoc_litedramcore_roundrobin1_grant)
        default: begin
            builder_comb_rhs_array_muxed25 <= (((__main___basesoc_port_cmd_payload_addr[9:8] == 1'd1) & (~(((builder_basesoc_litedramcore_locked1 | (__main___basesoc_sdram_interface_bank0_lock & (builder_basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank2_lock & (builder_basesoc_litedramcore_roundrobin2_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank3_lock & (builder_basesoc_litedramcore_roundrobin3_grant == 1'd0))))) & __main___basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed26 <= 19'd0;
    case (builder_basesoc_litedramcore_roundrobin2_grant)
        default: begin
            builder_comb_rhs_array_muxed26 <= {__main___basesoc_port_cmd_payload_addr[20:10], __main___basesoc_port_cmd_payload_addr[7:0]};
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed27 <= 1'd0;
    case (builder_basesoc_litedramcore_roundrobin2_grant)
        default: begin
            builder_comb_rhs_array_muxed27 <= __main___basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed28 <= 1'd0;
    case (builder_basesoc_litedramcore_roundrobin2_grant)
        default: begin
            builder_comb_rhs_array_muxed28 <= (((__main___basesoc_port_cmd_payload_addr[9:8] == 2'd2) & (~(((builder_basesoc_litedramcore_locked2 | (__main___basesoc_sdram_interface_bank0_lock & (builder_basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank1_lock & (builder_basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank3_lock & (builder_basesoc_litedramcore_roundrobin3_grant == 1'd0))))) & __main___basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed29 <= 19'd0;
    case (builder_basesoc_litedramcore_roundrobin3_grant)
        default: begin
            builder_comb_rhs_array_muxed29 <= {__main___basesoc_port_cmd_payload_addr[20:10], __main___basesoc_port_cmd_payload_addr[7:0]};
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed30 <= 1'd0;
    case (builder_basesoc_litedramcore_roundrobin3_grant)
        default: begin
            builder_comb_rhs_array_muxed30 <= __main___basesoc_port_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    builder_comb_rhs_array_muxed31 <= 1'd0;
    case (builder_basesoc_litedramcore_roundrobin3_grant)
        default: begin
            builder_comb_rhs_array_muxed31 <= (((__main___basesoc_port_cmd_payload_addr[9:8] == 2'd3) & (~(((builder_basesoc_litedramcore_locked3 | (__main___basesoc_sdram_interface_bank0_lock & (builder_basesoc_litedramcore_roundrobin0_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank1_lock & (builder_basesoc_litedramcore_roundrobin1_grant == 1'd0))) | (__main___basesoc_sdram_interface_bank2_lock & (builder_basesoc_litedramcore_roundrobin2_grant == 1'd0))))) & __main___basesoc_port_cmd_valid);
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_array_muxed0 <= 2'd0;
    case (__main___basesoc_sdram_steerer_sel)
        1'd0: begin
            builder_sync_rhs_array_muxed0 <= __main___basesoc_sdram_nop_ba[1:0];
        end
        1'd1: begin
            builder_sync_rhs_array_muxed0 <= __main___basesoc_sdram_choose_req_cmd_payload_ba[1:0];
        end
        2'd2: begin
            builder_sync_rhs_array_muxed0 <= __main___basesoc_sdram_choose_req_cmd_payload_ba[1:0];
        end
        default: begin
            builder_sync_rhs_array_muxed0 <= __main___basesoc_sdram_cmd_payload_ba[1:0];
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_array_muxed1 <= 11'd0;
    case (__main___basesoc_sdram_steerer_sel)
        1'd0: begin
            builder_sync_rhs_array_muxed1 <= __main___basesoc_sdram_nop_a;
        end
        1'd1: begin
            builder_sync_rhs_array_muxed1 <= __main___basesoc_sdram_choose_req_cmd_payload_a;
        end
        2'd2: begin
            builder_sync_rhs_array_muxed1 <= __main___basesoc_sdram_choose_req_cmd_payload_a;
        end
        default: begin
            builder_sync_rhs_array_muxed1 <= __main___basesoc_sdram_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_array_muxed2 <= 1'd0;
    case (__main___basesoc_sdram_steerer_sel)
        1'd0: begin
            builder_sync_rhs_array_muxed2 <= 1'd0;
        end
        1'd1: begin
            builder_sync_rhs_array_muxed2 <= ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & __main___basesoc_sdram_choose_req_cmd_payload_cas);
        end
        2'd2: begin
            builder_sync_rhs_array_muxed2 <= ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & __main___basesoc_sdram_choose_req_cmd_payload_cas);
        end
        default: begin
            builder_sync_rhs_array_muxed2 <= ((__main___basesoc_sdram_cmd_valid & __main___basesoc_sdram_cmd_ready) & __main___basesoc_sdram_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_array_muxed3 <= 1'd0;
    case (__main___basesoc_sdram_steerer_sel)
        1'd0: begin
            builder_sync_rhs_array_muxed3 <= 1'd0;
        end
        1'd1: begin
            builder_sync_rhs_array_muxed3 <= ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & __main___basesoc_sdram_choose_req_cmd_payload_ras);
        end
        2'd2: begin
            builder_sync_rhs_array_muxed3 <= ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & __main___basesoc_sdram_choose_req_cmd_payload_ras);
        end
        default: begin
            builder_sync_rhs_array_muxed3 <= ((__main___basesoc_sdram_cmd_valid & __main___basesoc_sdram_cmd_ready) & __main___basesoc_sdram_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_array_muxed4 <= 1'd0;
    case (__main___basesoc_sdram_steerer_sel)
        1'd0: begin
            builder_sync_rhs_array_muxed4 <= 1'd0;
        end
        1'd1: begin
            builder_sync_rhs_array_muxed4 <= ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & __main___basesoc_sdram_choose_req_cmd_payload_we);
        end
        2'd2: begin
            builder_sync_rhs_array_muxed4 <= ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & __main___basesoc_sdram_choose_req_cmd_payload_we);
        end
        default: begin
            builder_sync_rhs_array_muxed4 <= ((__main___basesoc_sdram_cmd_valid & __main___basesoc_sdram_cmd_ready) & __main___basesoc_sdram_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_array_muxed5 <= 1'd0;
    case (__main___basesoc_sdram_steerer_sel)
        1'd0: begin
            builder_sync_rhs_array_muxed5 <= 1'd0;
        end
        1'd1: begin
            builder_sync_rhs_array_muxed5 <= ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & __main___basesoc_sdram_choose_req_cmd_payload_is_read);
        end
        2'd2: begin
            builder_sync_rhs_array_muxed5 <= ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & __main___basesoc_sdram_choose_req_cmd_payload_is_read);
        end
        default: begin
            builder_sync_rhs_array_muxed5 <= ((__main___basesoc_sdram_cmd_valid & __main___basesoc_sdram_cmd_ready) & __main___basesoc_sdram_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    builder_sync_rhs_array_muxed6 <= 1'd0;
    case (__main___basesoc_sdram_steerer_sel)
        1'd0: begin
            builder_sync_rhs_array_muxed6 <= 1'd0;
        end
        1'd1: begin
            builder_sync_rhs_array_muxed6 <= ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & __main___basesoc_sdram_choose_req_cmd_payload_is_write);
        end
        2'd2: begin
            builder_sync_rhs_array_muxed6 <= ((__main___basesoc_sdram_choose_req_cmd_valid & __main___basesoc_sdram_choose_req_cmd_ready) & __main___basesoc_sdram_choose_req_cmd_payload_is_write);
        end
        default: begin
            builder_sync_rhs_array_muxed6 <= ((__main___basesoc_sdram_cmd_valid & __main___basesoc_sdram_cmd_ready) & __main___basesoc_sdram_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    builder_sync_f_array_muxed <= 1'd0;
    case (__main___mosi_sel)
        1'd0: begin
            builder_sync_f_array_muxed <= __main___mosi_data[0];
        end
        1'd1: begin
            builder_sync_f_array_muxed <= __main___mosi_data[1];
        end
        2'd2: begin
            builder_sync_f_array_muxed <= __main___mosi_data[2];
        end
        2'd3: begin
            builder_sync_f_array_muxed <= __main___mosi_data[3];
        end
        3'd4: begin
            builder_sync_f_array_muxed <= __main___mosi_data[4];
        end
        3'd5: begin
            builder_sync_f_array_muxed <= __main___mosi_data[5];
        end
        3'd6: begin
            builder_sync_f_array_muxed <= __main___mosi_data[6];
        end
        default: begin
            builder_sync_f_array_muxed <= __main___mosi_data[7];
        end
    endcase
end
assign __main___basesoc_rx_rx = builder_multiregimpl0_regs1;
assign sdrio_clk = sys_clk;
assign sdrio_clk_1 = sys_clk;
assign sdrio_clk_2 = sys_clk;
assign sdrio_clk_3 = sys_clk;
assign sdrio_clk_4 = sys_clk;
assign sdrio_clk_5 = sys_clk;
assign sdrio_clk_6 = sys_clk;
assign sdrio_clk_7 = sys_clk;
assign sdrio_clk_8 = sys_clk;
assign sdrio_clk_9 = sys_clk;
assign sdrio_clk_10 = sys_clk;
assign sdrio_clk_11 = sys_clk;
assign sdrio_clk_12 = sys_clk;
assign sdrio_clk_13 = sys_clk;
assign sdrio_clk_14 = sys_clk;
assign sdrio_clk_15 = sys_clk;
assign sdrio_clk_16 = sys_clk;
assign sdrio_clk_17 = sys_clk;
assign sdrio_clk_18 = sys_clk;
assign sdrio_clk_19 = sys_clk;
assign sdrio_clk_20 = sys_clk;
assign sdrio_clk_21 = sys_clk;
assign sdrio_clk_22 = sys_clk;
assign sdrio_clk_23 = sys_clk;
assign sdrio_clk_24 = sys_clk;
assign sdrio_clk_25 = sys_clk;
assign sdrio_clk_26 = sys_clk;
assign sdrio_clk_27 = sys_clk;
assign sdrio_clk_28 = sys_clk;
assign sdrio_clk_29 = sys_clk;
assign sdrio_clk_30 = sys_clk;
assign sdrio_clk_31 = sys_clk;
assign __main___ethphy_liteethphyrmiirx_converter_sink_valid0 = builder_multiregimpl1_regs1;
assign __main___ethphy_liteethphyrmiirx_converter_sink_payload_data = builder_multiregimpl2_regs1;
assign __main___basesoc_ethmac_tx_cdc_cdc_produce_rdomain = builder_multiregimpl3_regs1;
assign __main___basesoc_ethmac_tx_cdc_cdc_consume_wdomain = builder_multiregimpl4_regs1;
assign __main___basesoc_ethmac_pulsesynchronizer0_toggle_o = builder_multiregimpl5_regs1;
assign __main___basesoc_ethmac_pulsesynchronizer1_toggle_o = builder_multiregimpl6_regs1;
assign __main___basesoc_ethmac_rx_cdc_cdc_produce_rdomain = builder_multiregimpl7_regs1;
assign __main___basesoc_ethmac_rx_cdc_cdc_consume_wdomain = builder_multiregimpl8_regs1;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge eth_rx_clk) begin
    __main___ethphy_liteethphyrmiirx_crs_dv <= eth_crs_dv;
    __main___ethphy_liteethphyrmiirx_crs_dv_d <= __main___ethphy_liteethphyrmiirx_crs_dv;
    __main___ethphy_liteethphyrmiirx_rx_data <= eth_rx_data;
    if (__main___ethphy_liteethphyrmiirx_converter_converter_source_ready) begin
        __main___ethphy_liteethphyrmiirx_converter_converter_strobe_all <= 1'd0;
    end
    if (__main___ethphy_liteethphyrmiirx_converter_converter_load_part) begin
        if (((__main___ethphy_liteethphyrmiirx_converter_converter_demux == 2'd3) | __main___ethphy_liteethphyrmiirx_converter_converter_sink_last)) begin
            __main___ethphy_liteethphyrmiirx_converter_converter_demux <= 1'd0;
            __main___ethphy_liteethphyrmiirx_converter_converter_strobe_all <= 1'd1;
        end else begin
            __main___ethphy_liteethphyrmiirx_converter_converter_demux <= (__main___ethphy_liteethphyrmiirx_converter_converter_demux + 1'd1);
        end
    end
    if ((__main___ethphy_liteethphyrmiirx_converter_converter_source_valid & __main___ethphy_liteethphyrmiirx_converter_converter_source_ready)) begin
        if ((__main___ethphy_liteethphyrmiirx_converter_converter_sink_valid & __main___ethphy_liteethphyrmiirx_converter_converter_sink_ready)) begin
            __main___ethphy_liteethphyrmiirx_converter_converter_source_first <= __main___ethphy_liteethphyrmiirx_converter_converter_sink_first;
            __main___ethphy_liteethphyrmiirx_converter_converter_source_last <= __main___ethphy_liteethphyrmiirx_converter_converter_sink_last;
        end else begin
            __main___ethphy_liteethphyrmiirx_converter_converter_source_first <= 1'd0;
            __main___ethphy_liteethphyrmiirx_converter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((__main___ethphy_liteethphyrmiirx_converter_converter_sink_valid & __main___ethphy_liteethphyrmiirx_converter_converter_sink_ready)) begin
            __main___ethphy_liteethphyrmiirx_converter_converter_source_first <= (__main___ethphy_liteethphyrmiirx_converter_converter_sink_first | __main___ethphy_liteethphyrmiirx_converter_converter_source_first);
            __main___ethphy_liteethphyrmiirx_converter_converter_source_last <= (__main___ethphy_liteethphyrmiirx_converter_converter_sink_last | __main___ethphy_liteethphyrmiirx_converter_converter_source_last);
        end
    end
    if (__main___ethphy_liteethphyrmiirx_converter_converter_load_part) begin
        case (__main___ethphy_liteethphyrmiirx_converter_converter_demux)
            1'd0: begin
                __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_data[1:0] <= __main___ethphy_liteethphyrmiirx_converter_converter_sink_payload_data;
            end
            1'd1: begin
                __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_data[3:2] <= __main___ethphy_liteethphyrmiirx_converter_converter_sink_payload_data;
            end
            2'd2: begin
                __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_data[5:4] <= __main___ethphy_liteethphyrmiirx_converter_converter_sink_payload_data;
            end
            2'd3: begin
                __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_data[7:6] <= __main___ethphy_liteethphyrmiirx_converter_converter_sink_payload_data;
            end
        endcase
    end
    if (__main___ethphy_liteethphyrmiirx_converter_converter_load_part) begin
        __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_valid_token_count <= (__main___ethphy_liteethphyrmiirx_converter_converter_demux + 1'd1);
    end
    if (__main___ethphy_liteethphyrmiirx_converter_reset) begin
        __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_data <= 8'd0;
        __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_valid_token_count <= 3'd0;
        __main___ethphy_liteethphyrmiirx_converter_converter_demux <= 2'd0;
        __main___ethphy_liteethphyrmiirx_converter_converter_strobe_all <= 1'd0;
    end
    builder_basesoc_liteethphyrmii_state <= builder_basesoc_liteethphyrmii_next_state;
    builder_basesoc_rxdatapath_liteethmacpreamblechecker_state <= builder_basesoc_rxdatapath_liteethmacpreamblechecker_next_state;
    if (__main___basesoc_ethmac_pulsesynchronizer0_i) begin
        __main___basesoc_ethmac_pulsesynchronizer0_toggle_i <= (~__main___basesoc_ethmac_pulsesynchronizer0_toggle_i);
    end
    if (__main___basesoc_ethmac_liteethmaccrc32checker_crc_ce) begin
        __main___basesoc_ethmac_liteethmaccrc32checker_crc_reg <= __main___basesoc_ethmac_liteethmaccrc32checker_crc_next;
    end
    if (__main___basesoc_ethmac_liteethmaccrc32checker_crc_reset) begin
        __main___basesoc_ethmac_liteethmaccrc32checker_crc_reg <= 32'd4294967295;
    end
    if (((__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_we & __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable) & (~__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_replace))) begin
        if ((__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_produce == 3'd4)) begin
            __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_produce <= 1'd0;
        end else begin
            __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_produce <= (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_produce + 1'd1);
        end
    end
    if (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_do_read) begin
        if ((__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_consume == 3'd4)) begin
            __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_consume <= 1'd0;
        end else begin
            __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_consume <= (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_consume + 1'd1);
        end
    end
    if (((__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_we & __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_syncfifo_writable) & (~__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_replace))) begin
        if ((~__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_do_read)) begin
            __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_level <= (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_level + 1'd1);
        end
    end else begin
        if (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_do_read) begin
            __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_level <= (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_level - 1'd1);
        end
    end
    if (__main___basesoc_ethmac_liteethmaccrc32checker_fifo_reset) begin
        __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_level <= 3'd0;
        __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_produce <= 3'd0;
        __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_consume <= 3'd0;
    end
    builder_basesoc_rxdatapath_bufferizeendpoints_state <= builder_basesoc_rxdatapath_bufferizeendpoints_next_state;
    if (__main___basesoc_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value_ce0) begin
        __main___basesoc_ethmac_liteethmaccrc32checker_last_be <= __main___basesoc_ethmac_liteethmaccrc32checker_last_be_clockdomainsrenamer_next_value0;
    end
    if (__main___basesoc_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value_ce1) begin
        __main___basesoc_ethmac_liteethmaccrc32checker_crc_error1 <= __main___basesoc_ethmac_liteethmaccrc32checker_crc_error1_clockdomainsrenamer_next_value1;
    end
    if (((~__main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_valid) | __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_ready)) begin
        __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_valid <= __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_valid;
        __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_first <= __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_first;
        __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_last <= __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_last;
        __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_data <= __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_payload_data;
        __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_last_be <= __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_payload_last_be;
        __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_error <= __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_sink_payload_error;
    end
    if (__main___basesoc_ethmac_pulsesynchronizer1_i) begin
        __main___basesoc_ethmac_pulsesynchronizer1_toggle_i <= (~__main___basesoc_ethmac_pulsesynchronizer1_toggle_i);
    end
    if (__main___basesoc_ethmac_rx_converter_converter_source_ready) begin
        __main___basesoc_ethmac_rx_converter_converter_strobe_all <= 1'd0;
    end
    if (__main___basesoc_ethmac_rx_converter_converter_load_part) begin
        if (((__main___basesoc_ethmac_rx_converter_converter_demux == 2'd3) | __main___basesoc_ethmac_rx_converter_converter_sink_last)) begin
            __main___basesoc_ethmac_rx_converter_converter_demux <= 1'd0;
            __main___basesoc_ethmac_rx_converter_converter_strobe_all <= 1'd1;
        end else begin
            __main___basesoc_ethmac_rx_converter_converter_demux <= (__main___basesoc_ethmac_rx_converter_converter_demux + 1'd1);
        end
    end
    if ((__main___basesoc_ethmac_rx_converter_converter_source_valid & __main___basesoc_ethmac_rx_converter_converter_source_ready)) begin
        if ((__main___basesoc_ethmac_rx_converter_converter_sink_valid & __main___basesoc_ethmac_rx_converter_converter_sink_ready)) begin
            __main___basesoc_ethmac_rx_converter_converter_source_first <= __main___basesoc_ethmac_rx_converter_converter_sink_first;
            __main___basesoc_ethmac_rx_converter_converter_source_last <= __main___basesoc_ethmac_rx_converter_converter_sink_last;
        end else begin
            __main___basesoc_ethmac_rx_converter_converter_source_first <= 1'd0;
            __main___basesoc_ethmac_rx_converter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((__main___basesoc_ethmac_rx_converter_converter_sink_valid & __main___basesoc_ethmac_rx_converter_converter_sink_ready)) begin
            __main___basesoc_ethmac_rx_converter_converter_source_first <= (__main___basesoc_ethmac_rx_converter_converter_sink_first | __main___basesoc_ethmac_rx_converter_converter_source_first);
            __main___basesoc_ethmac_rx_converter_converter_source_last <= (__main___basesoc_ethmac_rx_converter_converter_sink_last | __main___basesoc_ethmac_rx_converter_converter_source_last);
        end
    end
    if (__main___basesoc_ethmac_rx_converter_converter_load_part) begin
        case (__main___basesoc_ethmac_rx_converter_converter_demux)
            1'd0: begin
                __main___basesoc_ethmac_rx_converter_converter_source_payload_data[9:0] <= __main___basesoc_ethmac_rx_converter_converter_sink_payload_data;
            end
            1'd1: begin
                __main___basesoc_ethmac_rx_converter_converter_source_payload_data[19:10] <= __main___basesoc_ethmac_rx_converter_converter_sink_payload_data;
            end
            2'd2: begin
                __main___basesoc_ethmac_rx_converter_converter_source_payload_data[29:20] <= __main___basesoc_ethmac_rx_converter_converter_sink_payload_data;
            end
            2'd3: begin
                __main___basesoc_ethmac_rx_converter_converter_source_payload_data[39:30] <= __main___basesoc_ethmac_rx_converter_converter_sink_payload_data;
            end
        endcase
    end
    if (__main___basesoc_ethmac_rx_converter_converter_load_part) begin
        __main___basesoc_ethmac_rx_converter_converter_source_payload_valid_token_count <= (__main___basesoc_ethmac_rx_converter_converter_demux + 1'd1);
    end
    __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary <= __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next_binary;
    __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q <= __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_next;
    if (eth_rx_rst) begin
        __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_data <= 8'd0;
        __main___ethphy_liteethphyrmiirx_converter_converter_source_payload_valid_token_count <= 3'd0;
        __main___ethphy_liteethphyrmiirx_converter_converter_demux <= 2'd0;
        __main___ethphy_liteethphyrmiirx_converter_converter_strobe_all <= 1'd0;
        __main___ethphy_liteethphyrmiirx_crs_dv <= 1'd0;
        __main___ethphy_liteethphyrmiirx_crs_dv_d <= 1'd0;
        __main___ethphy_liteethphyrmiirx_rx_data <= 2'd0;
        __main___basesoc_ethmac_liteethmaccrc32checker_crc_reg <= 32'd4294967295;
        __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_level <= 3'd0;
        __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_produce <= 3'd0;
        __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_consume <= 3'd0;
        __main___basesoc_ethmac_liteethmaccrc32checker_last_be <= 1'd0;
        __main___basesoc_ethmac_liteethmaccrc32checker_crc_error1 <= 1'd0;
        __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_valid <= 1'd0;
        __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_data <= 8'd0;
        __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_last_be <= 1'd0;
        __main___basesoc_ethmac_bufferizeendpoints_pipe_valid_source_payload_error <= 1'd0;
        __main___basesoc_ethmac_rx_converter_converter_source_payload_data <= 40'd0;
        __main___basesoc_ethmac_rx_converter_converter_source_payload_valid_token_count <= 3'd0;
        __main___basesoc_ethmac_rx_converter_converter_demux <= 2'd0;
        __main___basesoc_ethmac_rx_converter_converter_strobe_all <= 1'd0;
        __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q <= 6'd0;
        __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q_binary <= 6'd0;
        builder_basesoc_liteethphyrmii_state <= 1'd0;
        builder_basesoc_rxdatapath_liteethmacpreamblechecker_state <= 1'd0;
        builder_basesoc_rxdatapath_bufferizeendpoints_state <= 2'd0;
    end
    builder_multiregimpl1_regs0 <= __main___ethphy_liteethphyrmiirx_converter_sink_valid1;
    builder_multiregimpl1_regs1 <= builder_multiregimpl1_regs0;
    builder_multiregimpl2_regs0 <= __main___ethphy_liteethphyrmiirx_converter_sink_data;
    builder_multiregimpl2_regs1 <= builder_multiregimpl2_regs0;
    builder_multiregimpl8_regs0 <= __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q;
    builder_multiregimpl8_regs1 <= builder_multiregimpl8_regs0;
end

always @(posedge eth_tx_clk) begin
    eth_tx_en <= __main___ethphy_liteethphyrmiitx_converter_source_valid;
    eth_tx_data <= __main___ethphy_liteethphyrmiitx_converter_source_payload_data;
    if ((__main___ethphy_liteethphyrmiitx_converter_converter_source_valid & __main___ethphy_liteethphyrmiitx_converter_converter_source_ready)) begin
        if (__main___ethphy_liteethphyrmiitx_converter_converter_last) begin
            __main___ethphy_liteethphyrmiitx_converter_converter_mux <= 1'd0;
        end else begin
            __main___ethphy_liteethphyrmiitx_converter_converter_mux <= (__main___ethphy_liteethphyrmiitx_converter_converter_mux + 1'd1);
        end
    end
    __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_binary <= __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next_binary;
    __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q <= __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_next;
    if ((__main___basesoc_ethmac_tx_converter_converter_source_valid & __main___basesoc_ethmac_tx_converter_converter_source_ready)) begin
        if (__main___basesoc_ethmac_tx_converter_converter_last) begin
            __main___basesoc_ethmac_tx_converter_converter_mux <= 1'd0;
        end else begin
            __main___basesoc_ethmac_tx_converter_converter_mux <= (__main___basesoc_ethmac_tx_converter_converter_mux + 1'd1);
        end
    end
    builder_basesoc_txdatapath_liteethmactxlastbe_state <= builder_basesoc_txdatapath_liteethmactxlastbe_next_state;
    builder_basesoc_txdatapath_liteethmacpaddinginserter_state <= builder_basesoc_txdatapath_liteethmacpaddinginserter_next_state;
    if (__main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value_ce) begin
        __main___basesoc_ethmac_tx_padding_counter <= __main___basesoc_ethmac_tx_padding_counter_clockdomainsrenamer_clockdomainsrenamer0_next_value;
    end
    if (__main___basesoc_ethmac_tx_crc_is_ongoing0) begin
        __main___basesoc_ethmac_tx_crc_cnt <= 2'd3;
    end else begin
        if ((__main___basesoc_ethmac_tx_crc_is_ongoing1 & (~__main___basesoc_ethmac_tx_crc_cnt_done))) begin
            __main___basesoc_ethmac_tx_crc_cnt <= (__main___basesoc_ethmac_tx_crc_cnt - __main___basesoc_ethmac_tx_crc_source_ready);
        end
    end
    if (__main___basesoc_ethmac_tx_crc_ce) begin
        __main___basesoc_ethmac_tx_crc_reg <= __main___basesoc_ethmac_tx_crc_next;
    end
    if (__main___basesoc_ethmac_tx_crc_reset) begin
        __main___basesoc_ethmac_tx_crc_reg <= 32'd4294967295;
    end
    builder_basesoc_txdatapath_bufferizeendpoints_state <= builder_basesoc_txdatapath_bufferizeendpoints_next_state;
    if (__main___basesoc_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce0) begin
        __main___basesoc_ethmac_tx_crc_crc_packet <= __main___basesoc_ethmac_tx_crc_crc_packet_clockdomainsrenamer_clockdomainsrenamer1_next_value0;
    end
    if (__main___basesoc_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value_ce1) begin
        __main___basesoc_ethmac_tx_crc_last_be2 <= __main___basesoc_ethmac_tx_crc_last_be2_clockdomainsrenamer_clockdomainsrenamer1_next_value1;
    end
    if (((~__main___basesoc_ethmac_tx_crc_pipe_valid_source_valid) | __main___basesoc_ethmac_tx_crc_pipe_valid_source_ready)) begin
        __main___basesoc_ethmac_tx_crc_pipe_valid_source_valid <= __main___basesoc_ethmac_tx_crc_pipe_valid_sink_valid;
        __main___basesoc_ethmac_tx_crc_pipe_valid_source_first <= __main___basesoc_ethmac_tx_crc_pipe_valid_sink_first;
        __main___basesoc_ethmac_tx_crc_pipe_valid_source_last <= __main___basesoc_ethmac_tx_crc_pipe_valid_sink_last;
        __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_data <= __main___basesoc_ethmac_tx_crc_pipe_valid_sink_payload_data;
        __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_last_be <= __main___basesoc_ethmac_tx_crc_pipe_valid_sink_payload_last_be;
        __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_error <= __main___basesoc_ethmac_tx_crc_pipe_valid_sink_payload_error;
    end
    builder_basesoc_txdatapath_liteethmacpreambleinserter_state <= builder_basesoc_txdatapath_liteethmacpreambleinserter_next_state;
    if (__main___basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value_ce) begin
        __main___basesoc_ethmac_tx_preamble_count <= __main___basesoc_ethmac_tx_preamble_count_clockdomainsrenamer_clockdomainsrenamer2_next_value;
    end
    builder_basesoc_txdatapath_liteethmacgap_state <= builder_basesoc_txdatapath_liteethmacgap_next_state;
    if (__main___basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value_ce) begin
        __main___basesoc_ethmac_tx_gap_counter <= __main___basesoc_ethmac_tx_gap_counter_clockdomainsrenamer_clockdomainsrenamer3_next_value;
    end
    if (eth_tx_rst) begin
        __main___ethphy_liteethphyrmiitx_converter_converter_mux <= 2'd0;
        __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q <= 6'd0;
        __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q_binary <= 6'd0;
        __main___basesoc_ethmac_tx_converter_converter_mux <= 2'd0;
        __main___basesoc_ethmac_tx_padding_counter <= 16'd0;
        __main___basesoc_ethmac_tx_crc_reg <= 32'd4294967295;
        __main___basesoc_ethmac_tx_crc_crc_packet <= 32'd0;
        __main___basesoc_ethmac_tx_crc_last_be2 <= 1'd0;
        __main___basesoc_ethmac_tx_crc_cnt <= 2'd3;
        __main___basesoc_ethmac_tx_crc_pipe_valid_source_valid <= 1'd0;
        __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_data <= 8'd0;
        __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_last_be <= 1'd0;
        __main___basesoc_ethmac_tx_crc_pipe_valid_source_payload_error <= 1'd0;
        builder_basesoc_txdatapath_liteethmactxlastbe_state <= 1'd0;
        builder_basesoc_txdatapath_liteethmacpaddinginserter_state <= 1'd0;
        builder_basesoc_txdatapath_bufferizeendpoints_state <= 2'd0;
        builder_basesoc_txdatapath_liteethmacpreambleinserter_state <= 2'd0;
        builder_basesoc_txdatapath_liteethmacgap_state <= 1'd0;
    end
    builder_multiregimpl3_regs0 <= __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q;
    builder_multiregimpl3_regs1 <= builder_multiregimpl3_regs0;
end

always @(posedge sdrio_clk) begin
    builder_inferedsdrtristate0_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate1_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate2_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate3_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate4_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate5_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate6_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate7_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate8_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate9_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate10_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate11_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate12_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate13_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate14_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate15_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate16_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate17_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate18_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate19_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate20_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate21_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate22_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate23_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate24_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate25_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate26_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate27_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate28_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate29_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate30_oe <= __main___dfi_p0_wrdata_en;
    builder_inferedsdrtristate31_oe <= __main___dfi_p0_wrdata_en;
end

always @(posedge sys_clk) begin
    case (builder_grant)
        1'd0: begin
            if ((~builder_request[0])) begin
                if (builder_request[1]) begin
                    builder_grant <= 1'd1;
                end
            end
        end
        1'd1: begin
            if ((~builder_request[1])) begin
                if (builder_request[0]) begin
                    builder_grant <= 1'd0;
                end
            end
        end
    endcase
    builder_slave_sel_r <= builder_slave_sel;
    if (builder_wait) begin
        if ((~builder_done)) begin
            builder_count <= (builder_count - 1'd1);
        end
    end else begin
        builder_count <= 20'd1000000;
    end
    if ((__main___basesoc_bus_errors != 32'd4294967295)) begin
        if (__main___basesoc_bus_error) begin
            __main___basesoc_bus_errors <= (__main___basesoc_bus_errors + 1'd1);
        end
    end
    if (builder_csr_bankarray_csrbank0_reset0_re) begin
        __main___basesoc_reset_storage[1:0] <= builder_csr_bankarray_csrbank0_reset0_r;
    end
    __main___basesoc_reset_re <= builder_csr_bankarray_csrbank0_reset0_re;
    if (builder_csr_bankarray_csrbank0_scratch0_re) begin
        __main___basesoc_scratch_storage[31:0] <= builder_csr_bankarray_csrbank0_scratch0_r;
    end
    __main___basesoc_scratch_re <= builder_csr_bankarray_csrbank0_scratch0_re;
    __main___basesoc_bus_errors_re <= builder_csr_bankarray_csrbank0_bus_errors_re;
    __main___basesoc_basesoc_ram_bus_ack <= 1'd0;
    if (((__main___basesoc_basesoc_ram_bus_cyc & __main___basesoc_basesoc_ram_bus_stb) & ((~__main___basesoc_basesoc_ram_bus_ack) | __main___basesoc_basesoc_adr_burst))) begin
        __main___basesoc_basesoc_ram_bus_ack <= 1'd1;
    end
    __main___basesoc_ram_bus_ram_bus_ack <= 1'd0;
    if (((__main___basesoc_ram_bus_ram_bus_cyc & __main___basesoc_ram_bus_ram_bus_stb) & ((~__main___basesoc_ram_bus_ram_bus_ack) | __main___basesoc_ram_adr_burst))) begin
        __main___basesoc_ram_bus_ram_bus_ack <= 1'd1;
    end
    {__main___basesoc_tx_tick, __main___basesoc_tx_phase} <= 23'd4947802;
    if (__main___basesoc_tx_enable) begin
        {__main___basesoc_tx_tick, __main___basesoc_tx_phase} <= (__main___basesoc_tx_phase + 23'd4947802);
    end
    builder_basesoc_rs232phytx_state <= builder_basesoc_rs232phytx_next_state;
    if (__main___basesoc_tx_count_rs232phytx_next_value_ce0) begin
        __main___basesoc_tx_count <= __main___basesoc_tx_count_rs232phytx_next_value0;
    end
    if (__main___basesoc_serial_tx_rs232phytx_next_value_ce1) begin
        serial_tx <= __main___basesoc_serial_tx_rs232phytx_next_value1;
    end
    if (__main___basesoc_tx_data_rs232phytx_next_value_ce2) begin
        __main___basesoc_tx_data <= __main___basesoc_tx_data_rs232phytx_next_value2;
    end
    __main___basesoc_rx_rx_d <= __main___basesoc_rx_rx;
    {__main___basesoc_rx_tick, __main___basesoc_rx_phase} <= 32'd2147483648;
    if (__main___basesoc_rx_enable) begin
        {__main___basesoc_rx_tick, __main___basesoc_rx_phase} <= (__main___basesoc_rx_phase + 23'd4947802);
    end
    builder_basesoc_rs232phyrx_state <= builder_basesoc_rs232phyrx_next_state;
    if (__main___basesoc_rx_count_rs232phyrx_next_value_ce0) begin
        __main___basesoc_rx_count <= __main___basesoc_rx_count_rs232phyrx_next_value0;
    end
    if (__main___basesoc_rx_data_rs232phyrx_next_value_ce1) begin
        __main___basesoc_rx_data <= __main___basesoc_rx_data_rs232phyrx_next_value1;
    end
    if (__main___basesoc_uart_tx_clear) begin
        __main___basesoc_uart_tx_pending <= 1'd0;
    end
    __main___basesoc_uart_tx_trigger_d <= __main___basesoc_uart_tx_trigger;
    if ((__main___basesoc_uart_tx_trigger & (~__main___basesoc_uart_tx_trigger_d))) begin
        __main___basesoc_uart_tx_pending <= 1'd1;
    end
    if (__main___basesoc_uart_rx_clear) begin
        __main___basesoc_uart_rx_pending <= 1'd0;
    end
    __main___basesoc_uart_rx_trigger_d <= __main___basesoc_uart_rx_trigger;
    if ((__main___basesoc_uart_rx_trigger & (~__main___basesoc_uart_rx_trigger_d))) begin
        __main___basesoc_uart_rx_pending <= 1'd1;
    end
    if (__main___basesoc_uart_tx_fifo_syncfifo_re) begin
        __main___basesoc_uart_tx_fifo_readable <= 1'd1;
    end else begin
        if (__main___basesoc_uart_tx_fifo_re) begin
            __main___basesoc_uart_tx_fifo_readable <= 1'd0;
        end
    end
    if (((__main___basesoc_uart_tx_fifo_syncfifo_we & __main___basesoc_uart_tx_fifo_syncfifo_writable) & (~__main___basesoc_uart_tx_fifo_replace))) begin
        __main___basesoc_uart_tx_fifo_produce <= (__main___basesoc_uart_tx_fifo_produce + 1'd1);
    end
    if (__main___basesoc_uart_tx_fifo_do_read) begin
        __main___basesoc_uart_tx_fifo_consume <= (__main___basesoc_uart_tx_fifo_consume + 1'd1);
    end
    if (((__main___basesoc_uart_tx_fifo_syncfifo_we & __main___basesoc_uart_tx_fifo_syncfifo_writable) & (~__main___basesoc_uart_tx_fifo_replace))) begin
        if ((~__main___basesoc_uart_tx_fifo_do_read)) begin
            __main___basesoc_uart_tx_fifo_level0 <= (__main___basesoc_uart_tx_fifo_level0 + 1'd1);
        end
    end else begin
        if (__main___basesoc_uart_tx_fifo_do_read) begin
            __main___basesoc_uart_tx_fifo_level0 <= (__main___basesoc_uart_tx_fifo_level0 - 1'd1);
        end
    end
    if (__main___basesoc_uart_rx_fifo_syncfifo_re) begin
        __main___basesoc_uart_rx_fifo_readable <= 1'd1;
    end else begin
        if (__main___basesoc_uart_rx_fifo_re) begin
            __main___basesoc_uart_rx_fifo_readable <= 1'd0;
        end
    end
    if (((__main___basesoc_uart_rx_fifo_syncfifo_we & __main___basesoc_uart_rx_fifo_syncfifo_writable) & (~__main___basesoc_uart_rx_fifo_replace))) begin
        __main___basesoc_uart_rx_fifo_produce <= (__main___basesoc_uart_rx_fifo_produce + 1'd1);
    end
    if (__main___basesoc_uart_rx_fifo_do_read) begin
        __main___basesoc_uart_rx_fifo_consume <= (__main___basesoc_uart_rx_fifo_consume + 1'd1);
    end
    if (((__main___basesoc_uart_rx_fifo_syncfifo_we & __main___basesoc_uart_rx_fifo_syncfifo_writable) & (~__main___basesoc_uart_rx_fifo_replace))) begin
        if ((~__main___basesoc_uart_rx_fifo_do_read)) begin
            __main___basesoc_uart_rx_fifo_level0 <= (__main___basesoc_uart_rx_fifo_level0 + 1'd1);
        end
    end else begin
        if (__main___basesoc_uart_rx_fifo_do_read) begin
            __main___basesoc_uart_rx_fifo_level0 <= (__main___basesoc_uart_rx_fifo_level0 - 1'd1);
        end
    end
    if (__main___basesoc_timer_en_storage) begin
        if ((__main___basesoc_timer_value == 1'd0)) begin
            __main___basesoc_timer_value <= __main___basesoc_timer_reload_storage;
        end else begin
            __main___basesoc_timer_value <= (__main___basesoc_timer_value - 1'd1);
        end
    end else begin
        __main___basesoc_timer_value <= __main___basesoc_timer_load_storage;
    end
    if (__main___basesoc_timer_update_value_re) begin
        __main___basesoc_timer_value_status <= __main___basesoc_timer_value;
    end
    __main___basesoc_uptime_cycles <= (__main___basesoc_uptime_cycles + 1'd1);
    if (__main___basesoc_uptime_latch_re) begin
        __main___basesoc_uptime_cycles_status <= __main___basesoc_uptime_cycles;
    end
    if (__main___basesoc_timer_zero_clear) begin
        __main___basesoc_timer_zero_pending <= 1'd0;
    end
    __main___basesoc_timer_zero_trigger_d <= __main___basesoc_timer_zero_trigger;
    if ((__main___basesoc_timer_zero_trigger & (~__main___basesoc_timer_zero_trigger_d))) begin
        __main___basesoc_timer_zero_pending <= 1'd1;
    end
    __main___rddata_en <= {__main___rddata_en, __main___dfi_p0_rddata_en};
    __main___dfi_p0_rddata_valid <= __main___rddata_en[2];
    if (__main___basesoc_sdram_csr_dfi_p0_rddata_valid) begin
        __main___basesoc_sdram_rddata_status <= __main___basesoc_sdram_csr_dfi_p0_rddata;
    end
    if ((__main___basesoc_sdram_timer_wait & (~__main___basesoc_sdram_timer_done0))) begin
        __main___basesoc_sdram_timer_count1 <= (__main___basesoc_sdram_timer_count1 - 1'd1);
    end else begin
        __main___basesoc_sdram_timer_count1 <= 11'd1562;
    end
    __main___basesoc_sdram_postponer_req_o <= 1'd0;
    if (__main___basesoc_sdram_postponer_req_i) begin
        __main___basesoc_sdram_postponer_count <= (__main___basesoc_sdram_postponer_count - 1'd1);
        if ((__main___basesoc_sdram_postponer_count == 1'd0)) begin
            __main___basesoc_sdram_postponer_count <= 1'd0;
            __main___basesoc_sdram_postponer_req_o <= 1'd1;
        end
    end
    if (__main___basesoc_sdram_sequencer_start0) begin
        __main___basesoc_sdram_sequencer_count <= 1'd0;
    end else begin
        if (__main___basesoc_sdram_sequencer_done1) begin
            if ((__main___basesoc_sdram_sequencer_count != 1'd0)) begin
                __main___basesoc_sdram_sequencer_count <= (__main___basesoc_sdram_sequencer_count - 1'd1);
            end
        end
    end
    __main___basesoc_sdram_cmd_payload_a <= 1'd0;
    __main___basesoc_sdram_cmd_payload_ba <= 1'd0;
    __main___basesoc_sdram_cmd_payload_cas <= 1'd0;
    __main___basesoc_sdram_cmd_payload_ras <= 1'd0;
    __main___basesoc_sdram_cmd_payload_we <= 1'd0;
    __main___basesoc_sdram_sequencer_done1 <= 1'd0;
    if ((__main___basesoc_sdram_sequencer_start1 & (__main___basesoc_sdram_sequencer_counter == 1'd0))) begin
        __main___basesoc_sdram_cmd_payload_a <= 11'd1024;
        __main___basesoc_sdram_cmd_payload_ba <= 1'd0;
        __main___basesoc_sdram_cmd_payload_cas <= 1'd0;
        __main___basesoc_sdram_cmd_payload_ras <= 1'd1;
        __main___basesoc_sdram_cmd_payload_we <= 1'd1;
    end
    if ((__main___basesoc_sdram_sequencer_counter == 2'd2)) begin
        __main___basesoc_sdram_cmd_payload_a <= 11'd1024;
        __main___basesoc_sdram_cmd_payload_ba <= 1'd0;
        __main___basesoc_sdram_cmd_payload_cas <= 1'd1;
        __main___basesoc_sdram_cmd_payload_ras <= 1'd1;
        __main___basesoc_sdram_cmd_payload_we <= 1'd0;
    end
    if ((__main___basesoc_sdram_sequencer_counter == 4'd8)) begin
        __main___basesoc_sdram_cmd_payload_a <= 1'd0;
        __main___basesoc_sdram_cmd_payload_ba <= 1'd0;
        __main___basesoc_sdram_cmd_payload_cas <= 1'd0;
        __main___basesoc_sdram_cmd_payload_ras <= 1'd0;
        __main___basesoc_sdram_cmd_payload_we <= 1'd0;
        __main___basesoc_sdram_sequencer_done1 <= 1'd1;
    end
    if ((__main___basesoc_sdram_sequencer_counter == 4'd8)) begin
        __main___basesoc_sdram_sequencer_counter <= 1'd0;
    end else begin
        if ((__main___basesoc_sdram_sequencer_counter != 1'd0)) begin
            __main___basesoc_sdram_sequencer_counter <= (__main___basesoc_sdram_sequencer_counter + 1'd1);
        end else begin
            if (__main___basesoc_sdram_sequencer_start1) begin
                __main___basesoc_sdram_sequencer_counter <= 1'd1;
            end
        end
    end
    builder_basesoc_litedramcore_refresher_state <= builder_basesoc_litedramcore_refresher_next_state;
    if (__main___basesoc_sdram_bankmachine0_row_close) begin
        __main___basesoc_sdram_bankmachine0_row_opened <= 1'd0;
    end else begin
        if (__main___basesoc_sdram_bankmachine0_row_open) begin
            __main___basesoc_sdram_bankmachine0_row_opened <= 1'd1;
            __main___basesoc_sdram_bankmachine0_row <= __main___basesoc_sdram_bankmachine0_source_source_payload_addr[18:8];
        end
    end
    if (((__main___basesoc_sdram_bankmachine0_syncfifo0_we & __main___basesoc_sdram_bankmachine0_syncfifo0_writable) & (~__main___basesoc_sdram_bankmachine0_replace))) begin
        __main___basesoc_sdram_bankmachine0_produce <= (__main___basesoc_sdram_bankmachine0_produce + 1'd1);
    end
    if (__main___basesoc_sdram_bankmachine0_do_read) begin
        __main___basesoc_sdram_bankmachine0_consume <= (__main___basesoc_sdram_bankmachine0_consume + 1'd1);
    end
    if (((__main___basesoc_sdram_bankmachine0_syncfifo0_we & __main___basesoc_sdram_bankmachine0_syncfifo0_writable) & (~__main___basesoc_sdram_bankmachine0_replace))) begin
        if ((~__main___basesoc_sdram_bankmachine0_do_read)) begin
            __main___basesoc_sdram_bankmachine0_level <= (__main___basesoc_sdram_bankmachine0_level + 1'd1);
        end
    end else begin
        if (__main___basesoc_sdram_bankmachine0_do_read) begin
            __main___basesoc_sdram_bankmachine0_level <= (__main___basesoc_sdram_bankmachine0_level - 1'd1);
        end
    end
    if (((~__main___basesoc_sdram_bankmachine0_pipe_valid_source_valid) | __main___basesoc_sdram_bankmachine0_pipe_valid_source_ready)) begin
        __main___basesoc_sdram_bankmachine0_pipe_valid_source_valid <= __main___basesoc_sdram_bankmachine0_pipe_valid_sink_valid;
        __main___basesoc_sdram_bankmachine0_pipe_valid_source_first <= __main___basesoc_sdram_bankmachine0_pipe_valid_sink_first;
        __main___basesoc_sdram_bankmachine0_pipe_valid_source_last <= __main___basesoc_sdram_bankmachine0_pipe_valid_sink_last;
        __main___basesoc_sdram_bankmachine0_pipe_valid_source_payload_we <= __main___basesoc_sdram_bankmachine0_pipe_valid_sink_payload_we;
        __main___basesoc_sdram_bankmachine0_pipe_valid_source_payload_addr <= __main___basesoc_sdram_bankmachine0_pipe_valid_sink_payload_addr;
    end
    if (__main___basesoc_sdram_bankmachine0_twtpcon_valid) begin
        __main___basesoc_sdram_bankmachine0_twtpcon_count <= 3'd4;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine0_twtpcon_ready)) begin
            __main___basesoc_sdram_bankmachine0_twtpcon_count <= (__main___basesoc_sdram_bankmachine0_twtpcon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine0_twtpcon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (__main___basesoc_sdram_bankmachine0_trccon_valid) begin
        __main___basesoc_sdram_bankmachine0_trccon_count <= 3'd5;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine0_trccon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine0_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine0_trccon_ready)) begin
            __main___basesoc_sdram_bankmachine0_trccon_count <= (__main___basesoc_sdram_bankmachine0_trccon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine0_trccon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine0_trccon_ready <= 1'd1;
            end
        end
    end
    if (__main___basesoc_sdram_bankmachine0_trascon_valid) begin
        __main___basesoc_sdram_bankmachine0_trascon_count <= 3'd4;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine0_trascon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine0_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine0_trascon_ready)) begin
            __main___basesoc_sdram_bankmachine0_trascon_count <= (__main___basesoc_sdram_bankmachine0_trascon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine0_trascon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine0_trascon_ready <= 1'd1;
            end
        end
    end
    builder_basesoc_litedramcore_bankmachine0_state <= builder_basesoc_litedramcore_bankmachine0_next_state;
    if (__main___basesoc_sdram_bankmachine1_row_close) begin
        __main___basesoc_sdram_bankmachine1_row_opened <= 1'd0;
    end else begin
        if (__main___basesoc_sdram_bankmachine1_row_open) begin
            __main___basesoc_sdram_bankmachine1_row_opened <= 1'd1;
            __main___basesoc_sdram_bankmachine1_row <= __main___basesoc_sdram_bankmachine1_source_source_payload_addr[18:8];
        end
    end
    if (((__main___basesoc_sdram_bankmachine1_syncfifo1_we & __main___basesoc_sdram_bankmachine1_syncfifo1_writable) & (~__main___basesoc_sdram_bankmachine1_replace))) begin
        __main___basesoc_sdram_bankmachine1_produce <= (__main___basesoc_sdram_bankmachine1_produce + 1'd1);
    end
    if (__main___basesoc_sdram_bankmachine1_do_read) begin
        __main___basesoc_sdram_bankmachine1_consume <= (__main___basesoc_sdram_bankmachine1_consume + 1'd1);
    end
    if (((__main___basesoc_sdram_bankmachine1_syncfifo1_we & __main___basesoc_sdram_bankmachine1_syncfifo1_writable) & (~__main___basesoc_sdram_bankmachine1_replace))) begin
        if ((~__main___basesoc_sdram_bankmachine1_do_read)) begin
            __main___basesoc_sdram_bankmachine1_level <= (__main___basesoc_sdram_bankmachine1_level + 1'd1);
        end
    end else begin
        if (__main___basesoc_sdram_bankmachine1_do_read) begin
            __main___basesoc_sdram_bankmachine1_level <= (__main___basesoc_sdram_bankmachine1_level - 1'd1);
        end
    end
    if (((~__main___basesoc_sdram_bankmachine1_pipe_valid_source_valid) | __main___basesoc_sdram_bankmachine1_pipe_valid_source_ready)) begin
        __main___basesoc_sdram_bankmachine1_pipe_valid_source_valid <= __main___basesoc_sdram_bankmachine1_pipe_valid_sink_valid;
        __main___basesoc_sdram_bankmachine1_pipe_valid_source_first <= __main___basesoc_sdram_bankmachine1_pipe_valid_sink_first;
        __main___basesoc_sdram_bankmachine1_pipe_valid_source_last <= __main___basesoc_sdram_bankmachine1_pipe_valid_sink_last;
        __main___basesoc_sdram_bankmachine1_pipe_valid_source_payload_we <= __main___basesoc_sdram_bankmachine1_pipe_valid_sink_payload_we;
        __main___basesoc_sdram_bankmachine1_pipe_valid_source_payload_addr <= __main___basesoc_sdram_bankmachine1_pipe_valid_sink_payload_addr;
    end
    if (__main___basesoc_sdram_bankmachine1_twtpcon_valid) begin
        __main___basesoc_sdram_bankmachine1_twtpcon_count <= 3'd4;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine1_twtpcon_ready)) begin
            __main___basesoc_sdram_bankmachine1_twtpcon_count <= (__main___basesoc_sdram_bankmachine1_twtpcon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine1_twtpcon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (__main___basesoc_sdram_bankmachine1_trccon_valid) begin
        __main___basesoc_sdram_bankmachine1_trccon_count <= 3'd5;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine1_trccon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine1_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine1_trccon_ready)) begin
            __main___basesoc_sdram_bankmachine1_trccon_count <= (__main___basesoc_sdram_bankmachine1_trccon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine1_trccon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine1_trccon_ready <= 1'd1;
            end
        end
    end
    if (__main___basesoc_sdram_bankmachine1_trascon_valid) begin
        __main___basesoc_sdram_bankmachine1_trascon_count <= 3'd4;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine1_trascon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine1_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine1_trascon_ready)) begin
            __main___basesoc_sdram_bankmachine1_trascon_count <= (__main___basesoc_sdram_bankmachine1_trascon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine1_trascon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine1_trascon_ready <= 1'd1;
            end
        end
    end
    builder_basesoc_litedramcore_bankmachine1_state <= builder_basesoc_litedramcore_bankmachine1_next_state;
    if (__main___basesoc_sdram_bankmachine2_row_close) begin
        __main___basesoc_sdram_bankmachine2_row_opened <= 1'd0;
    end else begin
        if (__main___basesoc_sdram_bankmachine2_row_open) begin
            __main___basesoc_sdram_bankmachine2_row_opened <= 1'd1;
            __main___basesoc_sdram_bankmachine2_row <= __main___basesoc_sdram_bankmachine2_source_source_payload_addr[18:8];
        end
    end
    if (((__main___basesoc_sdram_bankmachine2_syncfifo2_we & __main___basesoc_sdram_bankmachine2_syncfifo2_writable) & (~__main___basesoc_sdram_bankmachine2_replace))) begin
        __main___basesoc_sdram_bankmachine2_produce <= (__main___basesoc_sdram_bankmachine2_produce + 1'd1);
    end
    if (__main___basesoc_sdram_bankmachine2_do_read) begin
        __main___basesoc_sdram_bankmachine2_consume <= (__main___basesoc_sdram_bankmachine2_consume + 1'd1);
    end
    if (((__main___basesoc_sdram_bankmachine2_syncfifo2_we & __main___basesoc_sdram_bankmachine2_syncfifo2_writable) & (~__main___basesoc_sdram_bankmachine2_replace))) begin
        if ((~__main___basesoc_sdram_bankmachine2_do_read)) begin
            __main___basesoc_sdram_bankmachine2_level <= (__main___basesoc_sdram_bankmachine2_level + 1'd1);
        end
    end else begin
        if (__main___basesoc_sdram_bankmachine2_do_read) begin
            __main___basesoc_sdram_bankmachine2_level <= (__main___basesoc_sdram_bankmachine2_level - 1'd1);
        end
    end
    if (((~__main___basesoc_sdram_bankmachine2_pipe_valid_source_valid) | __main___basesoc_sdram_bankmachine2_pipe_valid_source_ready)) begin
        __main___basesoc_sdram_bankmachine2_pipe_valid_source_valid <= __main___basesoc_sdram_bankmachine2_pipe_valid_sink_valid;
        __main___basesoc_sdram_bankmachine2_pipe_valid_source_first <= __main___basesoc_sdram_bankmachine2_pipe_valid_sink_first;
        __main___basesoc_sdram_bankmachine2_pipe_valid_source_last <= __main___basesoc_sdram_bankmachine2_pipe_valid_sink_last;
        __main___basesoc_sdram_bankmachine2_pipe_valid_source_payload_we <= __main___basesoc_sdram_bankmachine2_pipe_valid_sink_payload_we;
        __main___basesoc_sdram_bankmachine2_pipe_valid_source_payload_addr <= __main___basesoc_sdram_bankmachine2_pipe_valid_sink_payload_addr;
    end
    if (__main___basesoc_sdram_bankmachine2_twtpcon_valid) begin
        __main___basesoc_sdram_bankmachine2_twtpcon_count <= 3'd4;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine2_twtpcon_ready)) begin
            __main___basesoc_sdram_bankmachine2_twtpcon_count <= (__main___basesoc_sdram_bankmachine2_twtpcon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine2_twtpcon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (__main___basesoc_sdram_bankmachine2_trccon_valid) begin
        __main___basesoc_sdram_bankmachine2_trccon_count <= 3'd5;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine2_trccon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine2_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine2_trccon_ready)) begin
            __main___basesoc_sdram_bankmachine2_trccon_count <= (__main___basesoc_sdram_bankmachine2_trccon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine2_trccon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine2_trccon_ready <= 1'd1;
            end
        end
    end
    if (__main___basesoc_sdram_bankmachine2_trascon_valid) begin
        __main___basesoc_sdram_bankmachine2_trascon_count <= 3'd4;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine2_trascon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine2_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine2_trascon_ready)) begin
            __main___basesoc_sdram_bankmachine2_trascon_count <= (__main___basesoc_sdram_bankmachine2_trascon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine2_trascon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine2_trascon_ready <= 1'd1;
            end
        end
    end
    builder_basesoc_litedramcore_bankmachine2_state <= builder_basesoc_litedramcore_bankmachine2_next_state;
    if (__main___basesoc_sdram_bankmachine3_row_close) begin
        __main___basesoc_sdram_bankmachine3_row_opened <= 1'd0;
    end else begin
        if (__main___basesoc_sdram_bankmachine3_row_open) begin
            __main___basesoc_sdram_bankmachine3_row_opened <= 1'd1;
            __main___basesoc_sdram_bankmachine3_row <= __main___basesoc_sdram_bankmachine3_source_source_payload_addr[18:8];
        end
    end
    if (((__main___basesoc_sdram_bankmachine3_syncfifo3_we & __main___basesoc_sdram_bankmachine3_syncfifo3_writable) & (~__main___basesoc_sdram_bankmachine3_replace))) begin
        __main___basesoc_sdram_bankmachine3_produce <= (__main___basesoc_sdram_bankmachine3_produce + 1'd1);
    end
    if (__main___basesoc_sdram_bankmachine3_do_read) begin
        __main___basesoc_sdram_bankmachine3_consume <= (__main___basesoc_sdram_bankmachine3_consume + 1'd1);
    end
    if (((__main___basesoc_sdram_bankmachine3_syncfifo3_we & __main___basesoc_sdram_bankmachine3_syncfifo3_writable) & (~__main___basesoc_sdram_bankmachine3_replace))) begin
        if ((~__main___basesoc_sdram_bankmachine3_do_read)) begin
            __main___basesoc_sdram_bankmachine3_level <= (__main___basesoc_sdram_bankmachine3_level + 1'd1);
        end
    end else begin
        if (__main___basesoc_sdram_bankmachine3_do_read) begin
            __main___basesoc_sdram_bankmachine3_level <= (__main___basesoc_sdram_bankmachine3_level - 1'd1);
        end
    end
    if (((~__main___basesoc_sdram_bankmachine3_pipe_valid_source_valid) | __main___basesoc_sdram_bankmachine3_pipe_valid_source_ready)) begin
        __main___basesoc_sdram_bankmachine3_pipe_valid_source_valid <= __main___basesoc_sdram_bankmachine3_pipe_valid_sink_valid;
        __main___basesoc_sdram_bankmachine3_pipe_valid_source_first <= __main___basesoc_sdram_bankmachine3_pipe_valid_sink_first;
        __main___basesoc_sdram_bankmachine3_pipe_valid_source_last <= __main___basesoc_sdram_bankmachine3_pipe_valid_sink_last;
        __main___basesoc_sdram_bankmachine3_pipe_valid_source_payload_we <= __main___basesoc_sdram_bankmachine3_pipe_valid_sink_payload_we;
        __main___basesoc_sdram_bankmachine3_pipe_valid_source_payload_addr <= __main___basesoc_sdram_bankmachine3_pipe_valid_sink_payload_addr;
    end
    if (__main___basesoc_sdram_bankmachine3_twtpcon_valid) begin
        __main___basesoc_sdram_bankmachine3_twtpcon_count <= 3'd4;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine3_twtpcon_ready)) begin
            __main___basesoc_sdram_bankmachine3_twtpcon_count <= (__main___basesoc_sdram_bankmachine3_twtpcon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine3_twtpcon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (__main___basesoc_sdram_bankmachine3_trccon_valid) begin
        __main___basesoc_sdram_bankmachine3_trccon_count <= 3'd5;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine3_trccon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine3_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine3_trccon_ready)) begin
            __main___basesoc_sdram_bankmachine3_trccon_count <= (__main___basesoc_sdram_bankmachine3_trccon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine3_trccon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine3_trccon_ready <= 1'd1;
            end
        end
    end
    if (__main___basesoc_sdram_bankmachine3_trascon_valid) begin
        __main___basesoc_sdram_bankmachine3_trascon_count <= 3'd4;
        if (1'd0) begin
            __main___basesoc_sdram_bankmachine3_trascon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_bankmachine3_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_bankmachine3_trascon_ready)) begin
            __main___basesoc_sdram_bankmachine3_trascon_count <= (__main___basesoc_sdram_bankmachine3_trascon_count - 1'd1);
            if ((__main___basesoc_sdram_bankmachine3_trascon_count == 1'd1)) begin
                __main___basesoc_sdram_bankmachine3_trascon_ready <= 1'd1;
            end
        end
    end
    builder_basesoc_litedramcore_bankmachine3_state <= builder_basesoc_litedramcore_bankmachine3_next_state;
    if ((~__main___basesoc_sdram_en0)) begin
        __main___basesoc_sdram_time0 <= 5'd31;
    end else begin
        if ((~__main___basesoc_sdram_max_time0)) begin
            __main___basesoc_sdram_time0 <= (__main___basesoc_sdram_time0 - 1'd1);
        end
    end
    if ((~__main___basesoc_sdram_en1)) begin
        __main___basesoc_sdram_time1 <= 4'd15;
    end else begin
        if ((~__main___basesoc_sdram_max_time1)) begin
            __main___basesoc_sdram_time1 <= (__main___basesoc_sdram_time1 - 1'd1);
        end
    end
    if (__main___basesoc_sdram_choose_cmd_ce) begin
        case (__main___basesoc_sdram_choose_cmd_grant)
            1'd0: begin
                if (__main___basesoc_sdram_choose_cmd_request[1]) begin
                    __main___basesoc_sdram_choose_cmd_grant <= 1'd1;
                end else begin
                    if (__main___basesoc_sdram_choose_cmd_request[2]) begin
                        __main___basesoc_sdram_choose_cmd_grant <= 2'd2;
                    end else begin
                        if (__main___basesoc_sdram_choose_cmd_request[3]) begin
                            __main___basesoc_sdram_choose_cmd_grant <= 2'd3;
                        end
                    end
                end
            end
            1'd1: begin
                if (__main___basesoc_sdram_choose_cmd_request[2]) begin
                    __main___basesoc_sdram_choose_cmd_grant <= 2'd2;
                end else begin
                    if (__main___basesoc_sdram_choose_cmd_request[3]) begin
                        __main___basesoc_sdram_choose_cmd_grant <= 2'd3;
                    end else begin
                        if (__main___basesoc_sdram_choose_cmd_request[0]) begin
                            __main___basesoc_sdram_choose_cmd_grant <= 1'd0;
                        end
                    end
                end
            end
            2'd2: begin
                if (__main___basesoc_sdram_choose_cmd_request[3]) begin
                    __main___basesoc_sdram_choose_cmd_grant <= 2'd3;
                end else begin
                    if (__main___basesoc_sdram_choose_cmd_request[0]) begin
                        __main___basesoc_sdram_choose_cmd_grant <= 1'd0;
                    end else begin
                        if (__main___basesoc_sdram_choose_cmd_request[1]) begin
                            __main___basesoc_sdram_choose_cmd_grant <= 1'd1;
                        end
                    end
                end
            end
            2'd3: begin
                if (__main___basesoc_sdram_choose_cmd_request[0]) begin
                    __main___basesoc_sdram_choose_cmd_grant <= 1'd0;
                end else begin
                    if (__main___basesoc_sdram_choose_cmd_request[1]) begin
                        __main___basesoc_sdram_choose_cmd_grant <= 1'd1;
                    end else begin
                        if (__main___basesoc_sdram_choose_cmd_request[2]) begin
                            __main___basesoc_sdram_choose_cmd_grant <= 2'd2;
                        end
                    end
                end
            end
        endcase
    end
    if (__main___basesoc_sdram_choose_req_ce) begin
        case (__main___basesoc_sdram_choose_req_grant)
            1'd0: begin
                if (__main___basesoc_sdram_choose_req_request[1]) begin
                    __main___basesoc_sdram_choose_req_grant <= 1'd1;
                end else begin
                    if (__main___basesoc_sdram_choose_req_request[2]) begin
                        __main___basesoc_sdram_choose_req_grant <= 2'd2;
                    end else begin
                        if (__main___basesoc_sdram_choose_req_request[3]) begin
                            __main___basesoc_sdram_choose_req_grant <= 2'd3;
                        end
                    end
                end
            end
            1'd1: begin
                if (__main___basesoc_sdram_choose_req_request[2]) begin
                    __main___basesoc_sdram_choose_req_grant <= 2'd2;
                end else begin
                    if (__main___basesoc_sdram_choose_req_request[3]) begin
                        __main___basesoc_sdram_choose_req_grant <= 2'd3;
                    end else begin
                        if (__main___basesoc_sdram_choose_req_request[0]) begin
                            __main___basesoc_sdram_choose_req_grant <= 1'd0;
                        end
                    end
                end
            end
            2'd2: begin
                if (__main___basesoc_sdram_choose_req_request[3]) begin
                    __main___basesoc_sdram_choose_req_grant <= 2'd3;
                end else begin
                    if (__main___basesoc_sdram_choose_req_request[0]) begin
                        __main___basesoc_sdram_choose_req_grant <= 1'd0;
                    end else begin
                        if (__main___basesoc_sdram_choose_req_request[1]) begin
                            __main___basesoc_sdram_choose_req_grant <= 1'd1;
                        end
                    end
                end
            end
            2'd3: begin
                if (__main___basesoc_sdram_choose_req_request[0]) begin
                    __main___basesoc_sdram_choose_req_grant <= 1'd0;
                end else begin
                    if (__main___basesoc_sdram_choose_req_request[1]) begin
                        __main___basesoc_sdram_choose_req_grant <= 1'd1;
                    end else begin
                        if (__main___basesoc_sdram_choose_req_request[2]) begin
                            __main___basesoc_sdram_choose_req_grant <= 2'd2;
                        end
                    end
                end
            end
        endcase
    end
    __main___basesoc_sdram_dfi_p0_cs_n <= 1'd0;
    __main___basesoc_sdram_dfi_p0_bank <= builder_sync_rhs_array_muxed0;
    __main___basesoc_sdram_dfi_p0_address <= builder_sync_rhs_array_muxed1;
    __main___basesoc_sdram_dfi_p0_cas_n <= (~builder_sync_rhs_array_muxed2);
    __main___basesoc_sdram_dfi_p0_ras_n <= (~builder_sync_rhs_array_muxed3);
    __main___basesoc_sdram_dfi_p0_we_n <= (~builder_sync_rhs_array_muxed4);
    __main___basesoc_sdram_dfi_p0_rddata_en <= builder_sync_rhs_array_muxed5;
    __main___basesoc_sdram_dfi_p0_wrdata_en <= builder_sync_rhs_array_muxed6;
    if (__main___basesoc_sdram_trrdcon_valid) begin
        __main___basesoc_sdram_trrdcon_count <= 1'd1;
        if (1'd0) begin
            __main___basesoc_sdram_trrdcon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_trrdcon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_trrdcon_ready)) begin
            __main___basesoc_sdram_trrdcon_count <= (__main___basesoc_sdram_trrdcon_count - 1'd1);
            if ((__main___basesoc_sdram_trrdcon_count == 1'd1)) begin
                __main___basesoc_sdram_trrdcon_ready <= 1'd1;
            end
        end
    end
    if (__main___basesoc_sdram_tccdcon_valid) begin
        __main___basesoc_sdram_tccdcon_count <= 1'd0;
        if (1'd1) begin
            __main___basesoc_sdram_tccdcon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_tccdcon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_tccdcon_ready)) begin
            __main___basesoc_sdram_tccdcon_count <= (__main___basesoc_sdram_tccdcon_count - 1'd1);
            if ((__main___basesoc_sdram_tccdcon_count == 1'd1)) begin
                __main___basesoc_sdram_tccdcon_ready <= 1'd1;
            end
        end
    end
    if (__main___basesoc_sdram_twtrcon_valid) begin
        __main___basesoc_sdram_twtrcon_count <= 2'd3;
        if (1'd0) begin
            __main___basesoc_sdram_twtrcon_ready <= 1'd1;
        end else begin
            __main___basesoc_sdram_twtrcon_ready <= 1'd0;
        end
    end else begin
        if ((~__main___basesoc_sdram_twtrcon_ready)) begin
            __main___basesoc_sdram_twtrcon_count <= (__main___basesoc_sdram_twtrcon_count - 1'd1);
            if ((__main___basesoc_sdram_twtrcon_count == 1'd1)) begin
                __main___basesoc_sdram_twtrcon_ready <= 1'd1;
            end
        end
    end
    builder_basesoc_litedramcore_multiplexer_state <= builder_basesoc_litedramcore_multiplexer_next_state;
    builder_basesoc_litedramcore_new_master_wdata_ready <= ((((1'd0 | ((builder_basesoc_litedramcore_roundrobin0_grant == 1'd0) & __main___basesoc_sdram_interface_bank0_wdata_ready)) | ((builder_basesoc_litedramcore_roundrobin1_grant == 1'd0) & __main___basesoc_sdram_interface_bank1_wdata_ready)) | ((builder_basesoc_litedramcore_roundrobin2_grant == 1'd0) & __main___basesoc_sdram_interface_bank2_wdata_ready)) | ((builder_basesoc_litedramcore_roundrobin3_grant == 1'd0) & __main___basesoc_sdram_interface_bank3_wdata_ready));
    builder_basesoc_litedramcore_new_master_rdata_valid0 <= ((((1'd0 | ((builder_basesoc_litedramcore_roundrobin0_grant == 1'd0) & __main___basesoc_sdram_interface_bank0_rdata_valid)) | ((builder_basesoc_litedramcore_roundrobin1_grant == 1'd0) & __main___basesoc_sdram_interface_bank1_rdata_valid)) | ((builder_basesoc_litedramcore_roundrobin2_grant == 1'd0) & __main___basesoc_sdram_interface_bank2_rdata_valid)) | ((builder_basesoc_litedramcore_roundrobin3_grant == 1'd0) & __main___basesoc_sdram_interface_bank3_rdata_valid));
    builder_basesoc_litedramcore_new_master_rdata_valid1 <= builder_basesoc_litedramcore_new_master_rdata_valid0;
    builder_basesoc_litedramcore_new_master_rdata_valid2 <= builder_basesoc_litedramcore_new_master_rdata_valid1;
    builder_basesoc_litedramcore_new_master_rdata_valid3 <= builder_basesoc_litedramcore_new_master_rdata_valid2;
    __main___basesoc_adr_offset_r <= __main___basesoc_wb_sdram_adr[1:0];
    builder_basesoc_fullmemorywe_state <= builder_basesoc_fullmemorywe_next_state;
    builder_basesoc_litedramnativeportconverter_state <= builder_basesoc_litedramnativeportconverter_next_state;
    if (__main___basesoc_wishbone_bridge_count_litedramnativeportconverter_next_value_ce) begin
        __main___basesoc_wishbone_bridge_count <= __main___basesoc_wishbone_bridge_count_litedramnativeportconverter_next_value;
    end
    if ((__main___basesoc_wishbone_bridge_wdata_converter_converter_source_valid & __main___basesoc_wishbone_bridge_wdata_converter_converter_source_ready)) begin
        if (__main___basesoc_wishbone_bridge_wdata_converter_converter_last) begin
            __main___basesoc_wishbone_bridge_wdata_converter_converter_mux <= 1'd0;
        end else begin
            __main___basesoc_wishbone_bridge_wdata_converter_converter_mux <= (__main___basesoc_wishbone_bridge_wdata_converter_converter_mux + 1'd1);
        end
    end
    if (__main___basesoc_wishbone_bridge_rdata_converter_converter_source_ready) begin
        __main___basesoc_wishbone_bridge_rdata_converter_converter_strobe_all <= 1'd0;
    end
    if (__main___basesoc_wishbone_bridge_rdata_converter_converter_load_part) begin
        if (((__main___basesoc_wishbone_bridge_rdata_converter_converter_demux == 2'd3) | __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_last)) begin
            __main___basesoc_wishbone_bridge_rdata_converter_converter_demux <= 1'd0;
            __main___basesoc_wishbone_bridge_rdata_converter_converter_strobe_all <= 1'd1;
        end else begin
            __main___basesoc_wishbone_bridge_rdata_converter_converter_demux <= (__main___basesoc_wishbone_bridge_rdata_converter_converter_demux + 1'd1);
        end
    end
    if ((__main___basesoc_wishbone_bridge_rdata_converter_converter_source_valid & __main___basesoc_wishbone_bridge_rdata_converter_converter_source_ready)) begin
        if ((__main___basesoc_wishbone_bridge_rdata_converter_converter_sink_valid & __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_ready)) begin
            __main___basesoc_wishbone_bridge_rdata_converter_converter_source_first <= __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_first;
            __main___basesoc_wishbone_bridge_rdata_converter_converter_source_last <= __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_last;
        end else begin
            __main___basesoc_wishbone_bridge_rdata_converter_converter_source_first <= 1'd0;
            __main___basesoc_wishbone_bridge_rdata_converter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((__main___basesoc_wishbone_bridge_rdata_converter_converter_sink_valid & __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_ready)) begin
            __main___basesoc_wishbone_bridge_rdata_converter_converter_source_first <= (__main___basesoc_wishbone_bridge_rdata_converter_converter_sink_first | __main___basesoc_wishbone_bridge_rdata_converter_converter_source_first);
            __main___basesoc_wishbone_bridge_rdata_converter_converter_source_last <= (__main___basesoc_wishbone_bridge_rdata_converter_converter_sink_last | __main___basesoc_wishbone_bridge_rdata_converter_converter_source_last);
        end
    end
    if (__main___basesoc_wishbone_bridge_rdata_converter_converter_load_part) begin
        case (__main___basesoc_wishbone_bridge_rdata_converter_converter_demux)
            1'd0: begin
                __main___basesoc_wishbone_bridge_rdata_converter_converter_source_payload_data[31:0] <= __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_payload_data;
            end
            1'd1: begin
                __main___basesoc_wishbone_bridge_rdata_converter_converter_source_payload_data[63:32] <= __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_payload_data;
            end
            2'd2: begin
                __main___basesoc_wishbone_bridge_rdata_converter_converter_source_payload_data[95:64] <= __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_payload_data;
            end
            2'd3: begin
                __main___basesoc_wishbone_bridge_rdata_converter_converter_source_payload_data[127:96] <= __main___basesoc_wishbone_bridge_rdata_converter_converter_sink_payload_data;
            end
        endcase
    end
    if (__main___basesoc_wishbone_bridge_rdata_converter_converter_load_part) begin
        __main___basesoc_wishbone_bridge_rdata_converter_converter_source_payload_valid_token_count <= (__main___basesoc_wishbone_bridge_rdata_converter_converter_demux + 1'd1);
    end
    builder_basesoc_fsm_state <= builder_basesoc_fsm_next_state;
    if (__main___basesoc_wishbone_bridge_aborted_fsm_next_value_ce) begin
        __main___basesoc_wishbone_bridge_aborted <= __main___basesoc_wishbone_bridge_aborted_fsm_next_value;
    end
    if (__main___ethphy_counter_ce) begin
        __main___ethphy_counter <= (__main___ethphy_counter + 1'd1);
    end
    __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary <= __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next_binary;
    __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q <= __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_next;
    if (__main___basesoc_ethmac_pulsesynchronizer0_o) begin
        __main___basesoc_ethmac_preamble_errors_status <= (__main___basesoc_ethmac_preamble_errors_status + 1'd1);
    end
    if (__main___basesoc_ethmac_pulsesynchronizer1_o) begin
        __main___basesoc_ethmac_crc_errors_status <= (__main___basesoc_ethmac_crc_errors_status + 1'd1);
    end
    __main___basesoc_ethmac_pulsesynchronizer0_toggle_o_r <= __main___basesoc_ethmac_pulsesynchronizer0_toggle_o;
    __main___basesoc_ethmac_pulsesynchronizer1_toggle_o_r <= __main___basesoc_ethmac_pulsesynchronizer1_toggle_o;
    __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_binary <= __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next_binary;
    __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q <= __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_next;
    if (((__main___basesoc_ethmac_sram49_we & __main___basesoc_ethmac_sram50_writable) & (~__main___basesoc_ethmac_sram56_replace))) begin
        __main___basesoc_ethmac_sram57_produce <= (__main___basesoc_ethmac_sram57_produce + 1'd1);
    end
    if (__main___basesoc_ethmac_sram63_do_read) begin
        __main___basesoc_ethmac_sram58_consume <= (__main___basesoc_ethmac_sram58_consume + 1'd1);
    end
    if (((__main___basesoc_ethmac_sram49_we & __main___basesoc_ethmac_sram50_writable) & (~__main___basesoc_ethmac_sram56_replace))) begin
        if ((~__main___basesoc_ethmac_sram63_do_read)) begin
            __main___basesoc_ethmac_sram55_level <= (__main___basesoc_ethmac_sram55_level + 1'd1);
        end
    end else begin
        if (__main___basesoc_ethmac_sram63_do_read) begin
            __main___basesoc_ethmac_sram55_level <= (__main___basesoc_ethmac_sram55_level - 1'd1);
        end
    end
    builder_basesoc_liteethmacsramwriter_state <= builder_basesoc_liteethmacsramwriter_next_state;
    if (__main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value_ce) begin
        __main___basesoc_ethmac_sram35_length <= __main___basesoc_ethmac_sram35_length_clockdomainsrenamer_liteethmacsramwriter_t_next_value;
    end
    if (__main___basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value_ce) begin
        __main___basesoc_ethmac_sram13_status <= __main___basesoc_ethmac_sram13_status_clockdomainsrenamer_liteethmacsramwriter_f_next_value;
    end
    if (__main___basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value_ce) begin
        __main___basesoc_ethmac_slot <= __main___basesoc_ethmac_slot_clockdomainsrenamer_liteethmacsramwriter_next_value;
    end
    if (__main___basesoc_ethmac_sram108_clear) begin
        __main___basesoc_ethmac_sram106_pending <= 1'd0;
    end
    if (__main___basesoc_ethmac_sram107_trigger) begin
        __main___basesoc_ethmac_sram106_pending <= 1'd1;
    end
    if (((__main___basesoc_ethmac_sram135_we & __main___basesoc_ethmac_sram136_writable) & (~__main___basesoc_ethmac_sram142_replace))) begin
        __main___basesoc_ethmac_sram143_produce <= (__main___basesoc_ethmac_sram143_produce + 1'd1);
    end
    if (__main___basesoc_ethmac_sram149_do_read) begin
        __main___basesoc_ethmac_sram144_consume <= (__main___basesoc_ethmac_sram144_consume + 1'd1);
    end
    if (((__main___basesoc_ethmac_sram135_we & __main___basesoc_ethmac_sram136_writable) & (~__main___basesoc_ethmac_sram142_replace))) begin
        if ((~__main___basesoc_ethmac_sram149_do_read)) begin
            __main___basesoc_ethmac_sram141_level <= (__main___basesoc_ethmac_sram141_level + 1'd1);
        end
    end else begin
        if (__main___basesoc_ethmac_sram149_do_read) begin
            __main___basesoc_ethmac_sram141_level <= (__main___basesoc_ethmac_sram141_level - 1'd1);
        end
    end
    builder_basesoc_liteethmacsramreader_state <= builder_basesoc_liteethmacsramreader_next_state;
    if (__main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value_ce) begin
        __main___basesoc_ethmac_sram122_length <= __main___basesoc_ethmac_sram122_length_clockdomainsrenamer_liteethmacsramreader_next_value;
    end
    __main___basesoc_ethmac_interface0_ack <= 1'd0;
    if (((__main___basesoc_ethmac_interface0_cyc & __main___basesoc_ethmac_interface0_stb) & ((~__main___basesoc_ethmac_interface0_ack) | __main___basesoc_ethmac_sram2_adr_burst))) begin
        __main___basesoc_ethmac_interface0_ack <= 1'd1;
    end
    __main___basesoc_ethmac_interface1_ack <= 1'd0;
    if (((__main___basesoc_ethmac_interface1_cyc & __main___basesoc_ethmac_interface1_stb) & ((~__main___basesoc_ethmac_interface1_ack) | __main___basesoc_ethmac_sram3_adr_burst))) begin
        __main___basesoc_ethmac_interface1_ack <= 1'd1;
    end
    __main___basesoc_ethmac_interface2_ack <= 1'd0;
    if (((__main___basesoc_ethmac_interface2_cyc & __main___basesoc_ethmac_interface2_stb) & ((~__main___basesoc_ethmac_interface2_ack) | __main___basesoc_ethmac_sram4_adr_burst))) begin
        __main___basesoc_ethmac_interface2_ack <= 1'd1;
    end
    __main___basesoc_ethmac_interface3_ack <= 1'd0;
    if (((__main___basesoc_ethmac_interface3_cyc & __main___basesoc_ethmac_interface3_stb) & ((~__main___basesoc_ethmac_interface3_ack) | __main___basesoc_ethmac_sram5_adr_burst))) begin
        __main___basesoc_ethmac_interface3_ack <= 1'd1;
    end
    __main___basesoc_ethmac_slave_sel_r <= __main___basesoc_ethmac_slave_sel;
    __main___clk_divider1 <= (__main___clk_divider1 + 1'd1);
    if (__main___clk_rise) begin
        spi0_clk <= __main___clk_enable;
    end else begin
        if (__main___clk_fall) begin
            __main___clk_divider1 <= 1'd0;
            spi0_clk <= 1'd0;
        end
    end
    spi0_cs_n <= (~(__main___cs & (__main___xfer_enable | (__main___cs_mode == 1'd1))));
    if (__main___mosi_latch) begin
        __main___mosi_data <= __main___mosi;
        __main___mosi_sel <= 3'd7;
    end else begin
        if (__main___clk_fall) begin
            if (__main___xfer_enable) begin
                spi0_mosi <= builder_sync_f_array_muxed;
            end
            __main___mosi_sel <= (__main___mosi_sel - 1'd1);
        end
    end
    if (__main___clk_rise) begin
        if (__main___loopback) begin
            __main___miso_data <= {__main___miso_data, spi0_mosi};
        end else begin
            __main___miso_data <= {__main___miso_data, spi0_miso};
        end
    end
    if (__main___miso_latch) begin
        __main___miso <= __main___miso_data;
    end
    builder_basesoc_spimaster_state <= builder_basesoc_spimaster_next_state;
    if (__main___count_spimaster_next_value_ce) begin
        __main___count <= __main___count_spimaster_next_value;
    end
    builder_basesoc_wishbone2csr_state <= builder_basesoc_wishbone2csr_next_state;
    if (builder_basesoc_dat_w_wishbone2csr_next_value_ce0) begin
        builder_basesoc_dat_w <= builder_basesoc_dat_w_wishbone2csr_next_value0;
    end
    if (builder_basesoc_adr_wishbone2csr_next_value_ce1) begin
        builder_basesoc_adr <= builder_basesoc_adr_wishbone2csr_next_value1;
    end
    if (builder_basesoc_we_wishbone2csr_next_value_ce2) begin
        builder_basesoc_we <= builder_basesoc_we_wishbone2csr_next_value2;
    end
    builder_csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank0_sel) begin
        case (builder_csr_bankarray_interface0_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface0_bank_bus_dat_r <= builder_csr_bankarray_csrbank0_reset0_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface0_bank_bus_dat_r <= builder_csr_bankarray_csrbank0_scratch0_w;
            end
            2'd2: begin
                builder_csr_bankarray_interface0_bank_bus_dat_r <= builder_csr_bankarray_csrbank0_bus_errors_w;
            end
        endcase
    end
    builder_csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank1_sel) begin
        case (builder_csr_bankarray_interface1_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_writer_slot_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_writer_length_w;
            end
            2'd2: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_writer_errors_w;
            end
            2'd3: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_writer_ev_status_w;
            end
            3'd4: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_writer_ev_pending_w;
            end
            3'd5: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_w;
            end
            3'd6: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= __main___basesoc_ethmac_start_w;
            end
            3'd7: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_reader_ready_w;
            end
            4'd8: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_reader_level_w;
            end
            4'd9: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_reader_slot0_w;
            end
            4'd10: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_reader_length0_w;
            end
            4'd11: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_reader_ev_status_w;
            end
            4'd12: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_reader_ev_pending_w;
            end
            4'd13: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_w;
            end
            4'd14: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_preamble_crc_w;
            end
            4'd15: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_w;
            end
            5'd16: begin
                builder_csr_bankarray_interface1_bank_bus_dat_r <= builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_w;
            end
        endcase
    end
    __main___basesoc_ethmac_sram9_re <= builder_csr_bankarray_csrbank1_sram_writer_slot_re;
    __main___basesoc_ethmac_sram12_re <= builder_csr_bankarray_csrbank1_sram_writer_length_re;
    __main___basesoc_ethmac_sram15_re <= builder_csr_bankarray_csrbank1_sram_writer_errors_re;
    __main___basesoc_ethmac_sram24_re <= builder_csr_bankarray_csrbank1_sram_writer_ev_status_re;
    if (builder_csr_bankarray_csrbank1_sram_writer_ev_pending_re) begin
        __main___basesoc_ethmac_sram29_r <= builder_csr_bankarray_csrbank1_sram_writer_ev_pending_r;
    end
    __main___basesoc_ethmac_sram28_re <= builder_csr_bankarray_csrbank1_sram_writer_ev_pending_re;
    if (builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_re) begin
        __main___basesoc_ethmac_sram31_storage <= builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_r;
    end
    __main___basesoc_ethmac_sram32_re <= builder_csr_bankarray_csrbank1_sram_writer_ev_enable0_re;
    __main___basesoc_ethmac_sram96_re <= builder_csr_bankarray_csrbank1_sram_reader_ready_re;
    __main___basesoc_ethmac_sram99_re <= builder_csr_bankarray_csrbank1_sram_reader_level_re;
    if (builder_csr_bankarray_csrbank1_sram_reader_slot0_re) begin
        __main___basesoc_ethmac_sram100_storage <= builder_csr_bankarray_csrbank1_sram_reader_slot0_r;
    end
    __main___basesoc_ethmac_sram101_re <= builder_csr_bankarray_csrbank1_sram_reader_slot0_re;
    if (builder_csr_bankarray_csrbank1_sram_reader_length0_re) begin
        __main___basesoc_ethmac_sram102_storage[10:0] <= builder_csr_bankarray_csrbank1_sram_reader_length0_r;
    end
    __main___basesoc_ethmac_sram103_re <= builder_csr_bankarray_csrbank1_sram_reader_length0_re;
    __main___basesoc_ethmac_sram112_re <= builder_csr_bankarray_csrbank1_sram_reader_ev_status_re;
    if (builder_csr_bankarray_csrbank1_sram_reader_ev_pending_re) begin
        __main___basesoc_ethmac_sram117_r <= builder_csr_bankarray_csrbank1_sram_reader_ev_pending_r;
    end
    __main___basesoc_ethmac_sram116_re <= builder_csr_bankarray_csrbank1_sram_reader_ev_pending_re;
    if (builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_re) begin
        __main___basesoc_ethmac_sram119_storage <= builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_r;
    end
    __main___basesoc_ethmac_sram120_re <= builder_csr_bankarray_csrbank1_sram_reader_ev_enable0_re;
    __main___basesoc_ethmac_re <= builder_csr_bankarray_csrbank1_preamble_crc_re;
    __main___basesoc_ethmac_preamble_errors_re <= builder_csr_bankarray_csrbank1_rx_datapath_preamble_errors_re;
    __main___basesoc_ethmac_crc_errors_re <= builder_csr_bankarray_csrbank1_rx_datapath_crc_errors_re;
    builder_csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank2_sel) begin
        case (builder_csr_bankarray_interface2_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface2_bank_bus_dat_r <= builder_csr_bankarray_csrbank2_crg_reset0_w;
            end
        endcase
    end
    if (builder_csr_bankarray_csrbank2_crg_reset0_re) begin
        __main___ethphy_reset_storage <= builder_csr_bankarray_csrbank2_crg_reset0_r;
    end
    __main___ethphy_reset_re <= builder_csr_bankarray_csrbank2_crg_reset0_re;
    builder_csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank3_sel) begin
        case (builder_csr_bankarray_interface3_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_w0_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface3_bank_bus_dat_r <= builder_csr_bankarray_csrbank3_r_w;
            end
        endcase
    end
    if (builder_csr_bankarray_csrbank3_w0_re) begin
        __main____w_storage[2:0] <= builder_csr_bankarray_csrbank3_w0_r;
    end
    __main____w_re <= builder_csr_bankarray_csrbank3_w0_re;
    __main____r_re <= builder_csr_bankarray_csrbank3_r_re;
    builder_csr_bankarray_sel_r <= builder_csr_bankarray_sel;
    builder_csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank4_sel) begin
        case (builder_csr_bankarray_interface4_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface4_bank_bus_dat_r <= builder_csr_bankarray_csrbank4_out0_w;
            end
        endcase
    end
    if (builder_csr_bankarray_csrbank4_out0_re) begin
        __main___leds_storage <= builder_csr_bankarray_csrbank4_out0_r;
    end
    __main___leds_re <= builder_csr_bankarray_csrbank4_out0_re;
    builder_csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank5_sel) begin
        case (builder_csr_bankarray_interface5_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_dfii_control0_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_dfii_pi0_command0_w;
            end
            2'd2: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= __main___basesoc_sdram_command_issue_w;
            end
            2'd3: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_dfii_pi0_address0_w;
            end
            3'd4: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_w;
            end
            3'd5: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_w;
            end
            3'd6: begin
                builder_csr_bankarray_interface5_bank_bus_dat_r <= builder_csr_bankarray_csrbank5_dfii_pi0_rddata_w;
            end
        endcase
    end
    if (builder_csr_bankarray_csrbank5_dfii_control0_re) begin
        __main___basesoc_sdram_storage[3:0] <= builder_csr_bankarray_csrbank5_dfii_control0_r;
    end
    __main___basesoc_sdram_re <= builder_csr_bankarray_csrbank5_dfii_control0_re;
    if (builder_csr_bankarray_csrbank5_dfii_pi0_command0_re) begin
        __main___basesoc_sdram_command_storage[5:0] <= builder_csr_bankarray_csrbank5_dfii_pi0_command0_r;
    end
    __main___basesoc_sdram_command_re <= builder_csr_bankarray_csrbank5_dfii_pi0_command0_re;
    if (builder_csr_bankarray_csrbank5_dfii_pi0_address0_re) begin
        __main___basesoc_sdram_address_storage[10:0] <= builder_csr_bankarray_csrbank5_dfii_pi0_address0_r;
    end
    __main___basesoc_sdram_address_re <= builder_csr_bankarray_csrbank5_dfii_pi0_address0_re;
    if (builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_re) begin
        __main___basesoc_sdram_baddress_storage[1:0] <= builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_r;
    end
    __main___basesoc_sdram_baddress_re <= builder_csr_bankarray_csrbank5_dfii_pi0_baddress0_re;
    if (builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_re) begin
        __main___basesoc_sdram_wrdata_storage[31:0] <= builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_r;
    end
    __main___basesoc_sdram_wrdata_re <= builder_csr_bankarray_csrbank5_dfii_pi0_wrdata0_re;
    __main___basesoc_sdram_rddata_re <= builder_csr_bankarray_csrbank5_dfii_pi0_rddata_re;
    builder_csr_bankarray_interface6_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank6_sel) begin
        case (builder_csr_bankarray_interface6_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface6_bank_bus_dat_r <= builder_csr_bankarray_csrbank6_control0_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface6_bank_bus_dat_r <= builder_csr_bankarray_csrbank6_status_w;
            end
            2'd2: begin
                builder_csr_bankarray_interface6_bank_bus_dat_r <= builder_csr_bankarray_csrbank6_mosi0_w;
            end
            2'd3: begin
                builder_csr_bankarray_interface6_bank_bus_dat_r <= builder_csr_bankarray_csrbank6_miso_w;
            end
            3'd4: begin
                builder_csr_bankarray_interface6_bank_bus_dat_r <= builder_csr_bankarray_csrbank6_cs0_w;
            end
            3'd5: begin
                builder_csr_bankarray_interface6_bank_bus_dat_r <= builder_csr_bankarray_csrbank6_loopback0_w;
            end
            3'd6: begin
                builder_csr_bankarray_interface6_bank_bus_dat_r <= builder_csr_bankarray_csrbank6_clk_divider0_w;
            end
        endcase
    end
    if (builder_csr_bankarray_csrbank6_control0_re) begin
        __main___control_storage[15:0] <= builder_csr_bankarray_csrbank6_control0_r;
    end
    __main___control_re <= builder_csr_bankarray_csrbank6_control0_re;
    __main___status_re <= builder_csr_bankarray_csrbank6_status_re;
    if (builder_csr_bankarray_csrbank6_mosi0_re) begin
        __main___mosi_storage[7:0] <= builder_csr_bankarray_csrbank6_mosi0_r;
    end
    __main___mosi_re <= builder_csr_bankarray_csrbank6_mosi0_re;
    __main___miso_re <= builder_csr_bankarray_csrbank6_miso_re;
    if (builder_csr_bankarray_csrbank6_cs0_re) begin
        __main___cs_storage[16:0] <= builder_csr_bankarray_csrbank6_cs0_r;
    end
    __main___cs_re <= builder_csr_bankarray_csrbank6_cs0_re;
    if (builder_csr_bankarray_csrbank6_loopback0_re) begin
        __main___loopback_storage <= builder_csr_bankarray_csrbank6_loopback0_r;
    end
    __main___loopback_re <= builder_csr_bankarray_csrbank6_loopback0_re;
    if (builder_csr_bankarray_csrbank6_clk_divider0_re) begin
        __main___spimaster_storage[15:0] <= builder_csr_bankarray_csrbank6_clk_divider0_r;
    end
    __main___spimaster_re <= builder_csr_bankarray_csrbank6_clk_divider0_re;
    builder_csr_bankarray_interface7_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank7_sel) begin
        case (builder_csr_bankarray_interface7_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface7_bank_bus_dat_r <= builder_csr_bankarray_csrbank7_load0_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface7_bank_bus_dat_r <= builder_csr_bankarray_csrbank7_reload0_w;
            end
            2'd2: begin
                builder_csr_bankarray_interface7_bank_bus_dat_r <= builder_csr_bankarray_csrbank7_en0_w;
            end
            2'd3: begin
                builder_csr_bankarray_interface7_bank_bus_dat_r <= builder_csr_bankarray_csrbank7_update_value0_w;
            end
            3'd4: begin
                builder_csr_bankarray_interface7_bank_bus_dat_r <= builder_csr_bankarray_csrbank7_value_w;
            end
            3'd5: begin
                builder_csr_bankarray_interface7_bank_bus_dat_r <= builder_csr_bankarray_csrbank7_ev_status_w;
            end
            3'd6: begin
                builder_csr_bankarray_interface7_bank_bus_dat_r <= builder_csr_bankarray_csrbank7_ev_pending_w;
            end
            3'd7: begin
                builder_csr_bankarray_interface7_bank_bus_dat_r <= builder_csr_bankarray_csrbank7_ev_enable0_w;
            end
            4'd8: begin
                builder_csr_bankarray_interface7_bank_bus_dat_r <= builder_csr_bankarray_csrbank7_uptime_latch0_w;
            end
            4'd9: begin
                builder_csr_bankarray_interface7_bank_bus_dat_r <= builder_csr_bankarray_csrbank7_uptime_cycles1_w;
            end
            4'd10: begin
                builder_csr_bankarray_interface7_bank_bus_dat_r <= builder_csr_bankarray_csrbank7_uptime_cycles0_w;
            end
        endcase
    end
    if (builder_csr_bankarray_csrbank7_load0_re) begin
        __main___basesoc_timer_load_storage[31:0] <= builder_csr_bankarray_csrbank7_load0_r;
    end
    __main___basesoc_timer_load_re <= builder_csr_bankarray_csrbank7_load0_re;
    if (builder_csr_bankarray_csrbank7_reload0_re) begin
        __main___basesoc_timer_reload_storage[31:0] <= builder_csr_bankarray_csrbank7_reload0_r;
    end
    __main___basesoc_timer_reload_re <= builder_csr_bankarray_csrbank7_reload0_re;
    if (builder_csr_bankarray_csrbank7_en0_re) begin
        __main___basesoc_timer_en_storage <= builder_csr_bankarray_csrbank7_en0_r;
    end
    __main___basesoc_timer_en_re <= builder_csr_bankarray_csrbank7_en0_re;
    if (builder_csr_bankarray_csrbank7_update_value0_re) begin
        __main___basesoc_timer_update_value_storage <= builder_csr_bankarray_csrbank7_update_value0_r;
    end
    __main___basesoc_timer_update_value_re <= builder_csr_bankarray_csrbank7_update_value0_re;
    __main___basesoc_timer_value_re <= builder_csr_bankarray_csrbank7_value_re;
    __main___basesoc_timer_status_re <= builder_csr_bankarray_csrbank7_ev_status_re;
    if (builder_csr_bankarray_csrbank7_ev_pending_re) begin
        __main___basesoc_timer_pending_r <= builder_csr_bankarray_csrbank7_ev_pending_r;
    end
    __main___basesoc_timer_pending_re <= builder_csr_bankarray_csrbank7_ev_pending_re;
    if (builder_csr_bankarray_csrbank7_ev_enable0_re) begin
        __main___basesoc_timer_enable_storage <= builder_csr_bankarray_csrbank7_ev_enable0_r;
    end
    __main___basesoc_timer_enable_re <= builder_csr_bankarray_csrbank7_ev_enable0_re;
    if (builder_csr_bankarray_csrbank7_uptime_latch0_re) begin
        __main___basesoc_uptime_latch_storage <= builder_csr_bankarray_csrbank7_uptime_latch0_r;
    end
    __main___basesoc_uptime_latch_re <= builder_csr_bankarray_csrbank7_uptime_latch0_re;
    __main___basesoc_uptime_cycles_re <= builder_csr_bankarray_csrbank7_uptime_cycles0_re;
    builder_csr_bankarray_interface8_bank_bus_dat_r <= 1'd0;
    if (builder_csr_bankarray_csrbank8_sel) begin
        case (builder_csr_bankarray_interface8_bank_bus_adr[8:0])
            1'd0: begin
                builder_csr_bankarray_interface8_bank_bus_dat_r <= __main___basesoc_uart_rxtx_w;
            end
            1'd1: begin
                builder_csr_bankarray_interface8_bank_bus_dat_r <= builder_csr_bankarray_csrbank8_txfull_w;
            end
            2'd2: begin
                builder_csr_bankarray_interface8_bank_bus_dat_r <= builder_csr_bankarray_csrbank8_rxempty_w;
            end
            2'd3: begin
                builder_csr_bankarray_interface8_bank_bus_dat_r <= builder_csr_bankarray_csrbank8_ev_status_w;
            end
            3'd4: begin
                builder_csr_bankarray_interface8_bank_bus_dat_r <= builder_csr_bankarray_csrbank8_ev_pending_w;
            end
            3'd5: begin
                builder_csr_bankarray_interface8_bank_bus_dat_r <= builder_csr_bankarray_csrbank8_ev_enable0_w;
            end
            3'd6: begin
                builder_csr_bankarray_interface8_bank_bus_dat_r <= builder_csr_bankarray_csrbank8_txempty_w;
            end
            3'd7: begin
                builder_csr_bankarray_interface8_bank_bus_dat_r <= builder_csr_bankarray_csrbank8_rxfull_w;
            end
        endcase
    end
    __main___basesoc_uart_txfull_re <= builder_csr_bankarray_csrbank8_txfull_re;
    __main___basesoc_uart_rxempty_re <= builder_csr_bankarray_csrbank8_rxempty_re;
    __main___basesoc_uart_status_re <= builder_csr_bankarray_csrbank8_ev_status_re;
    if (builder_csr_bankarray_csrbank8_ev_pending_re) begin
        __main___basesoc_uart_pending_r[1:0] <= builder_csr_bankarray_csrbank8_ev_pending_r;
    end
    __main___basesoc_uart_pending_re <= builder_csr_bankarray_csrbank8_ev_pending_re;
    if (builder_csr_bankarray_csrbank8_ev_enable0_re) begin
        __main___basesoc_uart_enable_storage[1:0] <= builder_csr_bankarray_csrbank8_ev_enable0_r;
    end
    __main___basesoc_uart_enable_re <= builder_csr_bankarray_csrbank8_ev_enable0_re;
    __main___basesoc_uart_txempty_re <= builder_csr_bankarray_csrbank8_txempty_re;
    __main___basesoc_uart_rxfull_re <= builder_csr_bankarray_csrbank8_rxfull_re;
    if (sys_rst) begin
        __main___basesoc_reset_storage <= 2'd0;
        __main___basesoc_reset_re <= 1'd0;
        __main___basesoc_scratch_storage <= 32'd305419896;
        __main___basesoc_scratch_re <= 1'd0;
        __main___basesoc_bus_errors_re <= 1'd0;
        __main___basesoc_bus_errors <= 32'd0;
        __main___basesoc_basesoc_ram_bus_ack <= 1'd0;
        __main___basesoc_ram_bus_ram_bus_ack <= 1'd0;
        serial_tx <= 1'd1;
        __main___basesoc_tx_tick <= 1'd0;
        __main___basesoc_rx_tick <= 1'd0;
        __main___basesoc_rx_rx_d <= 1'd0;
        __main___basesoc_uart_txfull_re <= 1'd0;
        __main___basesoc_uart_rxempty_re <= 1'd0;
        __main___basesoc_uart_tx_pending <= 1'd0;
        __main___basesoc_uart_tx_trigger_d <= 1'd0;
        __main___basesoc_uart_rx_pending <= 1'd0;
        __main___basesoc_uart_rx_trigger_d <= 1'd0;
        __main___basesoc_uart_status_re <= 1'd0;
        __main___basesoc_uart_pending_re <= 1'd0;
        __main___basesoc_uart_pending_r <= 2'd0;
        __main___basesoc_uart_enable_storage <= 2'd0;
        __main___basesoc_uart_enable_re <= 1'd0;
        __main___basesoc_uart_txempty_re <= 1'd0;
        __main___basesoc_uart_rxfull_re <= 1'd0;
        __main___basesoc_uart_tx_fifo_readable <= 1'd0;
        __main___basesoc_uart_tx_fifo_level0 <= 5'd0;
        __main___basesoc_uart_tx_fifo_produce <= 4'd0;
        __main___basesoc_uart_tx_fifo_consume <= 4'd0;
        __main___basesoc_uart_rx_fifo_readable <= 1'd0;
        __main___basesoc_uart_rx_fifo_level0 <= 5'd0;
        __main___basesoc_uart_rx_fifo_produce <= 4'd0;
        __main___basesoc_uart_rx_fifo_consume <= 4'd0;
        __main___basesoc_timer_load_storage <= 32'd0;
        __main___basesoc_timer_load_re <= 1'd0;
        __main___basesoc_timer_reload_storage <= 32'd0;
        __main___basesoc_timer_reload_re <= 1'd0;
        __main___basesoc_timer_en_storage <= 1'd0;
        __main___basesoc_timer_en_re <= 1'd0;
        __main___basesoc_timer_update_value_storage <= 1'd0;
        __main___basesoc_timer_update_value_re <= 1'd0;
        __main___basesoc_timer_value_status <= 32'd0;
        __main___basesoc_timer_value_re <= 1'd0;
        __main___basesoc_timer_zero_pending <= 1'd0;
        __main___basesoc_timer_zero_trigger_d <= 1'd0;
        __main___basesoc_timer_status_re <= 1'd0;
        __main___basesoc_timer_pending_re <= 1'd0;
        __main___basesoc_timer_pending_r <= 1'd0;
        __main___basesoc_timer_enable_storage <= 1'd0;
        __main___basesoc_timer_enable_re <= 1'd0;
        __main___basesoc_timer_value <= 32'd0;
        __main___basesoc_uptime_latch_storage <= 1'd0;
        __main___basesoc_uptime_latch_re <= 1'd0;
        __main___basesoc_uptime_cycles_status <= 64'd0;
        __main___basesoc_uptime_cycles_re <= 1'd0;
        __main___dfi_p0_rddata_valid <= 1'd0;
        __main___rddata_en <= 3'd0;
        __main___basesoc_sdram_storage <= 4'd1;
        __main___basesoc_sdram_re <= 1'd0;
        __main___basesoc_sdram_command_storage <= 6'd0;
        __main___basesoc_sdram_command_re <= 1'd0;
        __main___basesoc_sdram_address_re <= 1'd0;
        __main___basesoc_sdram_baddress_re <= 1'd0;
        __main___basesoc_sdram_wrdata_re <= 1'd0;
        __main___basesoc_sdram_rddata_status <= 32'd0;
        __main___basesoc_sdram_rddata_re <= 1'd0;
        __main___basesoc_sdram_dfi_p0_address <= 11'd0;
        __main___basesoc_sdram_dfi_p0_bank <= 2'd0;
        __main___basesoc_sdram_dfi_p0_cas_n <= 1'd1;
        __main___basesoc_sdram_dfi_p0_cs_n <= 1'd1;
        __main___basesoc_sdram_dfi_p0_ras_n <= 1'd1;
        __main___basesoc_sdram_dfi_p0_we_n <= 1'd1;
        __main___basesoc_sdram_dfi_p0_wrdata_en <= 1'd0;
        __main___basesoc_sdram_dfi_p0_rddata_en <= 1'd0;
        __main___basesoc_sdram_cmd_payload_a <= 11'd0;
        __main___basesoc_sdram_cmd_payload_ba <= 2'd0;
        __main___basesoc_sdram_cmd_payload_cas <= 1'd0;
        __main___basesoc_sdram_cmd_payload_ras <= 1'd0;
        __main___basesoc_sdram_cmd_payload_we <= 1'd0;
        __main___basesoc_sdram_timer_count1 <= 11'd1562;
        __main___basesoc_sdram_postponer_req_o <= 1'd0;
        __main___basesoc_sdram_postponer_count <= 1'd0;
        __main___basesoc_sdram_sequencer_done1 <= 1'd0;
        __main___basesoc_sdram_sequencer_counter <= 4'd0;
        __main___basesoc_sdram_sequencer_count <= 1'd0;
        __main___basesoc_sdram_bankmachine0_level <= 4'd0;
        __main___basesoc_sdram_bankmachine0_produce <= 3'd0;
        __main___basesoc_sdram_bankmachine0_consume <= 3'd0;
        __main___basesoc_sdram_bankmachine0_pipe_valid_source_valid <= 1'd0;
        __main___basesoc_sdram_bankmachine0_pipe_valid_source_payload_we <= 1'd0;
        __main___basesoc_sdram_bankmachine0_pipe_valid_source_payload_addr <= 19'd0;
        __main___basesoc_sdram_bankmachine0_row <= 11'd0;
        __main___basesoc_sdram_bankmachine0_row_opened <= 1'd0;
        __main___basesoc_sdram_bankmachine0_twtpcon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine0_twtpcon_count <= 3'd0;
        __main___basesoc_sdram_bankmachine0_trccon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine0_trccon_count <= 3'd0;
        __main___basesoc_sdram_bankmachine0_trascon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine0_trascon_count <= 3'd0;
        __main___basesoc_sdram_bankmachine1_level <= 4'd0;
        __main___basesoc_sdram_bankmachine1_produce <= 3'd0;
        __main___basesoc_sdram_bankmachine1_consume <= 3'd0;
        __main___basesoc_sdram_bankmachine1_pipe_valid_source_valid <= 1'd0;
        __main___basesoc_sdram_bankmachine1_pipe_valid_source_payload_we <= 1'd0;
        __main___basesoc_sdram_bankmachine1_pipe_valid_source_payload_addr <= 19'd0;
        __main___basesoc_sdram_bankmachine1_row <= 11'd0;
        __main___basesoc_sdram_bankmachine1_row_opened <= 1'd0;
        __main___basesoc_sdram_bankmachine1_twtpcon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine1_twtpcon_count <= 3'd0;
        __main___basesoc_sdram_bankmachine1_trccon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine1_trccon_count <= 3'd0;
        __main___basesoc_sdram_bankmachine1_trascon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine1_trascon_count <= 3'd0;
        __main___basesoc_sdram_bankmachine2_level <= 4'd0;
        __main___basesoc_sdram_bankmachine2_produce <= 3'd0;
        __main___basesoc_sdram_bankmachine2_consume <= 3'd0;
        __main___basesoc_sdram_bankmachine2_pipe_valid_source_valid <= 1'd0;
        __main___basesoc_sdram_bankmachine2_pipe_valid_source_payload_we <= 1'd0;
        __main___basesoc_sdram_bankmachine2_pipe_valid_source_payload_addr <= 19'd0;
        __main___basesoc_sdram_bankmachine2_row <= 11'd0;
        __main___basesoc_sdram_bankmachine2_row_opened <= 1'd0;
        __main___basesoc_sdram_bankmachine2_twtpcon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine2_twtpcon_count <= 3'd0;
        __main___basesoc_sdram_bankmachine2_trccon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine2_trccon_count <= 3'd0;
        __main___basesoc_sdram_bankmachine2_trascon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine2_trascon_count <= 3'd0;
        __main___basesoc_sdram_bankmachine3_level <= 4'd0;
        __main___basesoc_sdram_bankmachine3_produce <= 3'd0;
        __main___basesoc_sdram_bankmachine3_consume <= 3'd0;
        __main___basesoc_sdram_bankmachine3_pipe_valid_source_valid <= 1'd0;
        __main___basesoc_sdram_bankmachine3_pipe_valid_source_payload_we <= 1'd0;
        __main___basesoc_sdram_bankmachine3_pipe_valid_source_payload_addr <= 19'd0;
        __main___basesoc_sdram_bankmachine3_row <= 11'd0;
        __main___basesoc_sdram_bankmachine3_row_opened <= 1'd0;
        __main___basesoc_sdram_bankmachine3_twtpcon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine3_twtpcon_count <= 3'd0;
        __main___basesoc_sdram_bankmachine3_trccon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine3_trccon_count <= 3'd0;
        __main___basesoc_sdram_bankmachine3_trascon_ready <= 1'd0;
        __main___basesoc_sdram_bankmachine3_trascon_count <= 3'd0;
        __main___basesoc_sdram_choose_cmd_grant <= 2'd0;
        __main___basesoc_sdram_choose_req_grant <= 2'd0;
        __main___basesoc_sdram_trrdcon_ready <= 1'd0;
        __main___basesoc_sdram_trrdcon_count <= 1'd0;
        __main___basesoc_sdram_tccdcon_ready <= 1'd0;
        __main___basesoc_sdram_tccdcon_count <= 1'd0;
        __main___basesoc_sdram_twtrcon_ready <= 1'd0;
        __main___basesoc_sdram_twtrcon_count <= 2'd0;
        __main___basesoc_sdram_time0 <= 5'd0;
        __main___basesoc_sdram_time1 <= 4'd0;
        __main___basesoc_wishbone_bridge_count <= 2'd0;
        __main___basesoc_wishbone_bridge_wdata_converter_converter_mux <= 2'd0;
        __main___basesoc_wishbone_bridge_rdata_converter_converter_source_payload_data <= 128'd0;
        __main___basesoc_wishbone_bridge_rdata_converter_converter_source_payload_valid_token_count <= 3'd0;
        __main___basesoc_wishbone_bridge_rdata_converter_converter_demux <= 2'd0;
        __main___basesoc_wishbone_bridge_rdata_converter_converter_strobe_all <= 1'd0;
        __main___basesoc_wishbone_bridge_aborted <= 1'd0;
        __main___ethphy_reset_storage <= 1'd0;
        __main___ethphy_reset_re <= 1'd0;
        __main___ethphy_counter <= 9'd0;
        __main___basesoc_ethmac_re <= 1'd0;
        __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q <= 6'd0;
        __main___basesoc_ethmac_tx_cdc_cdc_graycounter0_q_binary <= 6'd0;
        __main___basesoc_ethmac_preamble_errors_status <= 32'd0;
        __main___basesoc_ethmac_preamble_errors_re <= 1'd0;
        __main___basesoc_ethmac_crc_errors_status <= 32'd0;
        __main___basesoc_ethmac_crc_errors_re <= 1'd0;
        __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q <= 6'd0;
        __main___basesoc_ethmac_rx_cdc_cdc_graycounter1_q_binary <= 6'd0;
        __main___basesoc_ethmac_sram9_re <= 1'd0;
        __main___basesoc_ethmac_sram12_re <= 1'd0;
        __main___basesoc_ethmac_sram13_status <= 32'd0;
        __main___basesoc_ethmac_sram15_re <= 1'd0;
        __main___basesoc_ethmac_sram24_re <= 1'd0;
        __main___basesoc_ethmac_sram28_re <= 1'd0;
        __main___basesoc_ethmac_sram29_r <= 1'd0;
        __main___basesoc_ethmac_sram31_storage <= 1'd0;
        __main___basesoc_ethmac_sram32_re <= 1'd0;
        __main___basesoc_ethmac_slot <= 1'd0;
        __main___basesoc_ethmac_sram35_length <= 11'd0;
        __main___basesoc_ethmac_sram55_level <= 2'd0;
        __main___basesoc_ethmac_sram57_produce <= 1'd0;
        __main___basesoc_ethmac_sram58_consume <= 1'd0;
        __main___basesoc_ethmac_sram96_re <= 1'd0;
        __main___basesoc_ethmac_sram99_re <= 1'd0;
        __main___basesoc_ethmac_sram101_re <= 1'd0;
        __main___basesoc_ethmac_sram103_re <= 1'd0;
        __main___basesoc_ethmac_sram106_pending <= 1'd0;
        __main___basesoc_ethmac_sram112_re <= 1'd0;
        __main___basesoc_ethmac_sram116_re <= 1'd0;
        __main___basesoc_ethmac_sram117_r <= 1'd0;
        __main___basesoc_ethmac_sram119_storage <= 1'd0;
        __main___basesoc_ethmac_sram120_re <= 1'd0;
        __main___basesoc_ethmac_sram122_length <= 11'd0;
        __main___basesoc_ethmac_sram141_level <= 2'd0;
        __main___basesoc_ethmac_sram143_produce <= 1'd0;
        __main___basesoc_ethmac_sram144_consume <= 1'd0;
        __main___basesoc_ethmac_interface0_ack <= 1'd0;
        __main___basesoc_ethmac_interface1_ack <= 1'd0;
        __main___basesoc_ethmac_interface2_ack <= 1'd0;
        __main___basesoc_ethmac_interface3_ack <= 1'd0;
        __main___basesoc_ethmac_slave_sel_r <= 4'd0;
        __main____w_storage <= 3'd5;
        __main____w_re <= 1'd0;
        __main____r_re <= 1'd0;
        spi0_cs_n <= 1'd0;
        spi0_clk <= 1'd0;
        spi0_mosi <= 1'd0;
        __main___miso <= 8'd0;
        __main___control_storage <= 16'd0;
        __main___control_re <= 1'd0;
        __main___status_re <= 1'd0;
        __main___mosi_re <= 1'd0;
        __main___miso_re <= 1'd0;
        __main___cs_storage <= 17'd1;
        __main___cs_re <= 1'd0;
        __main___loopback_storage <= 1'd0;
        __main___loopback_re <= 1'd0;
        __main___count <= 3'd0;
        __main___clk_divider1 <= 16'd0;
        __main___mosi_data <= 8'd0;
        __main___mosi_sel <= 3'd0;
        __main___miso_data <= 8'd0;
        __main___spimaster_storage <= 16'd13;
        __main___spimaster_re <= 1'd0;
        __main___leds_storage <= 1'd0;
        __main___leds_re <= 1'd0;
        builder_basesoc_we <= 1'd0;
        builder_grant <= 1'd0;
        builder_slave_sel_r <= 5'd0;
        builder_count <= 20'd1000000;
        builder_csr_bankarray_sel_r <= 1'd0;
        builder_basesoc_rs232phytx_state <= 1'd0;
        builder_basesoc_rs232phyrx_state <= 1'd0;
        builder_basesoc_litedramcore_refresher_state <= 2'd0;
        builder_basesoc_litedramcore_bankmachine0_state <= 3'd0;
        builder_basesoc_litedramcore_bankmachine1_state <= 3'd0;
        builder_basesoc_litedramcore_bankmachine2_state <= 3'd0;
        builder_basesoc_litedramcore_bankmachine3_state <= 3'd0;
        builder_basesoc_litedramcore_multiplexer_state <= 3'd0;
        builder_basesoc_litedramcore_new_master_wdata_ready <= 1'd0;
        builder_basesoc_litedramcore_new_master_rdata_valid0 <= 1'd0;
        builder_basesoc_litedramcore_new_master_rdata_valid1 <= 1'd0;
        builder_basesoc_litedramcore_new_master_rdata_valid2 <= 1'd0;
        builder_basesoc_litedramcore_new_master_rdata_valid3 <= 1'd0;
        builder_basesoc_fullmemorywe_state <= 2'd0;
        builder_basesoc_litedramnativeportconverter_state <= 1'd0;
        builder_basesoc_fsm_state <= 2'd0;
        builder_basesoc_liteethmacsramwriter_state <= 3'd0;
        builder_basesoc_liteethmacsramreader_state <= 2'd0;
        builder_basesoc_spimaster_state <= 2'd0;
        builder_basesoc_wishbone2csr_state <= 2'd0;
    end
    builder_multiregimpl0_regs0 <= serial_rx;
    builder_multiregimpl0_regs1 <= builder_multiregimpl0_regs0;
    builder_multiregimpl4_regs0 <= __main___basesoc_ethmac_tx_cdc_cdc_graycounter1_q;
    builder_multiregimpl4_regs1 <= builder_multiregimpl4_regs0;
    builder_multiregimpl5_regs0 <= __main___basesoc_ethmac_pulsesynchronizer0_toggle_i;
    builder_multiregimpl5_regs1 <= builder_multiregimpl5_regs0;
    builder_multiregimpl6_regs0 <= __main___basesoc_ethmac_pulsesynchronizer1_toggle_i;
    builder_multiregimpl6_regs1 <= builder_multiregimpl6_regs0;
    builder_multiregimpl7_regs0 <= __main___basesoc_ethmac_rx_cdc_cdc_graycounter0_q;
    builder_multiregimpl7_regs1 <= builder_multiregimpl7_regs0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Memory rom: 9055-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [31:0] rom[0:9054];
initial begin
	$readmemh("colorlight_i5_rom.init", rom);
end
reg [31:0] rom_dat0;
always @(posedge sys_clk) begin
	rom_dat0 <= rom[__main___basesoc_basesoc_adr];
end
assign __main___basesoc_basesoc_dat_r = rom_dat0;


//------------------------------------------------------------------------------
// Memory sram: 2048-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] sram[0:2047];
initial begin
	$readmemh("colorlight_i5_sram.init", sram);
end
reg [10:0] sram_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_ram_we[0])
		sram[__main___basesoc_ram_adr][7:0] <= __main___basesoc_ram_dat_w[7:0];
	if (__main___basesoc_ram_we[1])
		sram[__main___basesoc_ram_adr][15:8] <= __main___basesoc_ram_dat_w[15:8];
	if (__main___basesoc_ram_we[2])
		sram[__main___basesoc_ram_adr][23:16] <= __main___basesoc_ram_dat_w[23:16];
	if (__main___basesoc_ram_we[3])
		sram[__main___basesoc_ram_adr][31:24] <= __main___basesoc_ram_dat_w[31:24];
	sram_adr0 <= __main___basesoc_ram_adr;
end
assign __main___basesoc_ram_dat_r = sram[sram_adr0];


//------------------------------------------------------------------------------
// Memory mem: 40-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem[0:39];
initial begin
	$readmemh("colorlight_i5_mem.init", mem);
end
reg [5:0] mem_adr0;
always @(posedge sys_clk) begin
	mem_adr0 <= builder_csr_bankarray_adr;
end
assign builder_csr_bankarray_dat_r = mem[mem_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk) begin
	if (__main___basesoc_uart_tx_fifo_wrport_we)
		storage[__main___basesoc_uart_tx_fifo_wrport_adr] <= __main___basesoc_uart_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[__main___basesoc_uart_tx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (__main___basesoc_uart_tx_fifo_rdport_re)
		storage_dat1 <= storage[__main___basesoc_uart_tx_fifo_rdport_adr];
end
assign __main___basesoc_uart_tx_fifo_wrport_dat_r = storage_dat0;
assign __main___basesoc_uart_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk) begin
	if (__main___basesoc_uart_rx_fifo_wrport_we)
		storage_1[__main___basesoc_uart_rx_fifo_wrport_adr] <= __main___basesoc_uart_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[__main___basesoc_uart_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (__main___basesoc_uart_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[__main___basesoc_uart_rx_fifo_rdport_adr];
end
assign __main___basesoc_uart_rx_fifo_wrport_dat_r = storage_1_dat0;
assign __main___basesoc_uart_rx_fifo_rdport_dat_r = storage_1_dat1;


//------------------------------------------------------------------------------
// Memory storage_2: 8-words x 22-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 22 
// Port 1 | Read: Async | Write: ---- | 
reg [21:0] storage_2[0:7];
reg [21:0] storage_2_dat0;
always @(posedge sys_clk) begin
	if (__main___basesoc_sdram_bankmachine0_wrport_we)
		storage_2[__main___basesoc_sdram_bankmachine0_wrport_adr] <= __main___basesoc_sdram_bankmachine0_wrport_dat_w;
	storage_2_dat0 <= storage_2[__main___basesoc_sdram_bankmachine0_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign __main___basesoc_sdram_bankmachine0_wrport_dat_r = storage_2_dat0;
assign __main___basesoc_sdram_bankmachine0_rdport_dat_r = storage_2[__main___basesoc_sdram_bankmachine0_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_3: 8-words x 22-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 22 
// Port 1 | Read: Async | Write: ---- | 
reg [21:0] storage_3[0:7];
reg [21:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (__main___basesoc_sdram_bankmachine1_wrport_we)
		storage_3[__main___basesoc_sdram_bankmachine1_wrport_adr] <= __main___basesoc_sdram_bankmachine1_wrport_dat_w;
	storage_3_dat0 <= storage_3[__main___basesoc_sdram_bankmachine1_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign __main___basesoc_sdram_bankmachine1_wrport_dat_r = storage_3_dat0;
assign __main___basesoc_sdram_bankmachine1_rdport_dat_r = storage_3[__main___basesoc_sdram_bankmachine1_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_4: 8-words x 22-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 22 
// Port 1 | Read: Async | Write: ---- | 
reg [21:0] storage_4[0:7];
reg [21:0] storage_4_dat0;
always @(posedge sys_clk) begin
	if (__main___basesoc_sdram_bankmachine2_wrport_we)
		storage_4[__main___basesoc_sdram_bankmachine2_wrport_adr] <= __main___basesoc_sdram_bankmachine2_wrport_dat_w;
	storage_4_dat0 <= storage_4[__main___basesoc_sdram_bankmachine2_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign __main___basesoc_sdram_bankmachine2_wrport_dat_r = storage_4_dat0;
assign __main___basesoc_sdram_bankmachine2_rdport_dat_r = storage_4[__main___basesoc_sdram_bankmachine2_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_5: 8-words x 22-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 22 
// Port 1 | Read: Async | Write: ---- | 
reg [21:0] storage_5[0:7];
reg [21:0] storage_5_dat0;
always @(posedge sys_clk) begin
	if (__main___basesoc_sdram_bankmachine3_wrport_we)
		storage_5[__main___basesoc_sdram_bankmachine3_wrport_adr] <= __main___basesoc_sdram_bankmachine3_wrport_dat_w;
	storage_5_dat0 <= storage_5[__main___basesoc_sdram_bankmachine3_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign __main___basesoc_sdram_bankmachine3_wrport_dat_r = storage_5_dat0;
assign __main___basesoc_sdram_bankmachine3_rdport_dat_r = storage_5[__main___basesoc_sdram_bankmachine3_rdport_adr];


//------------------------------------------------------------------------------
// Memory tag_mem: 512-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 24 
reg [23:0] tag_mem[0:511];
reg [8:0] tag_mem_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_tag_port_we)
		tag_mem[__main___basesoc_tag_port_adr] <= __main___basesoc_tag_port_dat_w;
	tag_mem_adr0 <= __main___basesoc_tag_port_adr;
end
assign __main___basesoc_tag_port_dat_r = tag_mem[tag_mem_adr0];


//------------------------------------------------------------------------------
// Memory storage_6: 32-words x 42-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 42 
// Port 1 | Read: Sync  | Write: ---- | 
reg [41:0] storage_6[0:31];
reg [41:0] storage_6_dat0;
reg [41:0] storage_6_dat1;
always @(posedge sys_clk) begin
	if (__main___basesoc_ethmac_tx_cdc_cdc_wrport_we)
		storage_6[__main___basesoc_ethmac_tx_cdc_cdc_wrport_adr] <= __main___basesoc_ethmac_tx_cdc_cdc_wrport_dat_w;
	storage_6_dat0 <= storage_6[__main___basesoc_ethmac_tx_cdc_cdc_wrport_adr];
end
always @(posedge eth_tx_clk) begin
	storage_6_dat1 <= storage_6[__main___basesoc_ethmac_tx_cdc_cdc_rdport_adr];
end
assign __main___basesoc_ethmac_tx_cdc_cdc_wrport_dat_r = storage_6_dat0;
assign __main___basesoc_ethmac_tx_cdc_cdc_rdport_dat_r = storage_6_dat1;


//------------------------------------------------------------------------------
// Memory storage_7: 5-words x 12-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 12 
// Port 1 | Read: Async | Write: ---- | 
reg [11:0] storage_7[0:4];
reg [11:0] storage_7_dat0;
always @(posedge eth_rx_clk) begin
	if (__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_we)
		storage_7[__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr] <= __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_dat_w;
	storage_7_dat0 <= storage_7[__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_adr];
end
always @(posedge eth_rx_clk) begin
end
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_wrport_dat_r = storage_7_dat0;
assign __main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_rdport_dat_r = storage_7[__main___basesoc_ethmac_liteethmaccrc32checker_syncfifo_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_8: 32-words x 42-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 42 
// Port 1 | Read: Sync  | Write: ---- | 
reg [41:0] storage_8[0:31];
reg [41:0] storage_8_dat0;
reg [41:0] storage_8_dat1;
always @(posedge eth_rx_clk) begin
	if (__main___basesoc_ethmac_rx_cdc_cdc_wrport_we)
		storage_8[__main___basesoc_ethmac_rx_cdc_cdc_wrport_adr] <= __main___basesoc_ethmac_rx_cdc_cdc_wrport_dat_w;
	storage_8_dat0 <= storage_8[__main___basesoc_ethmac_rx_cdc_cdc_wrport_adr];
end
always @(posedge sys_clk) begin
	storage_8_dat1 <= storage_8[__main___basesoc_ethmac_rx_cdc_cdc_rdport_adr];
end
assign __main___basesoc_ethmac_rx_cdc_cdc_wrport_dat_r = storage_8_dat0;
assign __main___basesoc_ethmac_rx_cdc_cdc_rdport_dat_r = storage_8_dat1;


//------------------------------------------------------------------------------
// Memory storage_9: 2-words x 14-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 14 
// Port 1 | Read: Async | Write: ---- | 
reg [13:0] storage_9[0:1];
reg [13:0] storage_9_dat0;
always @(posedge sys_clk) begin
	if (__main___basesoc_ethmac_sram61_we)
		storage_9[__main___basesoc_ethmac_sram59_adr] <= __main___basesoc_ethmac_sram62_dat_w;
	storage_9_dat0 <= storage_9[__main___basesoc_ethmac_sram59_adr];
end
always @(posedge sys_clk) begin
end
assign __main___basesoc_ethmac_sram60_dat_r = storage_9_dat0;
assign __main___basesoc_ethmac_sram65_dat_r = storage_9[__main___basesoc_ethmac_sram64_adr];


//------------------------------------------------------------------------------
// Memory mem_1: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 32 
// Port 1 | Read: Sync  | Write: ---- | 
reg [31:0] mem_1[0:382];
reg [8:0] mem_1_adr0;
reg [31:0] mem_1_dat1;
always @(posedge sys_clk) begin
	if (__main___basesoc_ethmac_sram77_we)
		mem_1[__main___basesoc_ethmac_sram75_adr] <= __main___basesoc_ethmac_sram78_dat_w;
	mem_1_adr0 <= __main___basesoc_ethmac_sram75_adr;
end
always @(posedge sys_clk) begin
	mem_1_dat1 <= mem_1[__main___basesoc_ethmac_sram2_adr];
end
assign __main___basesoc_ethmac_sram76_dat_r = mem_1[mem_1_adr0];
assign __main___basesoc_ethmac_sram2_dat_r = mem_1_dat1;


//------------------------------------------------------------------------------
// Memory mem_2: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 32 
// Port 1 | Read: Sync  | Write: ---- | 
reg [31:0] mem_2[0:382];
reg [8:0] mem_2_adr0;
reg [31:0] mem_2_dat1;
always @(posedge sys_clk) begin
	if (__main___basesoc_ethmac_sram81_we)
		mem_2[__main___basesoc_ethmac_sram79_adr] <= __main___basesoc_ethmac_sram82_dat_w;
	mem_2_adr0 <= __main___basesoc_ethmac_sram79_adr;
end
always @(posedge sys_clk) begin
	mem_2_dat1 <= mem_2[__main___basesoc_ethmac_sram3_adr];
end
assign __main___basesoc_ethmac_sram80_dat_r = mem_2[mem_2_adr0];
assign __main___basesoc_ethmac_sram3_dat_r = mem_2_dat1;


//------------------------------------------------------------------------------
// Memory storage_10: 2-words x 14-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 14 
// Port 1 | Read: Async | Write: ---- | 
reg [13:0] storage_10[0:1];
reg [13:0] storage_10_dat0;
always @(posedge sys_clk) begin
	if (__main___basesoc_ethmac_sram147_we)
		storage_10[__main___basesoc_ethmac_sram145_adr] <= __main___basesoc_ethmac_sram148_dat_w;
	storage_10_dat0 <= storage_10[__main___basesoc_ethmac_sram145_adr];
end
always @(posedge sys_clk) begin
end
assign __main___basesoc_ethmac_sram146_dat_r = storage_10_dat0;
assign __main___basesoc_ethmac_sram151_dat_r = storage_10[__main___basesoc_ethmac_sram150_adr];


//------------------------------------------------------------------------------
// Memory mem_3: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
// Port 1 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] mem_3[0:382];
reg [8:0] mem_3_adr0;
reg [8:0] mem_3_adr1;
always @(posedge sys_clk) begin
	if (__main___basesoc_ethmac_sram163_re)
		mem_3_adr0 <= __main___basesoc_ethmac_sram161_adr;
end
always @(posedge sys_clk) begin
	if (__main___basesoc_ethmac_sram4_we[0])
		mem_3[__main___basesoc_ethmac_sram4_adr][7:0] <= __main___basesoc_ethmac_sram4_dat_w[7:0];
	if (__main___basesoc_ethmac_sram4_we[1])
		mem_3[__main___basesoc_ethmac_sram4_adr][15:8] <= __main___basesoc_ethmac_sram4_dat_w[15:8];
	if (__main___basesoc_ethmac_sram4_we[2])
		mem_3[__main___basesoc_ethmac_sram4_adr][23:16] <= __main___basesoc_ethmac_sram4_dat_w[23:16];
	if (__main___basesoc_ethmac_sram4_we[3])
		mem_3[__main___basesoc_ethmac_sram4_adr][31:24] <= __main___basesoc_ethmac_sram4_dat_w[31:24];
	mem_3_adr1 <= __main___basesoc_ethmac_sram4_adr;
end
assign __main___basesoc_ethmac_sram162_dat_r = mem_3[mem_3_adr0];
assign __main___basesoc_ethmac_sram4_dat_r = mem_3[mem_3_adr1];


//------------------------------------------------------------------------------
// Memory mem_4: 383-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
// Port 1 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] mem_4[0:382];
reg [8:0] mem_4_adr0;
reg [8:0] mem_4_adr1;
always @(posedge sys_clk) begin
	if (__main___basesoc_ethmac_sram166_re)
		mem_4_adr0 <= __main___basesoc_ethmac_sram164_adr;
end
always @(posedge sys_clk) begin
	if (__main___basesoc_ethmac_sram5_we[0])
		mem_4[__main___basesoc_ethmac_sram5_adr][7:0] <= __main___basesoc_ethmac_sram5_dat_w[7:0];
	if (__main___basesoc_ethmac_sram5_we[1])
		mem_4[__main___basesoc_ethmac_sram5_adr][15:8] <= __main___basesoc_ethmac_sram5_dat_w[15:8];
	if (__main___basesoc_ethmac_sram5_we[2])
		mem_4[__main___basesoc_ethmac_sram5_adr][23:16] <= __main___basesoc_ethmac_sram5_dat_w[23:16];
	if (__main___basesoc_ethmac_sram5_we[3])
		mem_4[__main___basesoc_ethmac_sram5_adr][31:24] <= __main___basesoc_ethmac_sram5_dat_w[31:24];
	mem_4_adr1 <= __main___basesoc_ethmac_sram5_adr;
end
assign __main___basesoc_ethmac_sram165_dat_r = mem_4[mem_4_adr0];
assign __main___basesoc_ethmac_sram5_dat_r = mem_4[mem_4_adr1];


VexRiscv VexRiscv(
	.clk(sys_clk),
	.dBusWishbone_ACK(__main___basesoc_dbus_ack),
	.dBusWishbone_DAT_MISO(__main___basesoc_dbus_dat_r),
	.dBusWishbone_ERR(__main___basesoc_dbus_err),
	.externalInterruptArray(__main___basesoc_interrupt),
	.externalResetVector(__main___basesoc_vexriscv),
	.iBusWishbone_ACK(__main___basesoc_ibus_ack),
	.iBusWishbone_DAT_MISO(__main___basesoc_ibus_dat_r),
	.iBusWishbone_ERR(__main___basesoc_ibus_err),
	.reset((sys_rst | __main___basesoc_reset)),
	.softwareInterrupt(1'd0),
	.timerInterrupt(1'd0),
	.dBusWishbone_ADR(__main___basesoc_dbus_adr),
	.dBusWishbone_BTE(__main___basesoc_dbus_bte),
	.dBusWishbone_CTI(__main___basesoc_dbus_cti),
	.dBusWishbone_CYC(__main___basesoc_dbus_cyc),
	.dBusWishbone_DAT_MOSI(__main___basesoc_dbus_dat_w),
	.dBusWishbone_SEL(__main___basesoc_dbus_sel),
	.dBusWishbone_STB(__main___basesoc_dbus_stb),
	.dBusWishbone_WE(__main___basesoc_dbus_we),
	.iBusWishbone_ADR(__main___basesoc_ibus_adr),
	.iBusWishbone_BTE(__main___basesoc_ibus_bte),
	.iBusWishbone_CTI(__main___basesoc_ibus_cti),
	.iBusWishbone_CYC(__main___basesoc_ibus_cyc),
	.iBusWishbone_DAT_MOSI(__main___basesoc_ibus_dat_w),
	.iBusWishbone_SEL(__main___basesoc_ibus_sel),
	.iBusWishbone_STB(__main___basesoc_ibus_stb),
	.iBusWishbone_WE(__main___basesoc_ibus_we)
);

(* FREQUENCY_PIN_CLKI = "25.0", FREQUENCY_PIN_CLKOP = "100.0", FREQUENCY_PIN_CLKOS = "200.0", FREQUENCY_PIN_CLKOS2 = "200.0", ICP_CURRENT = "6", LPF_RESISTOR = "16", MFG_ENABLE_FILTEROPAMP = "1", MFG_GMCREF_SEL = "2" *)
EHXPLLL #(
	.CLKFB_DIV(5'd16),
	.CLKI_DIV(1'd1),
	.CLKOP_CPHASE(2'd3),
	.CLKOP_DIV(3'd4),
	.CLKOP_ENABLE("ENABLED"),
	.CLKOP_FPHASE(1'd0),
	.CLKOS2_CPHASE(2'd2),
	.CLKOS2_DIV(2'd2),
	.CLKOS2_ENABLE("ENABLED"),
	.CLKOS2_FPHASE(1'd0),
	.CLKOS3_CPHASE(1'd0),
	.CLKOS3_DIV(1'd1),
	.CLKOS3_ENABLE("ENABLED"),
	.CLKOS3_FPHASE(1'd0),
	.CLKOS_CPHASE(1'd1),
	.CLKOS_DIV(2'd2),
	.CLKOS_ENABLE("ENABLED"),
	.CLKOS_FPHASE(1'd0),
	.FEEDBK_PATH("INT_OS3")
) EHXPLLL (
	.CLKI(__main___crg_clkin),
	.RST(__main___crg_reset),
	.STDBY(__main___crg_stdby),
	.CLKOP(__main___crg_clkout0),
	.CLKOS(__main___crg_clkout1),
	.CLKOS2(__main___crg_clkout2),
	.CLKOS3(builder_basesoc_crg_ecp5pll),
	.LOCK(builder_basesoc_crg_locked)
);

//------------------------------------------------------------------------------
// Memory data_mem_grain0: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain0[0:511];
reg [8:0] data_mem_grain0_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[0])
		data_mem_grain0[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[7:0];
	data_mem_grain0_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[7:0] = data_mem_grain0[data_mem_grain0_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain1: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain1[0:511];
reg [8:0] data_mem_grain1_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[1])
		data_mem_grain1[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[15:8];
	data_mem_grain1_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[15:8] = data_mem_grain1[data_mem_grain1_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain2: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain2[0:511];
reg [8:0] data_mem_grain2_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[2])
		data_mem_grain2[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[23:16];
	data_mem_grain2_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[23:16] = data_mem_grain2[data_mem_grain2_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain3: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain3[0:511];
reg [8:0] data_mem_grain3_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[3])
		data_mem_grain3[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[31:24];
	data_mem_grain3_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[31:24] = data_mem_grain3[data_mem_grain3_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain4: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain4[0:511];
reg [8:0] data_mem_grain4_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[4])
		data_mem_grain4[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[39:32];
	data_mem_grain4_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[39:32] = data_mem_grain4[data_mem_grain4_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain5: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain5[0:511];
reg [8:0] data_mem_grain5_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[5])
		data_mem_grain5[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[47:40];
	data_mem_grain5_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[47:40] = data_mem_grain5[data_mem_grain5_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain6: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain6[0:511];
reg [8:0] data_mem_grain6_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[6])
		data_mem_grain6[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[55:48];
	data_mem_grain6_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[55:48] = data_mem_grain6[data_mem_grain6_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain7: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain7[0:511];
reg [8:0] data_mem_grain7_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[7])
		data_mem_grain7[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[63:56];
	data_mem_grain7_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[63:56] = data_mem_grain7[data_mem_grain7_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain8: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain8[0:511];
reg [8:0] data_mem_grain8_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[8])
		data_mem_grain8[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[71:64];
	data_mem_grain8_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[71:64] = data_mem_grain8[data_mem_grain8_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain9: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain9[0:511];
reg [8:0] data_mem_grain9_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[9])
		data_mem_grain9[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[79:72];
	data_mem_grain9_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[79:72] = data_mem_grain9[data_mem_grain9_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain10: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain10[0:511];
reg [8:0] data_mem_grain10_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[10])
		data_mem_grain10[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[87:80];
	data_mem_grain10_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[87:80] = data_mem_grain10[data_mem_grain10_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain11: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain11[0:511];
reg [8:0] data_mem_grain11_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[11])
		data_mem_grain11[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[95:88];
	data_mem_grain11_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[95:88] = data_mem_grain11[data_mem_grain11_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain12: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain12[0:511];
reg [8:0] data_mem_grain12_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[12])
		data_mem_grain12[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[103:96];
	data_mem_grain12_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[103:96] = data_mem_grain12[data_mem_grain12_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain13: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain13[0:511];
reg [8:0] data_mem_grain13_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[13])
		data_mem_grain13[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[111:104];
	data_mem_grain13_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[111:104] = data_mem_grain13[data_mem_grain13_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain14: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain14[0:511];
reg [8:0] data_mem_grain14_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[14])
		data_mem_grain14[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[119:112];
	data_mem_grain14_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[119:112] = data_mem_grain14[data_mem_grain14_adr0];


//------------------------------------------------------------------------------
// Memory data_mem_grain15: 512-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [7:0] data_mem_grain15[0:511];
reg [8:0] data_mem_grain15_adr0;
always @(posedge sys_clk) begin
	if (__main___basesoc_data_port_we[15])
		data_mem_grain15[__main___basesoc_data_port_adr] <= __main___basesoc_data_port_dat_w[127:120];
	data_mem_grain15_adr0 <= __main___basesoc_data_port_adr;
end
assign __main___basesoc_data_port_dat_r[127:120] = data_mem_grain15[data_mem_grain15_adr0];


FD1S3BX FD1S3BX(
	.CK(sys_clk),
	.D(1'd0),
	.PD((~__main___crg_locked)),
	.Q(builder_rst10)
);

FD1S3BX FD1S3BX_1(
	.CK(sys_clk),
	.D(builder_rst10),
	.PD((~__main___crg_locked)),
	.Q(sys_rst)
);

FD1S3BX FD1S3BX_2(
	.CK(sys2x_clk),
	.D(1'd0),
	.PD((~__main___crg_locked)),
	.Q(builder_rst11)
);

FD1S3BX FD1S3BX_3(
	.CK(sys2x_clk),
	.D(builder_rst11),
	.PD((~__main___crg_locked)),
	.Q(sys2x_rst)
);

FD1S3BX FD1S3BX_4(
	.CK(sys2x_ps_clk),
	.D(1'd0),
	.PD((~__main___crg_locked)),
	.Q(builder_rst12)
);

FD1S3BX FD1S3BX_5(
	.CK(sys2x_ps_clk),
	.D(builder_rst12),
	.PD((~__main___crg_locked)),
	.Q(sys2x_ps_rst)
);

ODDRX1F ODDRX1F(
	.D0(1'd1),
	.D1(1'd0),
	.SCLK(sys2x_ps_clk),
	.Q(sdram_clock)
);

OFS1P3BX OFS1P3BX(
	.D(__main___dfi_p0_address[0]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_a[0])
);

OFS1P3BX OFS1P3BX_1(
	.D(__main___dfi_p0_address[1]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_a[1])
);

OFS1P3BX OFS1P3BX_2(
	.D(__main___dfi_p0_address[2]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_a[2])
);

OFS1P3BX OFS1P3BX_3(
	.D(__main___dfi_p0_address[3]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_a[3])
);

OFS1P3BX OFS1P3BX_4(
	.D(__main___dfi_p0_address[4]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_a[4])
);

OFS1P3BX OFS1P3BX_5(
	.D(__main___dfi_p0_address[5]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_a[5])
);

OFS1P3BX OFS1P3BX_6(
	.D(__main___dfi_p0_address[6]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_a[6])
);

OFS1P3BX OFS1P3BX_7(
	.D(__main___dfi_p0_address[7]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_a[7])
);

OFS1P3BX OFS1P3BX_8(
	.D(__main___dfi_p0_address[8]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_a[8])
);

OFS1P3BX OFS1P3BX_9(
	.D(__main___dfi_p0_address[9]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_a[9])
);

OFS1P3BX OFS1P3BX_10(
	.D(__main___dfi_p0_address[10]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_a[10])
);

OFS1P3BX OFS1P3BX_11(
	.D(__main___dfi_p0_bank[0]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_ba[0])
);

OFS1P3BX OFS1P3BX_12(
	.D(__main___dfi_p0_bank[1]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_ba[1])
);

OFS1P3BX OFS1P3BX_13(
	.D(__main___dfi_p0_ras_n),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_ras_n)
);

OFS1P3BX OFS1P3BX_14(
	.D(__main___dfi_p0_cas_n),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_cas_n)
);

OFS1P3BX OFS1P3BX_15(
	.D(__main___dfi_p0_we_n),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(sdram_we_n)
);

FD1S3BX FD1S3BX_6(
	.CK(eth_tx_clk),
	.D(1'd0),
	.PD(__main___ethphy_reset0),
	.Q(builder_rst13)
);

FD1S3BX FD1S3BX_7(
	.CK(eth_tx_clk),
	.D(builder_rst13),
	.PD(__main___ethphy_reset0),
	.Q(eth_tx_rst)
);

FD1S3BX FD1S3BX_8(
	.CK(eth_rx_clk),
	.D(1'd0),
	.PD(__main___ethphy_reset0),
	.Q(builder_rst14)
);

FD1S3BX FD1S3BX_9(
	.CK(eth_rx_clk),
	.D(builder_rst14),
	.PD(__main___ethphy_reset0),
	.Q(eth_rx_rst)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO (
	.B(i2c_scl),
	.I(1'd0),
	.T((~(~__main___scl))),
	.O(builder_expr)
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_1 (
	.B(i2c_sda),
	.I(1'd0),
	.T((~(__main___oe & (~__main___sda0)))),
	.O(__main___sda1)
);

OFS1P3BX OFS1P3BX_16(
	.D(__main___dfi_p0_wrdata[0]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate0__o)
);

IFS1P3BX IFS1P3BX(
	.D(builder_inferedsdrtristate0__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[0])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_2 (
	.B(sdram_dq[0]),
	.I(builder_inferedsdrtristate0__o),
	.T((~builder_inferedsdrtristate0_oe)),
	.O(builder_inferedsdrtristate0__i)
);

OFS1P3BX OFS1P3BX_17(
	.D(__main___dfi_p0_wrdata[1]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate1__o)
);

IFS1P3BX IFS1P3BX_1(
	.D(builder_inferedsdrtristate1__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[1])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_3 (
	.B(sdram_dq[1]),
	.I(builder_inferedsdrtristate1__o),
	.T((~builder_inferedsdrtristate1_oe)),
	.O(builder_inferedsdrtristate1__i)
);

OFS1P3BX OFS1P3BX_18(
	.D(__main___dfi_p0_wrdata[2]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate2__o)
);

IFS1P3BX IFS1P3BX_2(
	.D(builder_inferedsdrtristate2__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[2])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_4 (
	.B(sdram_dq[2]),
	.I(builder_inferedsdrtristate2__o),
	.T((~builder_inferedsdrtristate2_oe)),
	.O(builder_inferedsdrtristate2__i)
);

OFS1P3BX OFS1P3BX_19(
	.D(__main___dfi_p0_wrdata[3]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate3__o)
);

IFS1P3BX IFS1P3BX_3(
	.D(builder_inferedsdrtristate3__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[3])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_5 (
	.B(sdram_dq[3]),
	.I(builder_inferedsdrtristate3__o),
	.T((~builder_inferedsdrtristate3_oe)),
	.O(builder_inferedsdrtristate3__i)
);

OFS1P3BX OFS1P3BX_20(
	.D(__main___dfi_p0_wrdata[4]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate4__o)
);

IFS1P3BX IFS1P3BX_4(
	.D(builder_inferedsdrtristate4__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[4])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_6 (
	.B(sdram_dq[4]),
	.I(builder_inferedsdrtristate4__o),
	.T((~builder_inferedsdrtristate4_oe)),
	.O(builder_inferedsdrtristate4__i)
);

OFS1P3BX OFS1P3BX_21(
	.D(__main___dfi_p0_wrdata[5]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate5__o)
);

IFS1P3BX IFS1P3BX_5(
	.D(builder_inferedsdrtristate5__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[5])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_7 (
	.B(sdram_dq[5]),
	.I(builder_inferedsdrtristate5__o),
	.T((~builder_inferedsdrtristate5_oe)),
	.O(builder_inferedsdrtristate5__i)
);

OFS1P3BX OFS1P3BX_22(
	.D(__main___dfi_p0_wrdata[6]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate6__o)
);

IFS1P3BX IFS1P3BX_6(
	.D(builder_inferedsdrtristate6__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[6])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_8 (
	.B(sdram_dq[6]),
	.I(builder_inferedsdrtristate6__o),
	.T((~builder_inferedsdrtristate6_oe)),
	.O(builder_inferedsdrtristate6__i)
);

OFS1P3BX OFS1P3BX_23(
	.D(__main___dfi_p0_wrdata[7]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate7__o)
);

IFS1P3BX IFS1P3BX_7(
	.D(builder_inferedsdrtristate7__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[7])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_9 (
	.B(sdram_dq[7]),
	.I(builder_inferedsdrtristate7__o),
	.T((~builder_inferedsdrtristate7_oe)),
	.O(builder_inferedsdrtristate7__i)
);

OFS1P3BX OFS1P3BX_24(
	.D(__main___dfi_p0_wrdata[8]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate8__o)
);

IFS1P3BX IFS1P3BX_8(
	.D(builder_inferedsdrtristate8__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[8])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_10 (
	.B(sdram_dq[8]),
	.I(builder_inferedsdrtristate8__o),
	.T((~builder_inferedsdrtristate8_oe)),
	.O(builder_inferedsdrtristate8__i)
);

OFS1P3BX OFS1P3BX_25(
	.D(__main___dfi_p0_wrdata[9]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate9__o)
);

IFS1P3BX IFS1P3BX_9(
	.D(builder_inferedsdrtristate9__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[9])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_11 (
	.B(sdram_dq[9]),
	.I(builder_inferedsdrtristate9__o),
	.T((~builder_inferedsdrtristate9_oe)),
	.O(builder_inferedsdrtristate9__i)
);

OFS1P3BX OFS1P3BX_26(
	.D(__main___dfi_p0_wrdata[10]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate10__o)
);

IFS1P3BX IFS1P3BX_10(
	.D(builder_inferedsdrtristate10__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[10])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_12 (
	.B(sdram_dq[10]),
	.I(builder_inferedsdrtristate10__o),
	.T((~builder_inferedsdrtristate10_oe)),
	.O(builder_inferedsdrtristate10__i)
);

OFS1P3BX OFS1P3BX_27(
	.D(__main___dfi_p0_wrdata[11]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate11__o)
);

IFS1P3BX IFS1P3BX_11(
	.D(builder_inferedsdrtristate11__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[11])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_13 (
	.B(sdram_dq[11]),
	.I(builder_inferedsdrtristate11__o),
	.T((~builder_inferedsdrtristate11_oe)),
	.O(builder_inferedsdrtristate11__i)
);

OFS1P3BX OFS1P3BX_28(
	.D(__main___dfi_p0_wrdata[12]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate12__o)
);

IFS1P3BX IFS1P3BX_12(
	.D(builder_inferedsdrtristate12__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[12])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_14 (
	.B(sdram_dq[12]),
	.I(builder_inferedsdrtristate12__o),
	.T((~builder_inferedsdrtristate12_oe)),
	.O(builder_inferedsdrtristate12__i)
);

OFS1P3BX OFS1P3BX_29(
	.D(__main___dfi_p0_wrdata[13]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate13__o)
);

IFS1P3BX IFS1P3BX_13(
	.D(builder_inferedsdrtristate13__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[13])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_15 (
	.B(sdram_dq[13]),
	.I(builder_inferedsdrtristate13__o),
	.T((~builder_inferedsdrtristate13_oe)),
	.O(builder_inferedsdrtristate13__i)
);

OFS1P3BX OFS1P3BX_30(
	.D(__main___dfi_p0_wrdata[14]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate14__o)
);

IFS1P3BX IFS1P3BX_14(
	.D(builder_inferedsdrtristate14__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[14])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_16 (
	.B(sdram_dq[14]),
	.I(builder_inferedsdrtristate14__o),
	.T((~builder_inferedsdrtristate14_oe)),
	.O(builder_inferedsdrtristate14__i)
);

OFS1P3BX OFS1P3BX_31(
	.D(__main___dfi_p0_wrdata[15]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate15__o)
);

IFS1P3BX IFS1P3BX_15(
	.D(builder_inferedsdrtristate15__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[15])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_17 (
	.B(sdram_dq[15]),
	.I(builder_inferedsdrtristate15__o),
	.T((~builder_inferedsdrtristate15_oe)),
	.O(builder_inferedsdrtristate15__i)
);

OFS1P3BX OFS1P3BX_32(
	.D(__main___dfi_p0_wrdata[16]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate16__o)
);

IFS1P3BX IFS1P3BX_16(
	.D(builder_inferedsdrtristate16__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[16])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_18 (
	.B(sdram_dq[16]),
	.I(builder_inferedsdrtristate16__o),
	.T((~builder_inferedsdrtristate16_oe)),
	.O(builder_inferedsdrtristate16__i)
);

OFS1P3BX OFS1P3BX_33(
	.D(__main___dfi_p0_wrdata[17]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate17__o)
);

IFS1P3BX IFS1P3BX_17(
	.D(builder_inferedsdrtristate17__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[17])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_19 (
	.B(sdram_dq[17]),
	.I(builder_inferedsdrtristate17__o),
	.T((~builder_inferedsdrtristate17_oe)),
	.O(builder_inferedsdrtristate17__i)
);

OFS1P3BX OFS1P3BX_34(
	.D(__main___dfi_p0_wrdata[18]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate18__o)
);

IFS1P3BX IFS1P3BX_18(
	.D(builder_inferedsdrtristate18__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[18])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_20 (
	.B(sdram_dq[18]),
	.I(builder_inferedsdrtristate18__o),
	.T((~builder_inferedsdrtristate18_oe)),
	.O(builder_inferedsdrtristate18__i)
);

OFS1P3BX OFS1P3BX_35(
	.D(__main___dfi_p0_wrdata[19]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate19__o)
);

IFS1P3BX IFS1P3BX_19(
	.D(builder_inferedsdrtristate19__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[19])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_21 (
	.B(sdram_dq[19]),
	.I(builder_inferedsdrtristate19__o),
	.T((~builder_inferedsdrtristate19_oe)),
	.O(builder_inferedsdrtristate19__i)
);

OFS1P3BX OFS1P3BX_36(
	.D(__main___dfi_p0_wrdata[20]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate20__o)
);

IFS1P3BX IFS1P3BX_20(
	.D(builder_inferedsdrtristate20__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[20])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_22 (
	.B(sdram_dq[20]),
	.I(builder_inferedsdrtristate20__o),
	.T((~builder_inferedsdrtristate20_oe)),
	.O(builder_inferedsdrtristate20__i)
);

OFS1P3BX OFS1P3BX_37(
	.D(__main___dfi_p0_wrdata[21]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate21__o)
);

IFS1P3BX IFS1P3BX_21(
	.D(builder_inferedsdrtristate21__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[21])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_23 (
	.B(sdram_dq[21]),
	.I(builder_inferedsdrtristate21__o),
	.T((~builder_inferedsdrtristate21_oe)),
	.O(builder_inferedsdrtristate21__i)
);

OFS1P3BX OFS1P3BX_38(
	.D(__main___dfi_p0_wrdata[22]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate22__o)
);

IFS1P3BX IFS1P3BX_22(
	.D(builder_inferedsdrtristate22__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[22])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_24 (
	.B(sdram_dq[22]),
	.I(builder_inferedsdrtristate22__o),
	.T((~builder_inferedsdrtristate22_oe)),
	.O(builder_inferedsdrtristate22__i)
);

OFS1P3BX OFS1P3BX_39(
	.D(__main___dfi_p0_wrdata[23]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate23__o)
);

IFS1P3BX IFS1P3BX_23(
	.D(builder_inferedsdrtristate23__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[23])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_25 (
	.B(sdram_dq[23]),
	.I(builder_inferedsdrtristate23__o),
	.T((~builder_inferedsdrtristate23_oe)),
	.O(builder_inferedsdrtristate23__i)
);

OFS1P3BX OFS1P3BX_40(
	.D(__main___dfi_p0_wrdata[24]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate24__o)
);

IFS1P3BX IFS1P3BX_24(
	.D(builder_inferedsdrtristate24__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[24])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_26 (
	.B(sdram_dq[24]),
	.I(builder_inferedsdrtristate24__o),
	.T((~builder_inferedsdrtristate24_oe)),
	.O(builder_inferedsdrtristate24__i)
);

OFS1P3BX OFS1P3BX_41(
	.D(__main___dfi_p0_wrdata[25]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate25__o)
);

IFS1P3BX IFS1P3BX_25(
	.D(builder_inferedsdrtristate25__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[25])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_27 (
	.B(sdram_dq[25]),
	.I(builder_inferedsdrtristate25__o),
	.T((~builder_inferedsdrtristate25_oe)),
	.O(builder_inferedsdrtristate25__i)
);

OFS1P3BX OFS1P3BX_42(
	.D(__main___dfi_p0_wrdata[26]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate26__o)
);

IFS1P3BX IFS1P3BX_26(
	.D(builder_inferedsdrtristate26__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[26])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_28 (
	.B(sdram_dq[26]),
	.I(builder_inferedsdrtristate26__o),
	.T((~builder_inferedsdrtristate26_oe)),
	.O(builder_inferedsdrtristate26__i)
);

OFS1P3BX OFS1P3BX_43(
	.D(__main___dfi_p0_wrdata[27]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate27__o)
);

IFS1P3BX IFS1P3BX_27(
	.D(builder_inferedsdrtristate27__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[27])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_29 (
	.B(sdram_dq[27]),
	.I(builder_inferedsdrtristate27__o),
	.T((~builder_inferedsdrtristate27_oe)),
	.O(builder_inferedsdrtristate27__i)
);

OFS1P3BX OFS1P3BX_44(
	.D(__main___dfi_p0_wrdata[28]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate28__o)
);

IFS1P3BX IFS1P3BX_28(
	.D(builder_inferedsdrtristate28__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[28])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_30 (
	.B(sdram_dq[28]),
	.I(builder_inferedsdrtristate28__o),
	.T((~builder_inferedsdrtristate28_oe)),
	.O(builder_inferedsdrtristate28__i)
);

OFS1P3BX OFS1P3BX_45(
	.D(__main___dfi_p0_wrdata[29]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate29__o)
);

IFS1P3BX IFS1P3BX_29(
	.D(builder_inferedsdrtristate29__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[29])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_31 (
	.B(sdram_dq[29]),
	.I(builder_inferedsdrtristate29__o),
	.T((~builder_inferedsdrtristate29_oe)),
	.O(builder_inferedsdrtristate29__i)
);

OFS1P3BX OFS1P3BX_46(
	.D(__main___dfi_p0_wrdata[30]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate30__o)
);

IFS1P3BX IFS1P3BX_30(
	.D(builder_inferedsdrtristate30__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[30])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_32 (
	.B(sdram_dq[30]),
	.I(builder_inferedsdrtristate30__o),
	.T((~builder_inferedsdrtristate30_oe)),
	.O(builder_inferedsdrtristate30__i)
);

OFS1P3BX OFS1P3BX_47(
	.D(__main___dfi_p0_wrdata[31]),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(builder_inferedsdrtristate31__o)
);

IFS1P3BX IFS1P3BX_31(
	.D(builder_inferedsdrtristate31__i),
	.PD(1'd0),
	.SCLK(sys_clk),
	.SP(1'd1),
	.Q(__main___dfi_p0_rddata[31])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO_33 (
	.B(sdram_dq[31]),
	.I(builder_inferedsdrtristate31__o),
	.T((~builder_inferedsdrtristate31_oe)),
	.O(builder_inferedsdrtristate31__i)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2023-06-15 03:24:59.
//------------------------------------------------------------------------------
